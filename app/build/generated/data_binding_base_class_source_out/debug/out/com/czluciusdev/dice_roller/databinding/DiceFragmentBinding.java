// Generated by data binding compiler. Do not edit!
package com.czluciusdev.dice_roller.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.czluciusdev.dice_roller.DiceViewModel;
import com.czluciusdev.dice_roller.R;
import com.google.android.material.bottomappbar.BottomAppBar;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class DiceFragmentBinding extends ViewDataBinding {
  @NonNull
  public final BottomAppBar bottomApp;

  @NonNull
  public final RelativeLayout diceCanvas;

  @NonNull
  public final TextView diceNum;

  @NonNull
  public final LinearLayout diceNumHolder;

  @NonNull
  public final FloatingActionButton fabRoll;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final LinearLayout removeArea;

  @NonNull
  public final TextView textView;

  @Bindable
  protected DiceViewModel mVm;

  protected DiceFragmentBinding(Object _bindingComponent, View _root, int _localFieldCount,
      BottomAppBar bottomApp, RelativeLayout diceCanvas, TextView diceNum,
      LinearLayout diceNumHolder, FloatingActionButton fabRoll, ImageView imageView,
      LinearLayout removeArea, TextView textView) {
    super(_bindingComponent, _root, _localFieldCount);
    this.bottomApp = bottomApp;
    this.diceCanvas = diceCanvas;
    this.diceNum = diceNum;
    this.diceNumHolder = diceNumHolder;
    this.fabRoll = fabRoll;
    this.imageView = imageView;
    this.removeArea = removeArea;
    this.textView = textView;
  }

  public abstract void setVm(@Nullable DiceViewModel vm);

  @Nullable
  public DiceViewModel getVm() {
    return mVm;
  }

  @NonNull
  public static DiceFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.dice_fragment, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static DiceFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<DiceFragmentBinding>inflateInternal(inflater, R.layout.dice_fragment, root, attachToRoot, component);
  }

  @NonNull
  public static DiceFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.dice_fragment, null, false, component)
   */
  @NonNull
  @Deprecated
  public static DiceFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<DiceFragmentBinding>inflateInternal(inflater, R.layout.dice_fragment, null, false, component);
  }

  public static DiceFragmentBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static DiceFragmentBinding bind(@NonNull View view, @Nullable Object component) {
    return (DiceFragmentBinding)bind(component, view, R.layout.dice_fragment);
  }
}
