kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher
kotlinx.coroutines.DebugKt
kotlinx.coroutines.flow.FlowKt__DelayKt$debounce$2$values$1$invokeSuspend$$inlined$collect$1
androidx.recyclerview.widget.ThreadUtil
kotlin.jvm.internal.PropertyReference1Impl:
    public java.lang.Object get(java.lang.Object)
androidx.databinding.adapters.ObservableListAdapter
kotlin.collections.EmptyIterator
androidx.core.text.util.FindAddress
android.support.v4.media.session.MediaControllerCompat$TransportControlsApi23
androidx.databinding.adapters.ViewGroupBindingAdapter
androidx.recyclerview.R$string
kotlin.jvm.JvmField
androidx.media.MediaBrowserServiceCompat$ServiceHandler
kotlin.jvm.functions.Function12
kotlin.ranges.UIntProgression
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$6$lambda$2
androidx.cardview.widget.CardViewBaseImpl:
    private androidx.cardview.widget.RoundRectDrawableWithShadow createBackground(android.content.Context,android.content.res.ColorStateList,float,float,float)
    public void initialize(androidx.cardview.widget.CardViewDelegate,android.content.Context,android.content.res.ColorStateList,float,float,float)
androidx.annotation.ContentView
androidx.fragment.ktx.R$color
androidx.core.view.accessibility.AccessibilityViewCommand$MoveHtmlArguments:
    public java.lang.String getHTMLElement()
kotlin.coroutines.jvm.internal.CoroutineStackFrame
androidx.core.provider.FontsContractCompat$4$2
androidx.transition.ViewUtils:
    static void setAnimationMatrix(android.view.View,android.graphics.Matrix)
    private void <init>()
    private static final java.lang.String TAG
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$4
androidx.fragment.R$styleable:
    private void <init>()
kotlin.coroutines.jvm.internal.RestrictedContinuationImpl
androidx.cardview.widget.CardViewApi21Impl:
    public void initialize(androidx.cardview.widget.CardViewDelegate,android.content.Context,android.content.res.ColorStateList,float,float,float)
kotlinx.coroutines.CompletableDeferredImpl
androidx.slidingpanelayout.R$style
com.google.android.material.chip.ChipDrawable:
    public static com.google.android.material.chip.ChipDrawable createFromResource(android.content.Context,int)
    public void getChipTouchBounds(android.graphics.RectF)
    boolean isShapeThemingEnabled()
    public void setTextResource(int)
    public boolean isChipIconVisible()
    public boolean isChipIconEnabled()
    public void setChipIconEnabledResource(int)
    public void setChipIconEnabled(boolean)
    public boolean isCloseIconEnabled()
    public void setCloseIconVisible(int)
    public void setCloseIconEnabledResource(int)
    public void setCloseIconEnabled(boolean)
    public boolean isCheckedIconVisible()
    public boolean isCheckedIconEnabled()
    public void setCheckedIconEnabledResource(int)
    public void setCheckedIconEnabled(boolean)
    public int getMaxWidth()
    private static final boolean DEBUG
    private static final java.lang.String NAMESPACE_APP
kotlin.jvm.internal.TypeReference$asString$args$1
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$reduce$1
com.google.android.material.internal.ParcelableSparseIntArray
androidx.recyclerview.widget.MessageThreadUtil$1
androidx.collection.SimpleArrayMap:
    private static final boolean DEBUG
    private static final java.lang.String TAG
    private static final boolean CONCURRENT_MODIFICATION_EXCEPTIONS
    private static final int BASE_SIZE
    private static final int CACHE_SIZE
kotlinx.coroutines.channels.Receive
androidx.core.graphics.TypefaceCompat:
    private void <init>()
androidx.navigation.ui.AppBarConfigurationKt
kotlin.contracts.ContractBuilderKt
com.google.android.material.datepicker.DateSelector:
    public abstract void setSelection(java.lang.Object)
    public abstract int getDefaultTitleResId()
kotlin.sequences.DropSequence
androidx.viewbinding.BuildConfig
androidx.media.R$drawable
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView:
    public void clearSelection()
    public synthetic bridge int lookForSelectablePosition(int,boolean)
kotlin.coroutines.jvm.internal.Boxing
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21$2
kotlinx.coroutines.flow.FlowKt__DelayKt$debounce$2$values$1
kotlinx.coroutines.JobKt:
    public static final boolean isActive(kotlin.coroutines.CoroutineContext)
    public static final kotlinx.coroutines.DisposableHandle DisposableHandle(kotlin.jvm.functions.Function0)
    public static final kotlinx.coroutines.CompletableJob Job(kotlinx.coroutines.Job)
    public static synthetic kotlinx.coroutines.CompletableJob Job$default(kotlinx.coroutines.Job,int,java.lang.Object)
    public static final synthetic kotlinx.coroutines.Job Job(kotlinx.coroutines.Job)
    public static synthetic kotlinx.coroutines.Job Job$default(kotlinx.coroutines.Job,int,java.lang.Object)
    public static final synthetic void cancel(kotlin.coroutines.CoroutineContext)
    public static final synthetic boolean cancel(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
    public static synthetic boolean cancel$default(kotlin.coroutines.CoroutineContext,java.lang.Throwable,int,java.lang.Object)
    public static final void cancel(kotlinx.coroutines.Job,java.lang.String,java.lang.Throwable)
    public static synthetic void cancel$default(kotlinx.coroutines.Job,java.lang.String,java.lang.Throwable,int,java.lang.Object)
    public static final java.lang.Object cancelAndJoin(kotlinx.coroutines.Job,kotlin.coroutines.Continuation)
    public static final synthetic void cancelChildren(kotlin.coroutines.CoroutineContext)
    public static final synthetic void cancelChildren(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
    public static synthetic void cancelChildren$default(kotlin.coroutines.CoroutineContext,java.lang.Throwable,int,java.lang.Object)
    public static final void cancelChildren(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException)
    public static synthetic void cancelChildren$default(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException,int,java.lang.Object)
    public static final synthetic void cancelChildren(kotlinx.coroutines.Job)
    public static final synthetic void cancelChildren(kotlinx.coroutines.Job,java.lang.Throwable)
    public static synthetic void cancelChildren$default(kotlinx.coroutines.Job,java.lang.Throwable,int,java.lang.Object)
    public static final void cancelChildren(kotlinx.coroutines.Job,java.util.concurrent.CancellationException)
    public static synthetic void cancelChildren$default(kotlinx.coroutines.Job,java.util.concurrent.CancellationException,int,java.lang.Object)
    public static final void cancelFutureOnCancellation(kotlinx.coroutines.CancellableContinuation,java.util.concurrent.Future)
    public static final kotlinx.coroutines.DisposableHandle cancelFutureOnCompletion(kotlinx.coroutines.Job,java.util.concurrent.Future)
    public static final kotlinx.coroutines.DisposableHandle disposeOnCompletion(kotlinx.coroutines.Job,kotlinx.coroutines.DisposableHandle)
    public static final void ensureActive(kotlin.coroutines.CoroutineContext)
    public static final void ensureActive(kotlinx.coroutines.Job)
androidx.transition.ChangeScroll
androidx.navigation.fragment.R$dimen
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1$2
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$3
android.support.v4.media.MediaDescriptionCompat:
    public java.lang.String getMediaId()
    public java.lang.CharSequence getTitle()
    public java.lang.CharSequence getSubtitle()
    public java.lang.CharSequence getDescription()
    public android.graphics.Bitmap getIconBitmap()
    public android.net.Uri getIconUri()
    public android.os.Bundle getExtras()
    public android.net.Uri getMediaUri()
    public static final java.lang.String EXTRA_BT_FOLDER_TYPE
    public static final long BT_FOLDER_TYPE_MIXED
    public static final long BT_FOLDER_TYPE_TITLES
    public static final long BT_FOLDER_TYPE_ALBUMS
    public static final long BT_FOLDER_TYPE_ARTISTS
    public static final long BT_FOLDER_TYPE_GENRES
    public static final long BT_FOLDER_TYPE_PLAYLISTS
    public static final long BT_FOLDER_TYPE_YEARS
    public static final java.lang.String EXTRA_DOWNLOAD_STATUS
    public static final long STATUS_NOT_DOWNLOADED
    public static final long STATUS_DOWNLOADING
    public static final long STATUS_DOWNLOADED
    public static final java.lang.String DESCRIPTION_KEY_MEDIA_URI
    public static final java.lang.String DESCRIPTION_KEY_NULL_BUNDLE_FLAG
kotlinx.coroutines.channels.ActorKt
androidx.viewpager.R$integer
kotlinx.coroutines.flow.FlowKt__TransformKt$unsafeTransform$$inlined$unsafeFlow$6
kotlin.concurrent.ThreadsKt
kotlinx.coroutines.CancellableContinuationImpl
androidx.media.AudioAttributesImplBase:
    void <init>(int,int,int,int)
    public static androidx.media.AudioAttributesImpl fromBundle(android.os.Bundle)
    public java.lang.Object getAudioAttributes()
    public int getVolumeControlStream()
    public int getRawLegacyStreamType()
    public android.os.Bundle toBundle()
kotlinx.coroutines.channels.BroadcastChannelKt
androidx.appcompat.widget.ActionMenuView$LayoutParams:
    void <init>(int,int,boolean)
kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$$inlined$collect$1
androidx.activity.ktx.R$string
androidx.databinding.ObservableField
kotlin.collections.ArraysKt___ArraysJvmKt:
    private static final java.lang.Object elementAt(java.lang.Object[],int)
    private static final byte elementAt(byte[],int)
    private static final short elementAt(short[],int)
    private static final int elementAt(int[],int)
    private static final long elementAt(long[],int)
    private static final float elementAt(float[],int)
    private static final double elementAt(double[],int)
    private static final boolean elementAt(boolean[],int)
    private static final char elementAt(char[],int)
    public static final java.util.List filterIsInstance(java.lang.Object[],java.lang.Class)
    public static final java.util.Collection filterIsInstanceTo(java.lang.Object[],java.util.Collection,java.lang.Class)
    public static final java.util.List asList(java.lang.Object[])
    public static final java.util.List asList(byte[])
    public static final java.util.List asList(short[])
    public static final java.util.List asList(int[])
    public static final java.util.List asList(long[])
    public static final java.util.List asList(float[])
    public static final java.util.List asList(double[])
    public static final java.util.List asList(boolean[])
    public static final java.util.List asList(char[])
    public static final int binarySearch(java.lang.Object[],java.lang.Object,java.util.Comparator,int,int)
    public static synthetic int binarySearch$default(java.lang.Object[],java.lang.Object,java.util.Comparator,int,int,int,java.lang.Object)
    public static final int binarySearch(java.lang.Object[],java.lang.Object,int,int)
    public static synthetic int binarySearch$default(java.lang.Object[],java.lang.Object,int,int,int,java.lang.Object)
    public static final int binarySearch(byte[],byte,int,int)
    public static synthetic int binarySearch$default(byte[],byte,int,int,int,java.lang.Object)
    public static final int binarySearch(short[],short,int,int)
    public static synthetic int binarySearch$default(short[],short,int,int,int,java.lang.Object)
    public static final int binarySearch(int[],int,int,int)
    public static synthetic int binarySearch$default(int[],int,int,int,int,java.lang.Object)
    public static final int binarySearch(long[],long,int,int)
    public static synthetic int binarySearch$default(long[],long,int,int,int,java.lang.Object)
    public static final int binarySearch(float[],float,int,int)
    public static synthetic int binarySearch$default(float[],float,int,int,int,java.lang.Object)
    public static final int binarySearch(double[],double,int,int)
    public static synthetic int binarySearch$default(double[],double,int,int,int,java.lang.Object)
    public static final int binarySearch(char[],char,int,int)
    public static synthetic int binarySearch$default(char[],char,int,int,int,java.lang.Object)
    private static final boolean contentDeepEqualsInline(java.lang.Object[],java.lang.Object[])
    private static final int contentDeepHashCodeInline(java.lang.Object[])
    private static final java.lang.String contentDeepToStringInline(java.lang.Object[])
    private static final boolean contentEquals(java.lang.Object[],java.lang.Object[])
    private static final boolean contentEquals(byte[],byte[])
    private static final boolean contentEquals(short[],short[])
    private static final boolean contentEquals(int[],int[])
    private static final boolean contentEquals(long[],long[])
    private static final boolean contentEquals(float[],float[])
    private static final boolean contentEquals(double[],double[])
    private static final boolean contentEquals(boolean[],boolean[])
    private static final boolean contentEquals(char[],char[])
    private static final int contentHashCode(java.lang.Object[])
    private static final int contentHashCode(byte[])
    private static final int contentHashCode(short[])
    private static final int contentHashCode(int[])
    private static final int contentHashCode(long[])
    private static final int contentHashCode(float[])
    private static final int contentHashCode(double[])
    private static final int contentHashCode(boolean[])
    private static final int contentHashCode(char[])
    private static final java.lang.String contentToString(java.lang.Object[])
    private static final java.lang.String contentToString(byte[])
    private static final java.lang.String contentToString(short[])
    private static final java.lang.String contentToString(int[])
    private static final java.lang.String contentToString(long[])
    private static final java.lang.String contentToString(float[])
    private static final java.lang.String contentToString(double[])
    private static final java.lang.String contentToString(boolean[])
    private static final java.lang.String contentToString(char[])
    public static final java.lang.Object[] copyInto(java.lang.Object[],java.lang.Object[],int,int,int)
    public static synthetic java.lang.Object[] copyInto$default(java.lang.Object[],java.lang.Object[],int,int,int,int,java.lang.Object)
    public static final byte[] copyInto(byte[],byte[],int,int,int)
    public static synthetic byte[] copyInto$default(byte[],byte[],int,int,int,int,java.lang.Object)
    public static final short[] copyInto(short[],short[],int,int,int)
    public static synthetic short[] copyInto$default(short[],short[],int,int,int,int,java.lang.Object)
    public static final int[] copyInto(int[],int[],int,int,int)
    public static synthetic int[] copyInto$default(int[],int[],int,int,int,int,java.lang.Object)
    public static final long[] copyInto(long[],long[],int,int,int)
    public static synthetic long[] copyInto$default(long[],long[],int,int,int,int,java.lang.Object)
    public static final float[] copyInto(float[],float[],int,int,int)
    public static synthetic float[] copyInto$default(float[],float[],int,int,int,int,java.lang.Object)
    public static final double[] copyInto(double[],double[],int,int,int)
    public static synthetic double[] copyInto$default(double[],double[],int,int,int,int,java.lang.Object)
    public static final boolean[] copyInto(boolean[],boolean[],int,int,int)
    public static synthetic boolean[] copyInto$default(boolean[],boolean[],int,int,int,int,java.lang.Object)
    public static final char[] copyInto(char[],char[],int,int,int)
    public static synthetic char[] copyInto$default(char[],char[],int,int,int,int,java.lang.Object)
    private static final java.lang.Object[] copyOf(java.lang.Object[])
    private static final byte[] copyOf(byte[])
    private static final short[] copyOf(short[])
    private static final int[] copyOf(int[])
    private static final long[] copyOf(long[])
    private static final float[] copyOf(float[])
    private static final double[] copyOf(double[])
    private static final boolean[] copyOf(boolean[])
    private static final char[] copyOf(char[])
    private static final byte[] copyOf(byte[],int)
    private static final short[] copyOf(short[],int)
    private static final int[] copyOf(int[],int)
    private static final long[] copyOf(long[],int)
    private static final float[] copyOf(float[],int)
    private static final double[] copyOf(double[],int)
    private static final boolean[] copyOf(boolean[],int)
    private static final char[] copyOf(char[],int)
    private static final java.lang.Object[] copyOf(java.lang.Object[],int)
    private static final java.lang.Object[] copyOfRangeInline(java.lang.Object[],int,int)
    private static final byte[] copyOfRangeInline(byte[],int,int)
    private static final short[] copyOfRangeInline(short[],int,int)
    private static final int[] copyOfRangeInline(int[],int,int)
    private static final long[] copyOfRangeInline(long[],int,int)
    private static final float[] copyOfRangeInline(float[],int,int)
    private static final double[] copyOfRangeInline(double[],int,int)
    private static final boolean[] copyOfRangeInline(boolean[],int,int)
    private static final char[] copyOfRangeInline(char[],int,int)
    public static final java.lang.Object[] copyOfRange(java.lang.Object[],int,int)
    public static final byte[] copyOfRange(byte[],int,int)
    public static final short[] copyOfRange(short[],int,int)
    public static final int[] copyOfRange(int[],int,int)
    public static final long[] copyOfRange(long[],int,int)
    public static final float[] copyOfRange(float[],int,int)
    public static final double[] copyOfRange(double[],int,int)
    public static final boolean[] copyOfRange(boolean[],int,int)
    public static final char[] copyOfRange(char[],int,int)
    public static final void fill(java.lang.Object[],java.lang.Object,int,int)
    public static synthetic void fill$default(java.lang.Object[],java.lang.Object,int,int,int,java.lang.Object)
    public static final void fill(byte[],byte,int,int)
    public static synthetic void fill$default(byte[],byte,int,int,int,java.lang.Object)
    public static final void fill(short[],short,int,int)
    public static synthetic void fill$default(short[],short,int,int,int,java.lang.Object)
    public static final void fill(int[],int,int,int)
    public static synthetic void fill$default(int[],int,int,int,int,java.lang.Object)
    public static final void fill(long[],long,int,int)
    public static synthetic void fill$default(long[],long,int,int,int,java.lang.Object)
    public static final void fill(float[],float,int,int)
    public static synthetic void fill$default(float[],float,int,int,int,java.lang.Object)
    public static final void fill(double[],double,int,int)
    public static synthetic void fill$default(double[],double,int,int,int,java.lang.Object)
    public static final void fill(boolean[],boolean,int,int)
    public static synthetic void fill$default(boolean[],boolean,int,int,int,java.lang.Object)
    public static final void fill(char[],char,int,int)
    public static synthetic void fill$default(char[],char,int,int,int,java.lang.Object)
    public static final java.lang.Object[] plus(java.lang.Object[],java.lang.Object)
    public static final byte[] plus(byte[],byte)
    public static final short[] plus(short[],short)
    public static final int[] plus(int[],int)
    public static final long[] plus(long[],long)
    public static final float[] plus(float[],float)
    public static final double[] plus(double[],double)
    public static final boolean[] plus(boolean[],boolean)
    public static final char[] plus(char[],char)
    public static final java.lang.Object[] plus(java.lang.Object[],java.util.Collection)
    public static final byte[] plus(byte[],java.util.Collection)
    public static final short[] plus(short[],java.util.Collection)
    public static final int[] plus(int[],java.util.Collection)
    public static final long[] plus(long[],java.util.Collection)
    public static final float[] plus(float[],java.util.Collection)
    public static final double[] plus(double[],java.util.Collection)
    public static final boolean[] plus(boolean[],java.util.Collection)
    public static final char[] plus(char[],java.util.Collection)
    public static final java.lang.Object[] plus(java.lang.Object[],java.lang.Object[])
    public static final byte[] plus(byte[],byte[])
    public static final short[] plus(short[],short[])
    public static final int[] plus(int[],int[])
    public static final long[] plus(long[],long[])
    public static final float[] plus(float[],float[])
    public static final double[] plus(double[],double[])
    public static final boolean[] plus(boolean[],boolean[])
    public static final char[] plus(char[],char[])
    private static final java.lang.Object[] plusElement(java.lang.Object[],java.lang.Object)
    public static final void sort(int[])
    public static final void sort(long[])
    public static final void sort(byte[])
    public static final void sort(short[])
    public static final void sort(double[])
    public static final void sort(float[])
    public static final void sort(char[])
    private static final void sort(java.lang.Comparable[])
    public static final void sort(java.lang.Object[])
    public static final void sort(java.lang.Object[],int,int)
    public static synthetic void sort$default(java.lang.Object[],int,int,int,java.lang.Object)
    public static final void sort(byte[],int,int)
    public static synthetic void sort$default(byte[],int,int,int,java.lang.Object)
    public static final void sort(short[],int,int)
    public static synthetic void sort$default(short[],int,int,int,java.lang.Object)
    public static final void sort(int[],int,int)
    public static synthetic void sort$default(int[],int,int,int,java.lang.Object)
    public static final void sort(long[],int,int)
    public static synthetic void sort$default(long[],int,int,int,java.lang.Object)
    public static final void sort(float[],int,int)
    public static synthetic void sort$default(float[],int,int,int,java.lang.Object)
    public static final void sort(double[],int,int)
    public static synthetic void sort$default(double[],int,int,int,java.lang.Object)
    public static final void sort(char[],int,int)
    public static synthetic void sort$default(char[],int,int,int,java.lang.Object)
    public static final void sortWith(java.lang.Object[],java.util.Comparator)
    public static final void sortWith(java.lang.Object[],java.util.Comparator,int,int)
    public static synthetic void sortWith$default(java.lang.Object[],java.util.Comparator,int,int,int,java.lang.Object)
    public static final java.lang.Byte[] toTypedArray(byte[])
    public static final java.lang.Short[] toTypedArray(short[])
    public static final java.lang.Integer[] toTypedArray(int[])
    public static final java.lang.Long[] toTypedArray(long[])
    public static final java.lang.Float[] toTypedArray(float[])
    public static final java.lang.Double[] toTypedArray(double[])
    public static final java.lang.Boolean[] toTypedArray(boolean[])
    public static final java.lang.Character[] toTypedArray(char[])
    public static final java.util.SortedSet toSortedSet(java.lang.Comparable[])
    public static final java.util.SortedSet toSortedSet(byte[])
    public static final java.util.SortedSet toSortedSet(short[])
    public static final java.util.SortedSet toSortedSet(int[])
    public static final java.util.SortedSet toSortedSet(long[])
    public static final java.util.SortedSet toSortedSet(float[])
    public static final java.util.SortedSet toSortedSet(double[])
    public static final java.util.SortedSet toSortedSet(boolean[])
    public static final java.util.SortedSet toSortedSet(char[])
    public static final java.util.SortedSet toSortedSet(java.lang.Object[],java.util.Comparator)
    public void <init>()
androidx.core.text.util.LinkifyCompat$LinkifyMask
androidx.media.MediaBrowserServiceCompatApi21$ResultWrapper
kotlinx.coroutines.flow.FlowKt__MigrationKt$combine$$inlined$combine$2$1
com.google.android.material.internal.ThemeEnforcement:
    private void <init>()
    public static boolean isAppCompatTheme(android.content.Context)
    public static boolean isMaterialTheme(android.content.Context)
    private static final java.lang.String APPCOMPAT_THEME_NAME
    private static final java.lang.String MATERIAL_THEME_NAME
com.google.android.material.internal.package-info
androidx.databinding.library.baseAdapters.DataBinderMapperImpl$InnerBrLookup
androidx.core.widget.TextViewKt$doAfterTextChanged$$inlined$addTextChangedListener$1
kotlinx.coroutines.channels.AbstractChannel$onReceive$1
kotlinx.coroutines.DispatchedTask
kotlinx.coroutines.flow.internal.CombineKt$combineTransformInternal$2$invokeSuspend$$inlined$select$lambda$3
androidx.appcompat.widget.PopupMenu$OnDismissListener
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$3
kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2$emit$1
kotlin.collections.ByteIterator
kotlinx.coroutines.RunnableKt
kotlinx.coroutines.channels.ChannelsKt
androidx.vectordrawable.R$layout
kotlin.coroutines.experimental.SequenceBuilder
androidx.transition.ChangeImageTransform$3
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat
androidx.media.R$dimen
kotlinx.coroutines.AbstractCoroutine
android.support.v4.media.session.PlaybackStateCompat$Builder
kotlinx.coroutines.channels.AbstractChannel$TryPollDesc
androidx.drawerlayout.R$string
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combine$2$2
androidx.appcompat.widget.DrawableUtils:
    private void <init>()
    public static android.graphics.Rect getOpticalBounds(android.graphics.drawable.Drawable)
    private static final java.lang.String TAG
    private static final java.lang.String VECTOR_DRAWABLE_CLAZZ_NAME
androidx.core.app.ComponentActivity:
    public void putExtraData(androidx.core.app.ComponentActivity$ExtraData)
    public androidx.core.app.ComponentActivity$ExtraData getExtraData(java.lang.Class)
    public androidx.lifecycle.Lifecycle getLifecycle()
android.support.v4.media.MediaMetadataCompatApi21$Builder
kotlin.jvm.internal.ArrayIntIterator
androidx.core.view.ScrollingView
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$sendBlocking$1
kotlinx.coroutines.scheduling.TasksKt
kotlin.coroutines.CombinedContext$Serialized
kotlinx.coroutines.flow.FlowKt__MigrationKt$combineLatest$$inlined$combine$3$1
androidx.core.graphics.BlendModeUtils$1
androidx.databinding.ObservableList$OnListChangedCallback:
    public abstract void onChanged(androidx.databinding.ObservableList)
    public abstract void onItemRangeChanged(androidx.databinding.ObservableList,int,int)
    public abstract void onItemRangeInserted(androidx.databinding.ObservableList,int,int)
    public abstract void onItemRangeMoved(androidx.databinding.ObservableList,int,int,int)
    public abstract void onItemRangeRemoved(androidx.databinding.ObservableList,int,int)
kotlin.jvm.JvmMultifileClass
androidx.media.MediaBrowserServiceCompat$2
kotlin.internal.ProgressionUtilKt:
    private static final long mod(long,long)
    private static final long differenceModulo(long,long,long)
    public static final long getProgressionLastElement(long,long,long)
androidx.legacy.coreui.R$drawable
kotlinx.coroutines.AwaitKt$awaitAll$1
androidx.appcompat.R$color:
    private void <init>()
kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl
androidx.navigation.NavGraphViewModelLazyKt$navGraphViewModels$1
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransform$1$1
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1
android.support.v4.media.session.PlaybackStateCompat:
    public static int toKeyCode(long)
    public int getState()
    public long getPosition()
    public long getLastPositionUpdateTime()
    public long getCurrentPosition(java.lang.Long)
    public long getBufferedPosition()
    public float getPlaybackSpeed()
    public long getActions()
    public java.util.List getCustomActions()
    public int getErrorCode()
    public java.lang.CharSequence getErrorMessage()
    public long getActiveQueueItemId()
    public android.os.Bundle getExtras()
    public java.lang.Object getPlaybackState()
    public static final long ACTION_STOP
    public static final long ACTION_PAUSE
    public static final long ACTION_PLAY
    public static final long ACTION_REWIND
    public static final long ACTION_SKIP_TO_PREVIOUS
    public static final long ACTION_SKIP_TO_NEXT
    public static final long ACTION_FAST_FORWARD
    public static final long ACTION_SET_RATING
    public static final long ACTION_SEEK_TO
    public static final long ACTION_PLAY_PAUSE
    public static final long ACTION_PLAY_FROM_MEDIA_ID
    public static final long ACTION_PLAY_FROM_SEARCH
    public static final long ACTION_SKIP_TO_QUEUE_ITEM
    public static final long ACTION_PLAY_FROM_URI
    public static final long ACTION_PREPARE
    public static final long ACTION_PREPARE_FROM_MEDIA_ID
    public static final long ACTION_PREPARE_FROM_SEARCH
    public static final long ACTION_PREPARE_FROM_URI
    public static final long ACTION_SET_REPEAT_MODE
    public static final long ACTION_SET_SHUFFLE_MODE_ENABLED
    public static final long ACTION_SET_CAPTIONING_ENABLED
    public static final long ACTION_SET_SHUFFLE_MODE
    public static final int STATE_NONE
    public static final int STATE_STOPPED
    public static final int STATE_PAUSED
    public static final int STATE_PLAYING
    public static final int STATE_FAST_FORWARDING
    public static final int STATE_REWINDING
    public static final int STATE_BUFFERING
    public static final int STATE_ERROR
    public static final int STATE_CONNECTING
    public static final int STATE_SKIPPING_TO_PREVIOUS
    public static final int STATE_SKIPPING_TO_NEXT
    public static final int STATE_SKIPPING_TO_QUEUE_ITEM
    public static final long PLAYBACK_POSITION_UNKNOWN
    public static final int REPEAT_MODE_INVALID
    public static final int REPEAT_MODE_NONE
    public static final int REPEAT_MODE_ONE
    public static final int REPEAT_MODE_ALL
    public static final int REPEAT_MODE_GROUP
    public static final int SHUFFLE_MODE_INVALID
    public static final int SHUFFLE_MODE_NONE
    public static final int SHUFFLE_MODE_ALL
    public static final int SHUFFLE_MODE_GROUP
    public static final int ERROR_CODE_UNKNOWN_ERROR
    public static final int ERROR_CODE_APP_ERROR
    public static final int ERROR_CODE_NOT_SUPPORTED
    public static final int ERROR_CODE_AUTHENTICATION_EXPIRED
    public static final int ERROR_CODE_PREMIUM_ACCOUNT_REQUIRED
    public static final int ERROR_CODE_CONCURRENT_STREAM_LIMIT
    public static final int ERROR_CODE_PARENTAL_CONTROL_RESTRICTED
    public static final int ERROR_CODE_NOT_AVAILABLE_IN_REGION
    public static final int ERROR_CODE_CONTENT_ALREADY_PLAYING
    public static final int ERROR_CODE_SKIP_LIMIT_REACHED
    public static final int ERROR_CODE_ACTION_ABORTED
    public static final int ERROR_CODE_END_OF_QUEUE
    private static final int KEYCODE_MEDIA_PAUSE
    private static final int KEYCODE_MEDIA_PLAY
kotlinx.coroutines.JobKt__FutureKt
kotlinx.coroutines.flow.FlowKt__MergeKt$unsafeTransform$$inlined$unsafeFlow$1
kotlin.ranges.IntProgressionIterator:
    public final int getStep()
com.google.android.material.bottomnavigation.BottomNavigationMenuView$1
androidx.lifecycle.ServiceLifecycleDispatcher$DispatchRunnable
androidx.savedstate.Recreator:
    static final java.lang.String CLASSES_KEY
    static final java.lang.String COMPONENT_KEY
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$lastIndexOf$1
kotlinx.coroutines.internal.LockFreeLinkedListNode$AbstractAtomicDesc$PrepareOp
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$Size
androidx.core.view.accessibility.AccessibilityManagerCompat
androidx.viewpager2.widget.ViewPager2$OffscreenPageLimit
com.google.android.material.snackbar.SnackbarManager$SnackbarRecord:
    void <init>(int,com.google.android.material.snackbar.SnackbarManager$Callback)
androidx.recyclerview.widget.ThreadUtil$BackgroundCallback
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$none$1
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$2$1
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2
kotlinx.coroutines.channels.SendElement
com.google.android.material.snackbar.BaseTransientBottomBar$16
kotlin.io.FileTreeWalk$FileTreeWalkIterator$SingleFileState
kotlin.UShortArrayKt
com.google.android.material.navigation.NavigationView$OnNavigationItemSelectedListener
androidx.customview.R$color
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi28
com.google.android.material.shape.MaterialShapeUtils:
    private void <init>()
androidx.databinding.adapters.TextViewBindingAdapter$BeforeTextChanged
androidx.core.view.NestedScrollingChild:
    public abstract void setNestedScrollingEnabled(boolean)
    public abstract boolean startNestedScroll(int)
    public abstract boolean hasNestedScrollingParent()
    public abstract boolean dispatchNestedScroll(int,int,int,int,int[])
    public abstract boolean dispatchNestedPreScroll(int,int,int[],int[])
    public abstract boolean dispatchNestedFling(float,float,boolean)
    public abstract boolean dispatchNestedPreFling(float,float)
kotlin.collections.AbstractCollection$toString$1
kotlinx.coroutines.CoroutineName
androidx.media.R$style
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi19
kotlin.sequences.DropWhileSequence$iterator$1
kotlin.UIntKt
androidx.core.view.animation.PathInterpolatorCompat
android.support.v4.media.RatingCompat$Style
kotlin.jvm.internal.MutableLocalVariableReference
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback
androidx.core.os.BundleKt
kotlinx.coroutines.flow.FlowKt__TransformKt$unsafeTransform$$inlined$unsafeFlow$2$1
androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments:
    public int getX()
    public int getY()
androidx.core.app.ActivityCompat$SharedElementCallback21Impl
androidx.transition.TranslationAnimationCreator
kotlin.collections.ArraysKt___ArraysKt$withIndex$4
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$$inlined$collect$2$1
androidx.core.util.LongSparseArrayKt
androidx.navigation.ui.R$integer
com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuHeaderItem
androidx.core.view.ViewKt
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$6
androidx.navigation.ktx.R$attr
androidx.databinding.adapters.ProgressBarBindingAdapter
kotlinx.coroutines.channels.ValueOrClosed
androidx.versionedparcelable.VersionedParcelParcel:
    public void writeByteArray(byte[],int,int)
    public void writeLong(long)
    public void writeFloat(float)
    public void writeDouble(double)
    public void writeStrongBinder(android.os.IBinder)
    public void writeStrongInterface(android.os.IInterface)
    public void writeBundle(android.os.Bundle)
    public long readLong()
    public float readFloat()
    public double readDouble()
    public android.os.IBinder readStrongBinder()
    public android.os.Bundle readBundle()
    private static final boolean DEBUG
    private static final java.lang.String TAG
androidx.recyclerview.widget.AsyncListDiffer$ListListener
androidx.recyclerview.widget.MessageThreadUtil$1$1
androidx.core.util.LruCacheKt$lruCache$4
com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener
kotlinx.coroutines.flow.FlowKt__TransformKt$unsafeTransform$$inlined$unsafeFlow$6$lambda$1
androidx.core.util.PairKt
androidx.lifecycle.R
androidx.core.graphics.ShaderKt
androidx.core.app.RemoteInput$Builder
androidx.databinding.adapters.AbsListViewBindingAdapter$OnScroll
com.google.android.material.badge.BadgeDrawable$SavedState
kotlin.collections.AbstractMap$toString$1
kotlin.collections.CharIterator
androidx.navigation.fragment.FragmentNavigator$Extras:
    void <init>(java.util.Map)
androidx.collection.ArrayMap:
    public boolean containsAll(java.util.Collection)
    public boolean removeAll(java.util.Collection)
android.support.v4.media.MediaBrowserCompat$MediaItem$Flags
kotlin.sequences.SequenceBuilderIterator
androidx.asynclayoutinflater.R$color
kotlinx.coroutines.Job:
    public abstract boolean isActive()
    public abstract boolean isCompleted()
    public abstract boolean isCancelled()
    public abstract java.util.concurrent.CancellationException getCancellationException()
    public abstract boolean start()
    public synthetic abstract void cancel()
    public synthetic abstract boolean cancel(java.lang.Throwable)
    public abstract kotlin.sequences.Sequence getChildren()
    public abstract kotlinx.coroutines.ChildHandle attachChild(kotlinx.coroutines.ChildJob)
    public abstract java.lang.Object join(kotlin.coroutines.Continuation)
    public abstract kotlinx.coroutines.selects.SelectClause0 getOnJoin()
    public abstract kotlinx.coroutines.DisposableHandle invokeOnCompletion(kotlin.jvm.functions.Function1)
    public abstract kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1)
    public abstract kotlinx.coroutines.Job plus(kotlinx.coroutines.Job)
androidx.navigation.common.R$integer
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl
androidx.viewpager2.widget.ScrollEventAdapter$ScrollEventValues
kotlinx.coroutines.internal.LockFreeLinkedListNode$AddLastDesc
androidx.asynclayoutinflater.R$layout
com.google.android.material.transformation.TransformationChildCard:
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
kotlin.text.CharCategory$Companion
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$2$1
androidx.recyclerview.widget.DiffUtil$1
androidx.core.content.IntentCompat
kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1
kotlin.sequences.SequencesKt___SequencesKt$minus$4
kotlin.sequences.GeneratorSequence$iterator$1
androidx.navigation.R$integer
kotlinx.coroutines.internal.ExceptionsConstuctorKt$tryCopyException$4$1
kotlin.coroutines.experimental.EmptyCoroutineContext
kotlin.collections.AbstractMap$Companion
kotlinx.coroutines.flow.FlowKt__LimitKt$drop$$inlined$unsafeFlow$1$lambda$1$1
androidx.fragment.R$style
androidx.core.database.CursorWindowCompat
androidx.databinding.ObservableParcelable
kotlinx.coroutines.flow.FlowKt__MergeKt$map$$inlined$unsafeTransform$1$2$1
androidx.fragment.app.FragmentStatePagerAdapter
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$all$1
com.google.android.material.snackbar.BaseTransientBottomBar$1
androidx.annotation.InspectableProperty$FlagEntry
kotlin.jvm.internal.unsafe.MonitorKt
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21$ExtraSession
kotlin.collections.AbstractMutableMap
kotlin.ranges.ClosedFloatingPointRange$DefaultImpls
androidx.legacy.v4.R$color
kotlinx.coroutines.CommonPool$isGoodCommonPool$1
kotlin.reflect.KClassifier
androidx.lifecycle.LifecycleCoroutineScope$launchWhenResumed$1
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat
androidx.core.widget.TextViewCompat$OreoCallback:
    private static final int MENU_ITEM_ORDER_PROCESS_TEXT_INTENT_ACTIONS_START
androidx.navigation.fragment.ktx.R$styleable
androidx.core.net.DatagramSocketWrapper
com.google.android.material.tabs.TabLayout$TabLayoutOnPageChangeListener
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$2
kotlinx.coroutines.flow.FlowKt__MigrationKt$combine$$inlined$combine$3$3
kotlinx.coroutines.channels.ReceiveChannel
kotlin.collections.ArraysKt___ArraysJvmKt$asList$5
androidx.lifecycle.extensions.R$color
com.google.android.material.datepicker.MaterialDatePicker:
    public static long todayInUtcMilliseconds()
    static com.google.android.material.datepicker.MaterialDatePicker newInstance(com.google.android.material.datepicker.MaterialDatePicker$Builder)
    public boolean addOnPositiveButtonClickListener(com.google.android.material.datepicker.MaterialPickerOnPositiveButtonClickListener)
    public boolean removeOnPositiveButtonClickListener(com.google.android.material.datepicker.MaterialPickerOnPositiveButtonClickListener)
    public void clearOnPositiveButtonClickListeners()
    public boolean addOnNegativeButtonClickListener(android.view.View$OnClickListener)
    public boolean removeOnNegativeButtonClickListener(android.view.View$OnClickListener)
    public void clearOnNegativeButtonClickListeners()
    public boolean addOnCancelListener(android.content.DialogInterface$OnCancelListener)
    public boolean removeOnCancelListener(android.content.DialogInterface$OnCancelListener)
    public void clearOnCancelListeners()
    public boolean addOnDismissListener(android.content.DialogInterface$OnDismissListener)
    public boolean removeOnDismissListener(android.content.DialogInterface$OnDismissListener)
    public void clearOnDismissListeners()
    private static final java.lang.String OVERRIDE_THEME_RES_ID
    private static final java.lang.String DATE_SELECTOR_KEY
    private static final java.lang.String CALENDAR_CONSTRAINTS_KEY
    private static final java.lang.String TITLE_TEXT_RES_ID_KEY
    private static final java.lang.String TITLE_TEXT_KEY
androidx.recyclerview.widget.ItemTouchHelper$Callback$1
androidx.core.view.inputmethod.InputConnectionCompat
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$2
kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue
kotlin.ULongArray$Iterator
androidx.slidingpanelayout.R$dimen
androidx.core.app.NotificationCompat$Style
androidx.recyclerview.widget.ItemTouchHelper$4
androidx.vectordrawable.graphics.drawable.AndroidResources:
    private void <init>()
    static final int STYLEABLE_VECTOR_DRAWABLE_ALPHA
    static final int STYLEABLE_VECTOR_DRAWABLE_AUTO_MIRRORED
    static final int STYLEABLE_VECTOR_DRAWABLE_HEIGHT
    static final int STYLEABLE_VECTOR_DRAWABLE_NAME
    static final int STYLEABLE_VECTOR_DRAWABLE_TINT
    static final int STYLEABLE_VECTOR_DRAWABLE_TINT_MODE
    static final int STYLEABLE_VECTOR_DRAWABLE_VIEWPORT_HEIGHT
    static final int STYLEABLE_VECTOR_DRAWABLE_VIEWPORT_WIDTH
    static final int STYLEABLE_VECTOR_DRAWABLE_WIDTH
    static final int STYLEABLE_VECTOR_DRAWABLE_GROUP_NAME
    static final int STYLEABLE_VECTOR_DRAWABLE_GROUP_PIVOT_X
    static final int STYLEABLE_VECTOR_DRAWABLE_GROUP_PIVOT_Y
    static final int STYLEABLE_VECTOR_DRAWABLE_GROUP_ROTATION
    static final int STYLEABLE_VECTOR_DRAWABLE_GROUP_SCALE_X
    static final int STYLEABLE_VECTOR_DRAWABLE_GROUP_SCALE_Y
    static final int STYLEABLE_VECTOR_DRAWABLE_GROUP_TRANSLATE_X
    static final int STYLEABLE_VECTOR_DRAWABLE_GROUP_TRANSLATE_Y
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_FILL_ALPHA
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_FILL_COLOR
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_NAME
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_PATH_DATA
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_ALPHA
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_COLOR
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_LINE_CAP
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_LINE_JOIN
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_MITER_LIMIT
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_WIDTH
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_TRIM_PATH_END
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_TRIM_PATH_OFFSET
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_TRIM_PATH_START
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_TRIM_PATH_FILLTYPE
    static final int STYLEABLE_VECTOR_DRAWABLE_CLIP_PATH_NAME
    static final int STYLEABLE_VECTOR_DRAWABLE_CLIP_PATH_PATH_DATA
    static final int STYLEABLE_VECTOR_DRAWABLE_CLIP_PATH_FILLTYPE
    static final int STYLEABLE_ANIMATED_VECTOR_DRAWABLE_DRAWABLE
    static final int STYLEABLE_ANIMATED_VECTOR_DRAWABLE_TARGET_ANIMATION
    static final int STYLEABLE_ANIMATED_VECTOR_DRAWABLE_TARGET_NAME
    public static final int STYLEABLE_ANIMATOR_INTERPOLATOR
    public static final int STYLEABLE_ANIMATOR_DURATION
    public static final int STYLEABLE_ANIMATOR_START_OFFSET
    public static final int STYLEABLE_ANIMATOR_REPEAT_COUNT
    public static final int STYLEABLE_ANIMATOR_REPEAT_MODE
    public static final int STYLEABLE_ANIMATOR_VALUE_FROM
    public static final int STYLEABLE_ANIMATOR_VALUE_TO
    public static final int STYLEABLE_ANIMATOR_VALUE_TYPE
    public static final int STYLEABLE_ANIMATOR_SET_ORDERING
    public static final int STYLEABLE_PROPERTY_VALUES_HOLDER_VALUE_FROM
    public static final int STYLEABLE_PROPERTY_VALUES_HOLDER_VALUE_TO
    public static final int STYLEABLE_PROPERTY_VALUES_HOLDER_VALUE_TYPE
    public static final int STYLEABLE_PROPERTY_VALUES_HOLDER_PROPERTY_NAME
    public static final int STYLEABLE_KEYFRAME_VALUE
    public static final int STYLEABLE_KEYFRAME_INTERPOLATOR
    public static final int STYLEABLE_KEYFRAME_VALUE_TYPE
    public static final int STYLEABLE_KEYFRAME_FRACTION
    public static final int STYLEABLE_PROPERTY_ANIMATOR_PROPERTY_NAME
    public static final int STYLEABLE_PROPERTY_ANIMATOR_PATH_DATA
    public static final int STYLEABLE_PROPERTY_ANIMATOR_PROPERTY_X_NAME
    public static final int STYLEABLE_PROPERTY_ANIMATOR_PROPERTY_Y_NAME
    public static final int STYLEABLE_PATH_INTERPOLATOR_CONTROL_X_1
    public static final int STYLEABLE_PATH_INTERPOLATOR_CONTROL_Y_1
    public static final int STYLEABLE_PATH_INTERPOLATOR_CONTROL_X_2
    public static final int STYLEABLE_PATH_INTERPOLATOR_CONTROL_Y_2
    public static final int STYLEABLE_PATH_INTERPOLATOR_PATH_DATA
    public static final int FAST_OUT_LINEAR_IN
    public static final int FAST_OUT_SLOW_IN
    public static final int LINEAR_OUT_SLOW_IN
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$withIndex$1
androidx.databinding.adapters.SearchViewBindingAdapter$2
kotlinx.coroutines.JobKt__JobKt$DisposableHandle$1
com.google.android.material.appbar.ViewOffsetHelper:
    public int getLeftAndRightOffset()
    public int getLayoutTop()
    public int getLayoutLeft()
    public void setVerticalOffsetEnabled(boolean)
    public boolean isVerticalOffsetEnabled()
    public void setHorizontalOffsetEnabled(boolean)
    public boolean isHorizontalOffsetEnabled()
androidx.media.MediaBrowserServiceCompatApi21$ServiceCompatProxy
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$take$1
kotlin.jvm.JvmClassMappingKt:
    public static synthetic void java$annotations(kotlin.reflect.KClass)
    public static final java.lang.Class getJavaPrimitiveType(kotlin.reflect.KClass)
    public static final kotlin.reflect.KClass getKotlinClass(java.lang.Class)
    public static final java.lang.Class getJavaClass(java.lang.Object)
    public static synthetic void javaClass$annotations(kotlin.reflect.KClass)
    public static final java.lang.Class getRuntimeClassOfKClassInstance(kotlin.reflect.KClass)
    public static final synthetic boolean isArrayOf(java.lang.Object[])
    public static final kotlin.reflect.KClass getAnnotationClass(java.lang.annotation.Annotation)
com.google.android.material.bottomappbar.BottomAppBar:
    public void performHide()
    public void performShow()
    public void replaceMenu(int)
    void addAnimationListener(com.google.android.material.bottomappbar.BottomAppBar$AnimationListener)
    void removeAnimationListener(com.google.android.material.bottomappbar.BottomAppBar$AnimationListener)
    private static final long ANIMATION_DURATION
    public static final int FAB_ALIGNMENT_MODE_CENTER
    public static final int FAB_ALIGNMENT_MODE_END
    public static final int FAB_ANIMATION_MODE_SCALE
    public static final int FAB_ANIMATION_MODE_SLIDE
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$6
androidx.core.R$layout
com.google.android.material.behavior.HideBottomViewOnScrollBehavior:
    protected static final int ENTER_ANIMATION_DURATION
    protected static final int EXIT_ANIMATION_DURATION
    private static final int STATE_SCROLLED_DOWN
    private static final int STATE_SCROLLED_UP
androidx.lifecycle.Transformations$2
androidx.transition.ViewGroupUtilsApi14:
    private void <init>()
    private static final java.lang.String TAG
    private static final int LAYOUT_TRANSITION_CHANGING
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7
kotlin.BuilderInference
kotlin.jdk7.AutoCloseableKt
kotlinx.coroutines.internal.StackTraceRecoveryKt
kotlin.LazyKt__LazyKt:
    public static final kotlin.Lazy lazyOf(java.lang.Object)
    private static final java.lang.Object getValue(kotlin.Lazy,java.lang.Object,kotlin.reflect.KProperty)
    public void <init>()
kotlin.HashCodeKt
androidx.core.os.EnvironmentCompat
kotlinx.coroutines.sync.SemaphoreSegment
kotlinx.android.extensions.ContainerOptions
kotlinx.coroutines.internal.ThreadLocalKey
kotlin.math.MathKt__MathJVMKt
androidx.databinding.adapters.RadioGroupBindingAdapter
androidx.legacy.app.ActionBarDrawerToggle$SetIndicatorInfo
kotlinx.coroutines.RemoveOnCancel
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$5$lambda$1
android.support.v4.media.MediaBrowserCompat$ConnectionCallback$ConnectionCallbackInternal
androidx.transition.Slide$GravityFlag
kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$1
androidx.core.widget.TintableCompoundDrawablesView:
    public abstract android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
    public abstract android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
androidx.legacy.coreui.R$string
kotlinx.coroutines.channels.ReceiveOrClosed
com.google.android.material.internal.TextDrawableHelper:
    public boolean isTextWidthDirty()
androidx.viewpager.widget.ViewPager$SavedState$1
androidx.appcompat.app.ToolbarActionBar$1
androidx.swiperefreshlayout.widget.CircularProgressDrawable$1
androidx.collection.LruCacheKt$lruCache$1
androidx.recyclerview.widget.LinearSnapHelper:
    private static final float INVALID_DISTANCE
com.google.android.material.appbar.CollapsingToolbarLayout$1
androidx.vectordrawable.R$styleable
kotlinx.coroutines.test.TestCoroutineContext$Dispatcher$invokeOnTimeout$1
androidx.appcompat.view.ContextThemeWrapper:
    public void applyOverrideConfiguration(android.content.res.Configuration)
androidx.drawerlayout.R$id
androidx.viewpager2.widget.ViewPager2$PagerSnapHelperImpl
kotlin.coroutines.experimental.jvm.internal.CoroutineImpl
androidx.recyclerview.widget.AsyncListUtil$DataCallback
kotlin.sequences.SequencesKt___SequencesKt$asIterable$$inlined$Iterable$1
com.google.android.material.appbar.HeaderBehavior:
    private static final int INVALID_POINTER
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$1
kotlin.SafePublicationLazyImpl$Companion
kotlin.properties.ObservableProperty
androidx.core.util.RangeKt$toClosedRange$1
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl
kotlin.jvm.internal.StringCompanionObject
androidx.loader.content.ModernAsyncTask$4
androidx.lifecycle.SavedStateHandle:
    private androidx.lifecycle.MutableLiveData getLiveDataInternal(java.lang.String,boolean,java.lang.Object)
    private static void validateValue(java.lang.Object)
    public boolean contains(java.lang.String)
    public androidx.lifecycle.MutableLiveData getLiveData(java.lang.String)
    public androidx.lifecycle.MutableLiveData getLiveData(java.lang.String,java.lang.Object)
    public java.util.Set keys()
    public java.lang.Object get(java.lang.String)
    public void set(java.lang.String,java.lang.Object)
    public java.lang.Object remove(java.lang.String)
    private static final java.lang.String VALUES
    private static final java.lang.String KEYS
androidx.recyclerview.widget.AdapterListUpdateCallback
kotlin.collections.MapsKt__MapsJVMKt
kotlin.PreconditionsKt__PreconditionsKt
androidx.viewpager.widget.ViewPager$PageTransformer
com.google.android.material.color.MaterialColors:
    public void <init>()
    public static int layer(android.view.View,int,int)
    public static int layer(android.view.View,int,int,float)
    public static final float ALPHA_FULL
    public static final float ALPHA_MEDIUM
    public static final float ALPHA_DISABLED
    public static final float ALPHA_LOW
    public static final float ALPHA_DISABLED_LOW
androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener
kotlin.coroutines.experimental.migration.ExperimentalSuspendFunction2Migration
androidx.transition.Styleable$VisibilityTransition
androidx.core.widget.TextViewKt$doOnTextChanged$$inlined$addTextChangedListener$1
kotlin.jvm.internal.markers.KMutableCollection
androidx.appcompat.resources.R$string
kotlin.internal.InlineOnly
androidx.collection.SparseArrayCompat:
    public void delete(int)
    public boolean remove(int,java.lang.Object)
    public void removeAtRange(int,int)
    public java.lang.Object replace(int,java.lang.Object)
    public boolean replace(int,java.lang.Object,java.lang.Object)
    public void putAll(androidx.collection.SparseArrayCompat)
    public java.lang.Object putIfAbsent(int,java.lang.Object)
    public boolean isEmpty()
    public void setValueAt(int,java.lang.Object)
    public int indexOfKey(int)
    public boolean containsKey(int)
    public boolean containsValue(java.lang.Object)
kotlin.coroutines.jvm.internal.DebugMetadataKt
androidx.navigation.fragment.DialogFragmentNavigator:
    private static final java.lang.String TAG
    private static final java.lang.String KEY_DIALOG_COUNT
    private static final java.lang.String DIALOG_TAG
kotlin.reflect.KTypeProjection
androidx.appcompat.R$id:
    private void <init>()
kotlin.comparisons.ComparisonsKt
androidx.recyclerview.widget.AsyncListDiffer$1
androidx.core.view.accessibility.AccessibilityViewCommand$SetProgressArguments:
    public float getProgress()
kotlin.sequences.SequencesKt___SequencesKt$minus$1$iterator$1
androidx.lifecycle.LifecycleCoroutineScope:
    public abstract androidx.lifecycle.Lifecycle getLifecycle$lifecycle_runtime_ktx_release()
    public final kotlinx.coroutines.Job launchWhenCreated(kotlin.jvm.functions.Function2)
    public final kotlinx.coroutines.Job launchWhenStarted(kotlin.jvm.functions.Function2)
    public final kotlinx.coroutines.Job launchWhenResumed(kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks:
    public void <init>()
androidx.cardview.widget.RoundRectDrawable:
    void <init>(android.content.res.ColorStateList,float)
kotlin.io.ExposingBufferByteArrayOutputStream
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker
kotlin.Metadata
kotlin.collections.UIntIterator
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver:
    void <init>(android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21)
androidx.lifecycle.ComputableLiveData$2
org.intellij.lang.annotations.JdkConstants$AdjustableOrientation
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation$1
androidx.core.util.DebugUtils:
    private void <init>()
androidx.core.app.NotificationCompat
androidx.databinding.adapters.LinearLayoutBindingAdapter
kotlin.time.AbstractLongClock
kotlin.ranges.IntProgression:
    public final int getStep()
    public boolean isEmpty()
    public boolean equals(java.lang.Object)
    public int hashCode()
    public java.lang.String toString()
androidx.navigation.NavInflater:
    private static final java.lang.String TAG_ARGUMENT
    private static final java.lang.String TAG_DEEP_LINK
    private static final java.lang.String TAG_ACTION
    private static final java.lang.String TAG_INCLUDE
    static final java.lang.String APPLICATION_ID_PLACEHOLDER
android.support.v4.media.session.MediaControllerCompat$Callback$MessageHandler:
    void <init>(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Looper)
    public void handleMessage(android.os.Message)
    boolean mRegistered
    final synthetic android.support.v4.media.session.MediaControllerCompat$Callback this$0
    private static final int MSG_EVENT
    private static final int MSG_UPDATE_PLAYBACK_STATE
    private static final int MSG_UPDATE_METADATA
    private static final int MSG_UPDATE_VOLUME
    private static final int MSG_UPDATE_QUEUE
    private static final int MSG_UPDATE_QUEUE_TITLE
    private static final int MSG_UPDATE_EXTRAS
    private static final int MSG_DESTROYED
    private static final int MSG_UPDATE_REPEAT_MODE
    private static final int MSG_UPDATE_CAPTIONING_ENABLED
    private static final int MSG_UPDATE_SHUFFLE_MODE
    private static final int MSG_SESSION_READY
kotlinx.coroutines.JobCancellationException
kotlin.ranges.LongProgressionIterator
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager:
    boolean isListening()
kotlinx.coroutines.Incomplete
com.google.android.material.checkbox.MaterialCheckBox:
    public void <init>(android.content.Context)
    public boolean isUseMaterialThemeColors()
androidx.navigation.ui.AppBarConfiguration$OnNavigateUpListener:
    public abstract boolean onNavigateUp()
kotlin.collections.ArraysKt___ArraysJvmKt$asList$4
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$firstOrNull$1
kotlinx.coroutines.channels.TickerChannelsKt$WhenMappings
kotlin.collections.UCollectionsKt
com.google.android.material.appbar.ViewOffsetBehavior:
    public boolean setLeftAndRightOffset(int)
    public int getLeftAndRightOffset()
    public void setVerticalOffsetEnabled(boolean)
    public boolean isVerticalOffsetEnabled()
    public void setHorizontalOffsetEnabled(boolean)
    public boolean isHorizontalOffsetEnabled()
androidx.transition.Slide$CalculateSlideHorizontal
kotlin.jvm.functions.Function8
android.support.v4.media.session.PlaybackStateCompatApi21:
    public static java.lang.Object newInstance(int,long,long,float,long,java.lang.CharSequence,long,java.util.List,long)
    private void <init>()
androidx.collection.LongSparseArray:
    public boolean remove(long,java.lang.Object)
    public java.lang.Object replace(long,java.lang.Object)
    public boolean replace(long,java.lang.Object,java.lang.Object)
    public void putAll(androidx.collection.LongSparseArray)
    public java.lang.Object putIfAbsent(long,java.lang.Object)
    public boolean isEmpty()
    public void setValueAt(int,java.lang.Object)
    public int indexOfValue(java.lang.Object)
    public boolean containsKey(long)
    public boolean containsValue(java.lang.Object)
androidx.media.MediaSessionManagerImplApi21
androidx.recyclerview.widget.OrientationHelper$2:
    public void offsetChild(android.view.View,int)
kotlin.KotlinNullPointerException:
    public void <init>(java.lang.String)
androidx.core.view.NestedScrollingChild2:
    public abstract boolean startNestedScroll(int,int)
    public abstract void stopNestedScroll(int)
    public abstract boolean hasNestedScrollingParent(int)
    public abstract boolean dispatchNestedScroll(int,int,int,int,int[],int)
    public abstract boolean dispatchNestedPreScroll(int,int,int[],int[],int)
kotlin.collections.MovingSubList
androidx.annotation.InterpolatorRes
androidx.core.app.RemoteInput
androidx.core.view.ActionProvider$SubUiVisibilityListener:
    public abstract void onSubUiVisibilityChanged(boolean)
androidx.core.app.NotificationCompatBuilder
androidx.appcompat.view.menu.MenuAdapter:
    public boolean getForceShowIcon()
kotlin.collections.DoubleIterator
androidx.annotation.RestrictTo
androidx.appcompat.R$drawable:
    private void <init>()
android.support.v4.media.MediaMetadataCompat$TextKey
kotlinx.coroutines.CancelHandlerBase
com.google.android.material.appbar.AppBarLayout$OnOffsetChangedListener
android.support.v4.media.MediaBrowserCompatApi23$ItemCallback
kotlinx.coroutines.BuildersKt__Builders_commonKt
kotlinx.coroutines.CoroutineStart$WhenMappings
kotlinx.coroutines.SupervisorKt
androidx.legacy.v4.R$integer
androidx.interpolator.R
androidx.transition.Slide$5
kotlin.time.DurationKt
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState:
    int[] mCachedThemeAttrs
kotlin.text.UStringsKt
kotlinx.coroutines.flow.FlowKt__TransformKt$unsafeTransform$$inlined$unsafeFlow$7$lambda$1
kotlin.jvm.internal.DefaultConstructorMarker:
    private void <init>()
com.google.android.material.snackbar.SnackbarContentLayout:
    void updateActionTextColorAlphaIfNeeded(float)
    public void animateContentIn(int,int)
    public void animateContentOut(int,int)
kotlinx.coroutines.SupervisorCoroutine
kotlinx.coroutines.internal.LockFreeLinkedListHead
kotlin.jvm.internal.FloatSpreadBuilder
kotlin.coroutines.experimental.CoroutineContext$Key
androidx.loader.content.Loader$ForceLoadContentObserver
androidx.asynclayoutinflater.R$drawable
android.support.v4.os.IResultReceiver$Stub$Proxy:
    public java.lang.String getInterfaceDescriptor()
kotlin.jvm.internal.PackageReference
kotlinx.coroutines.ParentJob
androidx.transition.R$styleable
androidx.viewpager2.widget.ViewPager2$PageAwareAccessibilityProvider
kotlin.TypeAliasesKt
kotlinx.coroutines.flow.FlowKt__TransformKt$scanReduce$$inlined$unsafeFlow$1
kotlin.reflect.KProperty$Accessor
com.czluciusdev.diceroller.databinding.DiceFragmentBindingImpl:
    public boolean setVariable(int,java.lang.Object)
kotlinx.coroutines.MainCoroutineDispatcher
kotlin.coroutines.experimental.intrinsics.IntrinsicsKt
androidx.navigation.NavDeepLinkBuilder$PermissiveNavigatorProvider
androidx.core.app.NotificationCompat$BubbleMetadata$Builder
kotlinx.coroutines.DefaultExecutorKt
kotlinx.coroutines.JobSupport$ChildCompletion
androidx.appcompat.view.SupportMenuInflater:
    static final java.lang.String LOG_TAG
    private static final java.lang.String XML_MENU
    private static final java.lang.String XML_GROUP
    private static final java.lang.String XML_ITEM
    static final int NO_ID
androidx.drawerlayout.R$drawable
androidx.viewpager2.widget.ViewPager2$4
kotlinx.coroutines.channels.BroadcastKt$broadcast$1
kotlin.reflect.KMutableProperty0$Setter
androidx.appcompat.widget.TintTypedArray:
    public int length()
    public int getIndexCount()
    public int getIndex(int)
    public android.content.res.Resources getResources()
    public java.lang.String getNonResourceString(int)
    public int getLayoutDimension(int,java.lang.String)
    public float getFraction(int,int,int,float)
    public boolean getValue(int,android.util.TypedValue)
    public int getType(int)
    public android.util.TypedValue peekValue(int)
    public java.lang.String getPositionDescription()
    public int getChangingConfigurations()
androidx.legacy.coreutils.R$integer
androidx.core.transition.TransitionKt$addListener$3
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState$1
kotlinx.coroutines.CoroutineContextKt
androidx.core.util.SparseArrayKt$valueIterator$1
androidx.core.animation.AnimatorKt$addPauseListener$1
androidx.core.widget.TextViewKt
kotlinx.coroutines.ChildHandle
androidx.core.location.LocationKt
kotlinx.coroutines.selects.SelectBuilderImpl
androidx.databinding.adapters.SwitchCompatBindingAdapter
com.google.android.material.snackbar.BaseTransientBottomBar$6$1
kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1
android.support.v4.media.MediaDescriptionCompatApi23:
    private void <init>()
androidx.appcompat.view.menu.MenuDialogHelper:
    public void setPresenterCallback(androidx.appcompat.view.menu.MenuPresenter$Callback)
androidx.lifecycle.HasDefaultViewModelProviderFactory
kotlin.collections.MapWithDefault
androidx.coordinatorlayout.R$layout
androidx.transition.Scene:
    public static androidx.transition.Scene getSceneForLayout(android.view.ViewGroup,int,android.content.Context)
    public void <init>(android.view.ViewGroup)
    private void <init>(android.view.ViewGroup,int,android.content.Context)
    public void <init>(android.view.ViewGroup,android.view.View)
    public android.view.ViewGroup getSceneRoot()
    public void enter()
    public void setEnterAction(java.lang.Runnable)
    public void setExitAction(java.lang.Runnable)
    boolean isCreatedFromLayoutResource()
    private android.content.Context mContext
    private int mLayoutId
    private android.view.View mLayout
    private java.lang.Runnable mEnterAction
androidx.customview.R
kotlinx.coroutines.DisposeOnCompletion
androidx.core.app.NotificationCompat$Action$SemanticAction
androidx.navigation.NavBackStackEntry:
    public androidx.lifecycle.ViewModelProvider$Factory getDefaultViewModelProviderFactory()
    private androidx.lifecycle.ViewModelProvider$Factory mDefaultFactory
androidx.appcompat.widget.ActivityChooserModel$ActivityChooserModelClient
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$6$1
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$4$lambda$1
androidx.vectordrawable.R$dimen
androidx.annotation.RawRes
androidx.appcompat.app.ActionBarDrawerToggle$ToolbarCompatDelegate
kotlin.ranges.CharRange$Companion
androidx.fragment.R$dimen
kotlinx.coroutines.internal.ExceptionsConstuctorKt
androidx.annotation.VisibleForTesting
kotlin.Unit
androidx.core.ktx.R$layout
androidx.core.util.Consumer
androidx.lifecycle.Lifecycling:
    static androidx.lifecycle.GenericLifecycleObserver getCallback(java.lang.Object)
    private void <init>()
    private static final int REFLECTIVE_CALLBACK
    private static final int GENERATED_CALLBACK
androidx.appcompat.app.TwilightCalculator:
    public static final int DAY
    public static final int NIGHT
    private static final float DEGREES_TO_RADIANS
    private static final float J0
    private static final float ALTIDUTE_CORRECTION_CIVIL_TWILIGHT
    private static final float C1
    private static final float C2
    private static final float C3
    private static final float OBLIQUITY
    private static final long UTC_2000
androidx.databinding.adapters.AutoCompleteTextViewBindingAdapter
androidx.appcompat.graphics.drawable.StateListDrawable:
    void <init>()
    private void updateStateFromTypedArray(android.content.res.TypedArray)
    private void inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    public void addState(int[],android.graphics.drawable.Drawable)
    public void inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    androidx.appcompat.graphics.drawable.StateListDrawable$StateListState getStateListState()
    int getStateCount()
    int[] getStateSet(int)
    android.graphics.drawable.Drawable getStateDrawable(int)
    int getStateDrawableIndex(int[])
    void clearMutated()
    private static final java.lang.String TAG
    private static final boolean DEBUG
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback$1
androidx.core.view.inputmethod.InputContentInfoCompat
kotlinx.coroutines.ExecutorsKt
androidx.core.app.NotificationCompat$BigPictureStyle
androidx.legacy.coreutils.R$attr
androidx.core.content.pm.ShortcutInfoCompatSaver$NoopImpl
androidx.transition.Transition$ArrayListManager
kotlin.contracts.ConditionalEffect
kotlinx.coroutines.internal.LockFreeLinkedListKt
kotlinx.coroutines.channels.ChannelKt
com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuTextItem
androidx.navigation.ui.AppBarConfigurationKt$sam$i$androidx_navigation_ui_AppBarConfiguration_OnNavigateUpListener$0
kotlin.text.StringsKt___StringsKt$chunkedSequence$1
androidx.activity.R
kotlin.LazyThreadSafetyMode
androidx.print.PrintHelper$PrintUriAdapter$1
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState
kotlinx.coroutines.channels.ActorScope
kotlinx.coroutines.CompletableJob$DefaultImpls
androidx.media.session.MediaButtonReceiver$MediaButtonConnectionCallback
com.google.android.material.tabs.TabLayout$PagerAdapterObserver
androidx.core.app.NotificationCompat$BigTextStyle
androidx.transition.TransitionListenerAdapter:
    public void onTransitionEnd(androidx.transition.Transition)
androidx.core.app.ActivityCompat$PermissionCompatDelegate:
    public abstract boolean requestPermissions(android.app.Activity,java.lang.String[],int)
kotlin.jvm.internal.CharSpreadBuilder
androidx.viewpager2.widget.ViewPager2$PageAwareAccessibilityProvider$3
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl
androidx.annotation.AnyThread
androidx.core.content.FileProvider$PathStrategy
kotlin.jvm.Volatile
kotlin.time.AdjustedClockMark
androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate
kotlinx.coroutines.AwaitKt
androidx.appcompat.widget.AppCompatTextHelper:
    private static final int TEXT_FONT_WEIGHT_UNSPECIFIED
    private static final int SANS
    private static final int SERIF
    private static final int MONOSPACE
androidx.core.widget.ImageViewCompat:
    private void <init>()
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$filterNotTo$1
androidx.navigation.NavController:
    public void setGraph(androidx.navigation.NavGraph)
    public void navigate(android.net.Uri)
    public void navigate(android.net.Uri,androidx.navigation.NavOptions)
    public void navigate(android.net.Uri,androidx.navigation.NavOptions,androidx.navigation.Navigator$Extras)
    public void navigate(androidx.navigation.NavDirections)
    public void navigate(androidx.navigation.NavDirections,androidx.navigation.NavOptions)
    public void navigate(androidx.navigation.NavDirections,androidx.navigation.Navigator$Extras)
    public androidx.navigation.NavDeepLinkBuilder createDeepLink()
    public androidx.lifecycle.ViewModelStoreOwner getViewModelStoreOwner(int)
    public androidx.navigation.NavBackStackEntry getBackStackEntry(int)
    private static final java.lang.String TAG
    private static final java.lang.String KEY_NAVIGATOR_STATE
    private static final java.lang.String KEY_NAVIGATOR_STATE_NAMES
    private static final java.lang.String KEY_BACK_STACK
    static final java.lang.String KEY_DEEP_LINK_IDS
    static final java.lang.String KEY_DEEP_LINK_EXTRAS
    static final java.lang.String KEY_DEEP_LINK_HANDLED
    public static final java.lang.String KEY_DEEP_LINK_INTENT
androidx.transition.Styleable$Transition
androidx.databinding.adapters.ExpandableListViewBindingAdapter
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combine$2$1
androidx.annotation.RestrictTo$Scope
androidx.core.widget.ContentLoadingProgressBar
com.google.android.material.internal.ViewUtils$1
androidx.core.util.HalfKt
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath:
    public boolean canApplyTheme()
    public void applyTheme(android.content.res.Resources$Theme)
kotlin.coroutines.experimental.ContinuationInterceptor
androidx.databinding.BindingMethod
androidx.core.widget.TextViewKt$addTextChangedListener$2
androidx.appcompat.widget.TooltipCompatHandler:
    private static final java.lang.String TAG
    private static final long LONG_CLICK_HIDE_TIMEOUT_MS
    private static final long HOVER_HIDE_TIMEOUT_MS
    private static final long HOVER_HIDE_TIMEOUT_SHORT_MS
androidx.core.app.NotificationCompatJellybean
kotlin.sequences.SubSequence$iterator$1
kotlin.collections.RingBuffer
kotlinx.coroutines.flow.FlowKt__DistinctKt$distinctUntilChangedBy$$inlined$unsafeFlow$1$1
androidx.constraintlayout.solver.widgets.Analyzer:
    private void <init>()
kotlin.jvm.internal.Ref$ObjectRef
androidx.constraintlayout.solver.Pools
androidx.appcompat.graphics.drawable.DrawableContainer:
    public void setEnterFadeDuration(int)
    public void setExitFadeDuration(int)
    public boolean isStateful()
    void setCurrentIndex(int)
    void clearMutated()
    private static final boolean DEBUG
    private static final java.lang.String TAG
    private static final boolean DEFAULT_DITHER
android.support.v4.media.MediaBrowserCompat$ConnectionCallback$StubApi21
androidx.fragment.R$color
kotlinx.coroutines.flow.FlowKt__TransformKt$scan$$inlined$unsafeFlow$1
androidx.appcompat.widget.ThemedSpinnerAdapter$Helper
kotlinx.coroutines.sync.MutexImpl$registerSelectClause2$$inlined$addLastIf$1
androidx.navigation.R$id:
    private void <init>()
androidx.transition.Styleable$TransitionManager
androidx.navigation.fragment.R$style
androidx.fragment.app.FragmentStateManager:
    androidx.fragment.app.Fragment$SavedState saveInstanceState()
    private static final java.lang.String TAG
    private static final java.lang.String TARGET_REQUEST_CODE_STATE_TAG
    private static final java.lang.String TARGET_STATE_TAG
    private static final java.lang.String VIEW_STATE_TAG
    private static final java.lang.String USER_VISIBLE_HINT_TAG
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21$3
androidx.core.app.JobIntentService
com.google.android.material.snackbar.BaseTransientBottomBar$ContentViewCallback
androidx.appcompat.widget.ActivityChooserView$1
kotlin.jvm.internal.CallableReference:
    protected kotlin.reflect.KCallable getReflected()
    public java.util.List getParameters()
    public kotlin.reflect.KType getReturnType()
    public java.util.List getAnnotations()
    public java.util.List getTypeParameters()
    public varargs java.lang.Object call(java.lang.Object[])
    public java.lang.Object callBy(java.util.Map)
    public kotlin.reflect.KVisibility getVisibility()
    public boolean isFinal()
    public boolean isOpen()
    public boolean isAbstract()
    public boolean isSuspend()
androidx.fragment.R$anim:
    private void <init>()
android.support.v4.media.session.MediaControllerCompatApi24$TransportControls
kotlinx.coroutines.TimeoutKt$withTimeoutOrNull$1
androidx.recyclerview.widget.BatchingListUpdateCallback
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$2
androidx.core.os.HandlerCompat
kotlin.UIntArray
androidx.databinding.ObservableChar
kotlinx.coroutines.flow.internal.ChildCancelledException
androidx.media.MediaSessionManager$MediaSessionManagerImpl
androidx.constraintlayout.solver.widgets.ResolutionNode:
    public void invalidateAnchors()
    public void remove(androidx.constraintlayout.solver.widgets.ResolutionDimension)
    public static final int UNRESOLVED
    public static final int RESOLVED
    public static final int REMOVED
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1$invokeSuspend$$inlined$collect$1$1
androidx.navigation.fragment.R$id:
    private void <init>()
androidx.core.transition.TransitionKt$doOnResume$$inlined$addListener$1
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$takeWhile$1
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$5
androidx.navigation.common.ktx.R$layout
org.intellij.lang.annotations.JdkConstants$FlowLayoutAlignment
kotlinx.coroutines.sync.Empty
androidx.loader.R$id
android.support.v4.media.session.MediaSessionCompatApi24$Callback
kotlinx.coroutines.flow.FlowKt__DistinctKt$distinctUntilChanged$$inlined$distinctUntilChangedBy$FlowKt__DistinctKt$1$2
androidx.viewpager.widget.ViewPager$2
androidx.legacy.coreui.R$id
androidx.lifecycle.ktx.R
kotlin.collections.CollectionsKt__CollectionsKt$binarySearchBy$1
androidx.fragment.R$attr
kotlin.jvm.functions.Function11
androidx.navigation.ui.ktx.R$integer
androidx.core.graphics.Insets
kotlin.text.StringsKt__StringNumberConversionsKt:
    public static final java.lang.Byte toByteOrNull(java.lang.String)
    public static final java.lang.Byte toByteOrNull(java.lang.String,int)
    public static final java.lang.Short toShortOrNull(java.lang.String)
    public static final java.lang.Short toShortOrNull(java.lang.String,int)
    public static final java.lang.Integer toIntOrNull(java.lang.String)
    public static final java.lang.Integer toIntOrNull(java.lang.String,int)
    public static final java.lang.Long toLongOrNull(java.lang.String)
    public static final java.lang.Long toLongOrNull(java.lang.String,int)
    public static final java.lang.Void numberFormatError(java.lang.String)
    public void <init>()
androidx.legacy.v4.R$style
kotlinx.coroutines.channels.LinkedListChannel
androidx.customview.widget.ViewDragHelper:
    public void setMinVelocity(float)
    public float getMinVelocity()
    public void setEdgeTrackingEnabled(int)
    public android.view.View getCapturedView()
    public int getActivePointerId()
    public void abort()
    public void flingCapturedView(int,int,int,int)
    protected boolean canScroll(android.view.View,boolean,int,int,int,int)
    public boolean isEdgeTouched(int)
    public boolean isEdgeTouched(int,int)
    private static final java.lang.String TAG
    public static final int INVALID_POINTER
    public static final int STATE_IDLE
    public static final int STATE_DRAGGING
    public static final int STATE_SETTLING
    public static final int EDGE_LEFT
    public static final int EDGE_RIGHT
    public static final int EDGE_TOP
    public static final int EDGE_BOTTOM
    public static final int EDGE_ALL
    public static final int DIRECTION_HORIZONTAL
    public static final int DIRECTION_VERTICAL
    public static final int DIRECTION_ALL
    private static final int EDGE_SIZE
    private static final int BASE_SETTLE_DURATION
    private static final int MAX_SETTLE_DURATION
androidx.core.view.accessibility.AccessibilityClickableSpanCompat:
    public static final java.lang.String SPAN_ID
com.czluciusdev.diceroller.R$drawable
androidx.cardview.widget.RoundRectDrawableWithShadow:
    void <init>(android.content.res.Resources,android.content.res.ColorStateList,float,float,float)
    private static final float SHADOW_MULTIPLIER
androidx.databinding.adapters.ViewGroupBindingAdapter$OnAnimationRepeat
kotlinx.coroutines.flow.FlowKt__MergeKt$map$$inlined$unsafeTransform$1$2
androidx.transition.R$string
androidx.navigation.NavigatorProvider:
    public final androidx.navigation.Navigator getNavigator(java.lang.Class)
kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$4
kotlin.contracts.ContractBuilder
kotlin.text.StringsKt__StringsKt$splitToSequence$2
androidx.navigation.NavGraphViewModelLazyKt$navGraphViewModels$storeProducer$1
androidx.customview.R$style
kotlinx.coroutines.android.AndroidDispatcherFactory
androidx.appcompat.widget.LinearLayoutCompat:
    public boolean isBaselineAligned()
    public boolean isMeasureWithLargestChildEnabled()
    public static final int HORIZONTAL
    public static final int VERTICAL
    public static final int SHOW_DIVIDER_NONE
    public static final int SHOW_DIVIDER_BEGINNING
    public static final int SHOW_DIVIDER_MIDDLE
    public static final int SHOW_DIVIDER_END
    private static final int VERTICAL_GRAVITY_COUNT
    private static final int INDEX_CENTER_VERTICAL
    private static final int INDEX_TOP
    private static final int INDEX_BOTTOM
    private static final int INDEX_FILL
    private static final java.lang.String ACCESSIBILITY_CLASS_NAME
androidx.lifecycle.Transformations$3
android.support.v4.media.session.MediaControllerCompat$MediaControllerExtraData
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$invokeSuspend$$inlined$collect$1$lambda$1
kotlinx.coroutines.android.HandlerDispatcherKt$$special$$inlined$Runnable$1
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat:
    public static androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat create(android.content.Context,int,android.content.res.Resources$Theme)
    public void addState(int[],android.graphics.drawable.Drawable,int)
    public void addTransition(int,int,android.graphics.drawable.Drawable,boolean)
    void clearMutated()
    public synthetic bridge void addState(int[],android.graphics.drawable.Drawable)
    public synthetic bridge void setExitFadeDuration(int)
    public synthetic bridge void setEnterFadeDuration(int)
    private static final java.lang.String ELEMENT_TRANSITION
    private static final java.lang.String ELEMENT_ITEM
    private static final java.lang.String TRANSITION_MISSING_DRAWABLE_ERROR
    private static final java.lang.String TRANSITION_MISSING_FROM_TO_ID
    private static final java.lang.String ITEM_MISSING_DRAWABLE_ERROR
kotlin.collections.AbstractMutableCollection
androidx.core.widget.TextViewKt$doBeforeTextChanged$$inlined$addTextChangedListener$1
kotlinx.coroutines.flow.FlowKt__TransformKt$unsafeTransform$$inlined$unsafeFlow$6$lambda$1$1
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransform$2$2
androidx.appcompat.app.ActionBarDrawerToggle
kotlinx.coroutines.channels.AbstractChannel$RemoveReceiveOnCancel
android.support.v4.media.session.MediaSessionCompatApi24
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams:
    public void setAnchorId(int)
    void invalidateAnchor()
androidx.viewpager2.widget.ViewPager2$RecyclerViewImpl
kotlinx.coroutines.YieldKt
androidx.cardview.R$styleable
androidx.collection.LruCacheKt$lruCache$2
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$5$1
kotlin.SuccessOrFailureKt
android.support.v4.media.MediaBrowserCompat$CallbackHandler
androidx.navigation.fragment.FragmentNavigator$Destination:
    public void <init>(androidx.navigation.NavigatorProvider)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$filterTo$1
androidx.collection.ContainerHelpers:
    private void <init>()
kotlinx.coroutines.flow.FlowKt__TransformKt$unsafeTransform$$inlined$unsafeFlow$7
kotlin.jvm.JvmStatic
androidx.core.ktx.R$id
kotlin.sequences.SequencesKt
kotlin.coroutines.experimental.migration.ExperimentalSuspendFunction1Migration
kotlin.text.MatcherMatchResult
com.google.android.material.internal.NavigationMenuPresenter$SubheaderViewHolder
androidx.core.R$styleable:
    private void <init>()
com.google.android.material.textfield.TextInputLayout$EndIconMode
androidx.core.view.ViewCompat$ScrollAxis
androidx.annotation.HalfFloat
kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$1
kotlinx.coroutines.internal.AtomicDesc
kotlin.collections.UByteIterator
androidx.viewpager.widget.PagerTabStrip
androidx.collection.SparseArrayKt$valueIterator$1
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$6
kotlinx.coroutines.channels.Channel$Factory
androidx.lifecycle.LifecycleOwnerKt
kotlinx.coroutines.RunnableKt$Runnable$1
androidx.databinding.adapters.SearchViewBindingAdapter$1
kotlin.jvm.internal.TypeReference
androidx.lifecycle.SavedStateHandle$SavingStateLiveData
androidx.core.view.MenuKt$children$1
kotlin.sequences.SequencesKt__SequencesKt$flatten$3
androidx.annotation.LayoutRes
androidx.lifecycle.LiveDataKt
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1
androidx.core.util.SparseBooleanArrayKt$valueIterator$1
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$reduceIndexed$1
kotlin.reflect.KCallable:
    public abstract java.lang.String getName()
    public abstract java.util.List getParameters()
    public abstract kotlin.reflect.KType getReturnType()
    public abstract java.util.List getTypeParameters()
    public varargs abstract java.lang.Object call(java.lang.Object[])
    public abstract java.lang.Object callBy(java.util.Map)
    public abstract kotlin.reflect.KVisibility getVisibility()
    public abstract boolean isFinal()
    public abstract boolean isOpen()
    public abstract boolean isAbstract()
    public abstract boolean isSuspend()
com.google.android.material.datepicker.MaterialDatePicker$Builder
kotlin.KotlinVersion$Companion
androidx.navigation.ui.NavControllerKt
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collect$2$1
com.google.android.material.canvas.CanvasCompat:
    private void <init>()
    public static int saveLayerAlpha(android.graphics.Canvas,android.graphics.RectF,int)
androidx.core.provider.FontsContractCompat$4$3
androidx.media.MediaBrowserServiceCompat$3
androidx.core.app.RemoteActionCompat:
    public void <init>(androidx.core.graphics.drawable.IconCompat,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)
    public void <init>(androidx.core.app.RemoteActionCompat)
    public static androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)
    public void setEnabled(boolean)
    public boolean isEnabled()
    public void setShouldShowIcon(boolean)
    public boolean shouldShowIcon()
    public androidx.core.graphics.drawable.IconCompat getIcon()
    public java.lang.CharSequence getTitle()
    public java.lang.CharSequence getContentDescription()
    public android.app.PendingIntent getActionIntent()
    public android.app.RemoteAction toRemoteAction()
androidx.core.graphics.BitmapCompat
androidx.core.provider.SelfDestructiveThread:
    public boolean isRunning()
    public int getGeneration()
    private static final int MSG_INVOKE_RUNNABLE
    private static final int MSG_DESTRUCTION
android.support.v4.media.session.MediaControllerCompatApi21:
    public static java.lang.Object fromToken(android.content.Context,java.lang.Object)
    public static void registerCallback(java.lang.Object,java.lang.Object,android.os.Handler)
    public static void unregisterCallback(java.lang.Object,java.lang.Object)
    public static void setMediaController(android.app.Activity,java.lang.Object)
    public static java.lang.Object getMediaController(android.app.Activity)
    public static java.lang.Object getSessionToken(java.lang.Object)
    public static java.lang.Object getTransportControls(java.lang.Object)
    public static java.lang.Object getPlaybackState(java.lang.Object)
    public static java.lang.Object getMetadata(java.lang.Object)
    public static java.util.List getQueue(java.lang.Object)
    public static java.lang.CharSequence getQueueTitle(java.lang.Object)
    public static android.os.Bundle getExtras(java.lang.Object)
    public static int getRatingType(java.lang.Object)
    public static long getFlags(java.lang.Object)
    public static java.lang.Object getPlaybackInfo(java.lang.Object)
    public static android.app.PendingIntent getSessionActivity(java.lang.Object)
    public static boolean dispatchMediaButtonEvent(java.lang.Object,android.view.KeyEvent)
    public static void setVolumeTo(java.lang.Object,int,int)
    public static void adjustVolume(java.lang.Object,int,int)
    public static void sendCommand(java.lang.Object,java.lang.String,android.os.Bundle,android.os.ResultReceiver)
    public static java.lang.String getPackageName(java.lang.Object)
    private void <init>()
androidx.fragment.R$string
com.google.android.material.snackbar.BaseTransientBottomBar$15
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$invokeSuspend$$inlined$collect$1
androidx.vectordrawable.R$style
androidx.core.animation.AnimatorKt$addListener$listener$1
androidx.annotation.UiThread
kotlin.text.MatcherMatchResult$groups$1$iterator$1
androidx.lifecycle.extensions.R$style
androidx.appcompat.app.TwilightManager:
    static void setInstance(androidx.appcompat.app.TwilightManager)
    private static final java.lang.String TAG
    private static final int SUNRISE
    private static final int SUNSET
android.support.v4.media.MediaBrowserCompatApi23$ItemCallbackProxy
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$singleOrNull$3
androidx.transition.Slide
androidx.transition.ChangeBounds:
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void setResizeClip(boolean)
    public boolean getResizeClip()
    private static final java.lang.String PROPNAME_BOUNDS
    private static final java.lang.String PROPNAME_CLIP
    private static final java.lang.String PROPNAME_PARENT
    private static final java.lang.String PROPNAME_WINDOW_X
    private static final java.lang.String PROPNAME_WINDOW_Y
androidx.appcompat.widget.VectorEnabledTintResources:
    public static void setCompatVectorFromResourcesEnabled(boolean)
    public static final int MAX_SDK_WHERE_REQUIRED
androidx.navigation.ui.CollapsingToolbarLayoutKt
kotlinx.android.parcel.Parceler$DefaultImpls
androidx.viewpager2.R$dimen
kotlin.comparisons.ReverseOrderComparator
kotlin.jvm.internal.markers.KMutableSet
kotlinx.coroutines.flow.FlowKt__MigrationKt$combine$$inlined$combine$2$2
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$2
kotlin.jvm.internal.IntSpreadBuilder
androidx.databinding.ListChangeRegistry
android.support.v4.media.MediaDescriptionCompatApi21$Builder:
    private void <init>()
androidx.core.view.ViewKt$doOnLayout$$inlined$doOnNextLayout$1
androidx.cursoradapter.widget.ResourceCursorAdapter:
    public void <init>(android.content.Context,int,android.database.Cursor)
    public void <init>(android.content.Context,int,android.database.Cursor,int)
    public void setViewResource(int)
    public void setDropDownViewResource(int)
kotlinx.coroutines.flow.FlowKt__MigrationKt$combine$$inlined$combine$3
androidx.databinding.adapters.TabWidgetBindingAdapter
kotlinx.coroutines.flow.internal.CombineKt$combineTransformInternal$2$invokeSuspend$$inlined$select$lambda$2
androidx.constraintlayout.solver.widgets.Barrier:
    public boolean allowsGoneWidget()
    public static final int LEFT
    public static final int RIGHT
    public static final int TOP
    public static final int BOTTOM
androidx.core.content.ContextKt
androidx.media.R$styleable
androidx.viewpager.widget.ViewPager$OnAdapterChangeListener
kotlinx.coroutines.CompletableDeferredKt
kotlin.collections.ArraysKt___ArraysKt$withIndex$3
androidx.arch.core.executor.ArchTaskExecutor:
    public static java.util.concurrent.Executor getMainThreadExecutor()
    public static java.util.concurrent.Executor getIOThreadExecutor()
    public void setDelegate(androidx.arch.core.executor.TaskExecutor)
kotlinx.coroutines.flow.internal.ChannelFlowKt
com.google.android.material.bottomnavigation.BottomNavigationView$1
androidx.annotation.InspectableProperty
kotlin.io.OnErrorAction
androidx.databinding.ObservableShort
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$6$lambda$1
kotlinx.coroutines.scheduling.WorkQueue
kotlinx.coroutines.flow.FlowKt__CountKt$count$1
androidx.lifecycle.LiveDataKt$observe$wrappedObserver$1
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combine$2$3
androidx.fragment.app.FragmentViewModelLazyKt:
    public static final synthetic kotlin.Lazy viewModels(androidx.fragment.app.Fragment,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0)
    public static synthetic kotlin.Lazy viewModels$default(androidx.fragment.app.Fragment,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,int,java.lang.Object)
    public static final synthetic kotlin.Lazy activityViewModels(androidx.fragment.app.Fragment,kotlin.jvm.functions.Function0)
    public static synthetic kotlin.Lazy activityViewModels$default(androidx.fragment.app.Fragment,kotlin.jvm.functions.Function0,int,java.lang.Object)
    public static synthetic kotlin.Lazy createViewModelLazy$default(androidx.fragment.app.Fragment,kotlin.reflect.KClass,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__MigrationKt$combineLatest$$inlined$combine$3$2
kotlin.jvm.internal.LocalVariableReferencesKt
androidx.appcompat.widget.DecorToolbar:
    public abstract java.lang.CharSequence getSubtitle()
    public abstract void setSubtitle(java.lang.CharSequence)
    public abstract boolean hasIcon()
    public abstract boolean hasLogo()
    public abstract void setLogo(android.graphics.drawable.Drawable)
    public abstract boolean hasEmbeddedTabs()
    public abstract boolean isTitleTruncated()
    public abstract void setNavigationMode(int)
    public abstract void setDropdownParams(android.widget.SpinnerAdapter,android.widget.AdapterView$OnItemSelectedListener)
    public abstract void setDropdownSelectedPosition(int)
    public abstract int getDropdownSelectedPosition()
    public abstract int getDropdownItemCount()
    public abstract void setCustomView(android.view.View)
    public abstract android.view.View getCustomView()
    public abstract void animateToVisibility(int)
    public abstract void setNavigationIcon(int)
    public abstract void setNavigationContentDescription(java.lang.CharSequence)
    public abstract void setDefaultNavigationContentDescription(int)
    public abstract void setDefaultNavigationIcon(android.graphics.drawable.Drawable)
    public abstract void saveHierarchyState(android.util.SparseArray)
    public abstract void restoreHierarchyState(android.util.SparseArray)
    public abstract void setBackgroundDrawable(android.graphics.drawable.Drawable)
    public abstract int getHeight()
    public abstract int getVisibility()
    public abstract void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback)
    public abstract android.view.Menu getMenu()
androidx.core.os.LocaleListInterface
kotlin.random.URandomKt
androidx.activity.ActivityViewModelLazyKt
kotlin.jvm.internal.LongSpreadBuilder
androidx.core.widget.ContentLoadingProgressBar$2
androidx.fragment.ktx.R$style
kotlinx.coroutines.channels.ChannelCoroutine
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior:
    public void setAutoHideEnabled(boolean)
    public boolean isAutoHideEnabled()
    public void setInternalAutoHideListener(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener)
    private static final boolean AUTO_HIDE_DEFAULT
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi19$1
androidx.transition.ViewUtilsBase:
    public void setAnimationMatrix(android.view.View,android.graphics.Matrix)
    private float[] mMatrixValues
    private static final java.lang.String TAG
    private static final int VISIBILITY_MASK
kotlin.jvm.internal.ArrayIteratorKt
androidx.lifecycle.extensions.R$dimen
androidx.appcompat.widget.AppCompatPopupWindow:
    public void <init>(android.content.Context,android.util.AttributeSet,int)
androidx.transition.TransitionPropagation:
    public void <init>()
kotlinx.coroutines.internal.ThreadContextKt$findOne$1
androidx.recyclerview.widget.ChildHelper$Bucket:
    static final int BITS_PER_WORD
    static final long LAST_BIT
androidx.annotation.BinderThread
kotlin.text.StringsKt___StringsKt$groupingBy$1
androidx.swiperefreshlayout.widget.CircularProgressDrawable$2
kotlin.sequences.SequencesKt___SequencesKt$minus$3
com.google.android.material.shape.CutCornerTreatment:
    public void <init>(float)
kotlinx.coroutines.flow.FlowKt__TransformKt$unsafeTransform$$inlined$unsafeFlow$2$lambda$1$1
androidx.recyclerview.widget.PagerSnapHelper$1
androidx.fragment.app.FragmentTabHost$SavedState
com.google.android.material.appbar.CollapsingToolbarLayout$2
kotlinx.coroutines.flow.internal.ChannelFlow$collectToFun$1
androidx.core.content.pm.ShortcutManagerCompat$1
kotlin.text.StringsKt___StringsKt$windowedSequence$1
androidx.core.app.JobIntentService$CompatWorkItem
androidx.core.text.TextDirectionHeuristicsCompat:
    private void <init>()
    private static final int STATE_TRUE
    private static final int STATE_FALSE
    private static final int STATE_UNKNOWN
kotlin.collections.State
androidx.asynclayoutinflater.view.AsyncLayoutInflater$BasicInflater
androidx.annotation.Nullable
androidx.transition.ViewGroupUtils:
    static int getChildDrawingOrder(android.view.ViewGroup,int)
    private void <init>()
    private static java.lang.reflect.Method sGetChildDrawingOrderMethod
    private static boolean sGetChildDrawingOrderMethodFetched
kotlin.sequences.TakeSequence
androidx.coordinatorlayout.R$styleable:
    private void <init>()
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi18
androidx.media.VolumeProviderCompatApi21$1
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$2
kotlin.coroutines.experimental.Continuation
kotlin.random.Random$Default:
    public static synthetic void Companion$annotations()
    public int nextInt(int)
    public long nextLong()
    public long nextLong(long)
    public long nextLong(long,long)
    public boolean nextBoolean()
    public double nextDouble()
    public double nextDouble(double)
    public double nextDouble(double,double)
    public float nextFloat()
    public byte[] nextBytes(byte[])
    public byte[] nextBytes(int)
    public byte[] nextBytes(byte[],int,int)
kotlin.concurrent.LocksKt
kotlin.collections.ArraysKt__ArraysJVMKt:
    public static final synthetic java.lang.Object[] orEmpty(java.lang.Object[])
    private static final java.lang.String toString(byte[],java.nio.charset.Charset)
    public static final synthetic java.lang.Object[] toTypedArray(java.util.Collection)
    public static final java.lang.Object[] arrayOfNulls(java.lang.Object[],int)
    public static final void copyOfRangeToIndexCheck(int,int)
    public static final int contentDeepHashCode(java.lang.Object[])
    public void <init>()
androidx.databinding.InverseBindingMethods
androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver:
    public void onItemRangeChanged(int,int,java.lang.Object)
    public void onItemRangeInserted(int,int)
    public void onItemRangeRemoved(int,int)
    public void onItemRangeMoved(int,int,int)
    void triggerUpdateProcessor()
androidx.databinding.ViewDataBinding$IncludedLayouts:
    public void <init>(int)
    public void setIncludes(int,java.lang.String[],int[],int[])
kotlin.ULong
com.google.android.material.badge.BadgeDrawable$BadgeGravity
androidx.coordinatorlayout.widget.ViewGroupUtils:
    private void <init>()
kotlinx.coroutines.flow.FlowKt__TransformKt$unsafeTransform$$inlined$unsafeFlow$5$1
kotlin.contracts.Effect
org.intellij.lang.annotations.JdkConstants$TabPlacement
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$7
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$1
com.google.android.material.datepicker.DaysOfWeekAdapter:
    private static final int NARROW_FORMAT
androidx.recyclerview.widget.ItemTouchUIUtil
kotlin.jvm.internal.ClassReference:
    public static synthetic void typeParameters$annotations()
    public static synthetic void supertypes$annotations()
    public static synthetic void sealedSubclasses$annotations()
    public static synthetic void visibility$annotations()
    public static synthetic void isFinal$annotations()
    public static synthetic void isOpen$annotations()
    public static synthetic void isAbstract$annotations()
    public static synthetic void isSealed$annotations()
    public static synthetic void isData$annotations()
    public static synthetic void isInner$annotations()
    public static synthetic void isCompanion$annotations()
    private final java.lang.Void error()
    public java.lang.String getSimpleName()
    public java.lang.String getQualifiedName()
    public java.util.Collection getMembers()
    public java.util.Collection getConstructors()
    public java.util.Collection getNestedClasses()
    public java.util.List getAnnotations()
    public java.lang.Object getObjectInstance()
    public boolean isInstance(java.lang.Object)
    public java.util.List getTypeParameters()
    public java.util.List getSupertypes()
    public java.util.List getSealedSubclasses()
    public kotlin.reflect.KVisibility getVisibility()
    public boolean isFinal()
    public boolean isOpen()
    public boolean isAbstract()
    public boolean isSealed()
    public boolean isData()
    public boolean isInner()
    public boolean isCompanion()
androidx.core.internal.package-info
androidx.annotation.AttrRes
kotlinx.android.parcel.Parcelize
androidx.core.content.pm.ActivityInfoCompat
org.intellij.lang.annotations.MagicConstant
androidx.core.view.GestureDetectorCompat
androidx.transition.PathMotion:
    public void <init>(android.content.Context,android.util.AttributeSet)
androidx.core.app.Person
kotlin.text.StringsKt___StringsJvmKt:
    private static final char elementAt(java.lang.CharSequence,int)
    public static final java.util.SortedSet toSortedSet(java.lang.CharSequence)
    public void <init>()
androidx.databinding.adapters.TabHostBindingAdapter
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$3
kotlin.coroutines.experimental.migration.ContinuationInterceptorMigration
androidx.slidingpanelayout.R$attr
kotlin.internal.PlatformImplementationsKt:
    private static final synthetic java.lang.Object castToBaseType(java.lang.Object)
    public static final boolean apiVersionIsAtLeast(int,int,int)
kotlinx.coroutines.flow.FlowKt__MigrationKt$combine$$inlined$unsafeFlow$1$1
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2$1
androidx.annotation.ArrayRes
androidx.annotation.StyleRes
androidx.core.content.MimeTypeFilter
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ShowStrategy
androidx.core.app.NotificationCompat$NotificationVisibility
androidx.transition.TransitionSet:
    public void <init>(android.content.Context,android.util.AttributeSet)
    public int getOrdering()
    public androidx.transition.TransitionSet addTarget(int)
    public androidx.transition.TransitionSet addTarget(java.lang.String)
    public androidx.transition.TransitionSet addTarget(java.lang.Class)
    public androidx.transition.TransitionSet removeTarget(int)
    public androidx.transition.TransitionSet removeTarget(java.lang.Class)
    public androidx.transition.TransitionSet removeTarget(java.lang.String)
    public androidx.transition.Transition excludeTarget(android.view.View,boolean)
    public androidx.transition.Transition excludeTarget(java.lang.String,boolean)
    public androidx.transition.Transition excludeTarget(int,boolean)
    public androidx.transition.Transition excludeTarget(java.lang.Class,boolean)
    public androidx.transition.TransitionSet removeTransition(androidx.transition.Transition)
    void forceToEnd(android.view.ViewGroup)
    androidx.transition.TransitionSet setSceneRoot(android.view.ViewGroup)
    void setCanRemoveViews(boolean)
    synthetic bridge androidx.transition.Transition setSceneRoot(android.view.ViewGroup)
    public synthetic bridge androidx.transition.Transition removeTarget(java.lang.Class)
    public synthetic bridge androidx.transition.Transition removeTarget(java.lang.String)
    public synthetic bridge androidx.transition.Transition removeTarget(int)
    public synthetic bridge androidx.transition.Transition addTarget(java.lang.Class)
    public synthetic bridge androidx.transition.Transition addTarget(java.lang.String)
    public synthetic bridge androidx.transition.Transition addTarget(int)
    private static final int FLAG_CHANGE_INTERPOLATOR
    private static final int FLAG_CHANGE_PROPAGATION
    private static final int FLAG_CHANGE_PATH_MOTION
    private static final int FLAG_CHANGE_EPICENTER
    public static final int ORDERING_TOGETHER
    public static final int ORDERING_SEQUENTIAL
androidx.recyclerview.widget.MessageThreadUtil$2
androidx.core.content.res.TypedArrayKt
androidx.appcompat.widget.ActivityChooserView
kotlinx.coroutines.channels.AbstractChannel$ReceiveHasNext
androidx.databinding.Untaggable
kotlinx.coroutines.flow.internal.ChannelFlowMerge
kotlin.coroutines.experimental.migration.ContextMigration
androidx.core.view.VelocityTrackerCompat
androidx.databinding.adapters.AutoCompleteTextViewBindingAdapter$FixText
kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2
kotlin.math.UMathKt
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$invokeSuspend$$inlined$collect$1$1
androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask$PrecomputedTextCallback
kotlin.Experimental$Level
kotlin.collections.UArraySortingKt
androidx.recyclerview.widget.SortedList$BatchedCallback
kotlinx.coroutines.CompletedWithCancellation
kotlinx.coroutines.selects.SelectBuilder$DefaultImpls
kotlinx.coroutines.selects.SelectBuilderImpl$SelectOnCancelling
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat
kotlinx.coroutines.channels.ChannelIterator$next0$1
androidx.print.PrintHelper$PrintUriAdapter$1$1
com.google.android.material.snackbar.BaseTransientBottomBar$2
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1$invokeSuspend$$inlined$collect$1
androidx.core.animation.AnimatorKt$doOnResume$$inlined$addPauseListener$1
androidx.slidingpanelayout.R
kotlin.collections.unsigned.UArraysKt
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6
kotlin.sequences.SequencesKt___SequencesKt$flatMap$1
androidx.viewpager.R$drawable
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$3:
    void <init>(androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer)
com.google.android.material.R$bool
kotlinx.coroutines.test.TestCoroutineContext$$special$$inlined$CoroutineExceptionHandler$1
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1$lambda$1$1
androidx.core.R$color
kotlinx.coroutines.DispatchedKt
androidx.databinding.adapters.DatePickerBindingAdapter$DateChangedListener
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler
kotlin.collections.IndexedValue
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub
kotlin.concurrent.ThreadsKt$thread$thread$1
kotlin.UShortArray
kotlin.concurrent.TimersKt$timerTask$1
kotlin.ranges.UIntProgression$Companion
kotlinx.coroutines.InactiveNodeList
androidx.core.util.SparseArrayKt
kotlin.collections.ArraysKt___ArraysJvmKt$asList$6
androidx.recyclerview.widget.RecyclerView$Recycler:
    public void bindViewToPosition(android.view.View,int)
    static final int DEFAULT_CACHE_SIZE
kotlin.collections.SetsKt__SetsKt
androidx.navigation.fragment.FragmentNavigator:
    private int getDestId(java.lang.String)
    private static final java.lang.String TAG
    private static final java.lang.String KEY_BACK_STACK_IDS
kotlin.UInt
androidx.recyclerview.widget.ItemTouchHelper$3
kotlin.text.CharCategory
kotlin.io.FilesKt__FilePathComponentsKt
androidx.appcompat.app.ActionBarDrawerToggle$1
kotlinx.coroutines.channels.ActorCoroutine
androidx.core.text.util.LinkifyCompat$LinkSpec
kotlin.text.RegexKt
androidx.core.app.NotificationCompat$WearableExtender
androidx.databinding.library.R$layout
com.google.android.material.internal.NavigationMenuPresenter
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$5
kotlin.jvm.functions.Function19
androidx.navigation.NavigatorProviderKt
androidx.annotation.BoolRes
com.google.android.material.circularreveal.CircularRevealFrameLayout:
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void actualDraw(android.graphics.Canvas)
    public boolean actualIsOpaque()
android.support.v4.media.session.MediaControllerCompat$TransportControlsBase
androidx.lifecycle.AndroidViewModel:
    public void <init>(android.app.Application)
    public android.app.Application getApplication()
    private android.app.Application mApplication
com.czluciusdev.diceroller.R$string
androidx.transition.R
kotlin.coroutines.experimental.CombinedContext
androidx.loader.app.LoaderManagerImpl$LoaderViewModel:
    void startCreatingLoader()
    boolean isCreatingLoader()
    void finishCreatingLoader()
    void putLoader(int,androidx.loader.app.LoaderManagerImpl$LoaderInfo)
    androidx.loader.app.LoaderManagerImpl$LoaderInfo getLoader(int)
    void removeLoader(int)
    boolean hasRunningLoaders()
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$invokeSuspend$$inlined$select$lambda$2
androidx.core.os.PersistableBundleKt
androidx.core.app.NotificationBuilderWithBuilderAccessor
androidx.fragment.ktx.R$layout
kotlinx.coroutines.sync.MutexImpl$LockSelect
kotlin.collections.IndexingIterable
androidx.viewpager.widget.ViewPager$3
androidx.core.transition.TransitionKt$addListener$2
androidx.core.app.FrameMetricsAggregator$FrameMetricsBaseImpl
kotlin.coroutines.experimental.SequenceBuilderKt__SequenceBuilderKt
androidx.databinding.adapters.FrameLayoutBindingAdapter
androidx.core.animation.AnimatorKt$addPauseListener$2
kotlinx.coroutines.selects.SelectClause0
androidx.constraintlayout.solver.widgets.WidgetContainer:
    public void <init>(int,int,int,int)
    public void <init>(int,int)
    public static androidx.constraintlayout.solver.widgets.Rectangle getBounds(java.util.ArrayList)
    public varargs void add(androidx.constraintlayout.solver.widgets.ConstraintWidget[])
    public java.util.ArrayList getChildren()
    public androidx.constraintlayout.solver.widgets.ConstraintWidget findWidget(float,float)
    public java.util.ArrayList findWidgets(int,int,int,int)
androidx.appcompat.widget.ActionMenuView:
    private static final java.lang.String TAG
    static final int MIN_CELL_SIZE
    static final int GENERATED_ITEM_PADDING
androidx.annotation.FontRes
kotlin.random.Random:
    public static synthetic byte[] nextBytes$default(kotlin.random.Random,byte[],int,int,int,java.lang.Object)
    public int nextInt(int)
    public long nextLong()
    public long nextLong(long)
    public long nextLong(long,long)
    public boolean nextBoolean()
    public double nextDouble()
    public double nextDouble(double)
    public double nextDouble(double,double)
    public float nextFloat()
    public byte[] nextBytes(byte[],int,int)
    public byte[] nextBytes(byte[])
    public byte[] nextBytes(int)
androidx.slidingpanelayout.R$string
android.support.v4.media.MediaBrowserCompat$MediaBrowserImpl
kotlin.UnsafeLazyImpl
androidx.core.app.AppLaunchChecker
kotlin.comparisons.ReversedComparator
androidx.media.AudioAttributesCompat$AttributeContentType
androidx.recyclerview.widget.ViewInfoStore:
    private static final boolean DEBUG
kotlin.UShort
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2
com.google.android.material.card.MaterialCardViewHelper:
    public void <init>(com.google.android.material.card.MaterialCardView,android.util.AttributeSet,int,int)
    private void updateInsetForeground(android.graphics.drawable.Drawable)
    private android.graphics.drawable.Drawable insetDrawable(android.graphics.drawable.Drawable)
    private float calculateVerticalBackgroundPadding()
    private float calculateHorizontalBackgroundPadding()
    private boolean canClipToOutline()
    private float getParentCardViewCalculatedCornerPadding()
    private boolean shouldAddCornerPaddingInsideCardBackground()
    private boolean shouldAddCornerPaddingOutsideCardBackground()
    private float calculateActualCornerPadding()
    private float calculateCornerPaddingForCornerTreatment(com.google.android.material.shape.CornerTreatment,float)
    private android.graphics.drawable.Drawable getClickableForeground()
    private android.graphics.drawable.Drawable createForegroundRippleDrawable()
    private android.graphics.drawable.Drawable createCompatRippleDrawable()
    private void updateRippleColor()
    private android.graphics.drawable.Drawable createCheckedIconLayer()
    private com.google.android.material.shape.MaterialShapeDrawable createForegroundShapeDrawable()
    void loadFromAttributes(android.content.res.TypedArray)
    void setUserContentPadding(int,int,int,int)
    void updateStroke()
    private final com.google.android.material.card.MaterialCardView materialCardView
    private final android.graphics.Rect userContentPadding
    private final com.google.android.material.shape.MaterialShapeDrawable bgDrawable
    private final com.google.android.material.shape.MaterialShapeDrawable foregroundContentDrawable
    private final int checkedIconMargin
    private final int checkedIconSize
    private int strokeWidth
    private android.graphics.drawable.Drawable fgDrawable
    private android.graphics.drawable.Drawable checkedIcon
    private android.content.res.ColorStateList rippleColor
    private android.content.res.ColorStateList checkedIconTint
    private com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel
    private android.content.res.ColorStateList strokeColor
    private android.graphics.drawable.Drawable rippleDrawable
    private android.graphics.drawable.LayerDrawable clickableForegroundDrawable
    private com.google.android.material.shape.MaterialShapeDrawable compatRippleDrawable
    private com.google.android.material.shape.MaterialShapeDrawable foregroundShapeDrawable
    private boolean isBackgroundOverwritten
    private boolean checkable
    private static final int DEFAULT_STROKE_VALUE
    private static final float CARD_VIEW_SHADOW_MULTIPLIER
    private static final int CHECKED_ICON_LAYER_INDEX
androidx.loader.content.ModernAsyncTask$3
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$distinct$1
kotlin.jvm.functions.Function7
androidx.viewpager2.adapter.FragmentStateAdapter$DataSetChangeObserver
kotlinx.coroutines.ParentJob$DefaultImpls
kotlin.coroutines.experimental.migration.ExperimentalContinuationInterceptorMigration
kotlinx.coroutines.internal.ThreadLocalKt
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$any$1
kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$1
com.google.android.material.chip.ChipGroup:
    public void check(int)
    public boolean isSingleSelection()
androidx.viewpager2.widget.ViewPager2$AccessibilityProvider
com.czluciusdev.diceroller.databinding.DiceFragmentBinding:
    public static com.czluciusdev.diceroller.databinding.DiceFragmentBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean)
    public static com.czluciusdev.diceroller.databinding.DiceFragmentBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean,java.lang.Object)
    public static com.czluciusdev.diceroller.databinding.DiceFragmentBinding inflate(android.view.LayoutInflater)
    public static com.czluciusdev.diceroller.databinding.DiceFragmentBinding inflate(android.view.LayoutInflater,java.lang.Object)
    public static com.czluciusdev.diceroller.databinding.DiceFragmentBinding bind(android.view.View)
    public static com.czluciusdev.diceroller.databinding.DiceFragmentBinding bind(android.view.View,java.lang.Object)
    public com.czluciusdev.diceroller.DiceViewModel getVm()
androidx.recyclerview.widget.LinearSmoothScroller:
    private static final boolean DEBUG
    private static final float MILLISECONDS_PER_INCH
    private static final int TARGET_SEEK_SCROLL_DISTANCE_PX
    public static final int SNAP_TO_START
    public static final int SNAP_TO_END
    public static final int SNAP_TO_ANY
    private static final float TARGET_SEEK_EXTRA_SCROLL_RATIO
androidx.navigation.fragment.FragmentNavArgsLazyKt$navArgs$1
kotlinx.coroutines.AwaitAll
android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl
kotlinx.coroutines.UndispatchedCoroutine
androidx.core.text.util.LinkifyCompat$1
androidx.core.net.UriCompat
com.google.android.material.R$layout:
    private void <init>()
androidx.activity.ActivityViewModelLazyKt$viewModels$factoryPromise$1
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper:
    public void <init>(android.os.ResultReceiver)
kotlinx.coroutines.ThreadContextElementKt
androidx.navigation.fragment.R$color
androidx.core.util.Pools
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$requireNoNulls$1
androidx.annotation.MenuRes
androidx.navigation.NavGraphViewModelLazyKt
com.google.android.material.appbar.AppBarLayout$LayoutParams:
    public void <init>(int,int,float)
    public void <init>(com.google.android.material.appbar.AppBarLayout$LayoutParams)
    public void setScrollFlags(int)
    public void setScrollInterpolator(android.view.animation.Interpolator)
    public static final int SCROLL_FLAG_NO_SCROLL
    public static final int SCROLL_FLAG_SCROLL
    public static final int SCROLL_FLAG_EXIT_UNTIL_COLLAPSED
    public static final int SCROLL_FLAG_ENTER_ALWAYS
    public static final int SCROLL_FLAG_ENTER_ALWAYS_COLLAPSED
    public static final int SCROLL_FLAG_SNAP
    public static final int SCROLL_FLAG_SNAP_MARGINS
    static final int FLAG_QUICK_RETURN
    static final int FLAG_SNAP
    static final int COLLAPSIBLE_FLAGS
android.support.v4.media.MediaMetadataCompat$Builder
kotlin.UByteArrayKt
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1
kotlin.collections.MapsKt__MapWithDefaultKt
com.google.android.material.dialog.MaterialAlertDialogBuilder
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2
kotlin.ranges.CharProgression$Companion
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$3
androidx.constraintlayout.solver.widgets.ResolutionAnchor:
    public void remove(androidx.constraintlayout.solver.widgets.ResolutionDimension)
    public static final int UNCONNECTED
    public static final int DIRECT_CONNECTION
    public static final int CENTER_CONNECTION
    public static final int MATCH_CONNECTION
    public static final int CHAIN_CONNECTION
    public static final int BARRIER_CONNECTION
androidx.core.content.SharedPreferencesKt
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$2
com.google.android.material.transformation.TransformationChildLayout:
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
kotlin.coroutines.EmptyCoroutineContext:
    private final java.lang.Object readResolve()
    public kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
    private static final long serialVersionUID
androidx.navigation.fragment.ktx.R$layout
androidx.databinding.adapters.CardViewBindingAdapter
androidx.lifecycle.ComputableLiveData
kotlin.coroutines.jvm.internal.DebugMetadata
kotlinx.coroutines.flow.FlowKt__DelayKt
androidx.databinding.adapters.TextViewBindingAdapter$1
androidx.core.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable
androidx.recyclerview.widget.AsyncListUtil$ViewCallback
kotlin.ranges.ULongProgression$Companion
kotlin.InitializedLazyImpl
androidx.coordinatorlayout.R$drawable
kotlinx.android.extensions.CacheImplementation$Companion
com.google.android.material.shape.Shapeable:
    public abstract com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
androidx.recyclerview.widget.SimpleItemAnimator:
    public boolean getSupportsChangeAnimations()
    public void setSupportsChangeAnimations(boolean)
    private static final boolean DEBUG
    private static final java.lang.String TAG
androidx.core.app.JobIntentService$CommandProcessor
androidx.transition.Styleable$TransitionTarget
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$invokeSuspend$$inlined$select$lambda$2
androidx.collection.LruCacheKt
androidx.databinding.library.baseAdapters.R$attr
androidx.legacy.coreui.R$integer
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior:
    public synthetic bridge void setInternalAutoHideListener(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener)
    public synthetic bridge boolean isAutoHideEnabled()
    public synthetic bridge void setAutoHideEnabled(boolean)
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatImpl
com.google.android.material.internal.NavigationMenuPresenter$ViewHolder
androidx.core.view.accessibility.AccessibilityNodeProviderCompat:
    public static final int HOST_VIEW_ID
kotlinx.coroutines.CoroutineExceptionHandlerKt
androidx.annotation.AnimatorRes
androidx.versionedparcelable.ParcelField
androidx.databinding.DataBinderMapper:
    public abstract int getLayoutId(java.lang.String)
    public abstract java.lang.String convertBrIdToString(int)
androidx.transition.PatternPathMotion
kotlin.time.AbstractDoubleClock$DoubleClockMark
com.czluciusdev.diceroller.R$color
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$HideStrategy
android.support.v4.media.session.MediaSessionCompat$1
kotlin.internal.DynamicExtension
androidx.appcompat.app.AlertDialog$Builder:
    public androidx.appcompat.app.AlertDialog$Builder setTitle(int)
    public androidx.appcompat.app.AlertDialog$Builder setMessage(int)
    public androidx.appcompat.app.AlertDialog$Builder setMessage(java.lang.CharSequence)
    public androidx.appcompat.app.AlertDialog$Builder setIcon(int)
    public androidx.appcompat.app.AlertDialog$Builder setIconAttribute(int)
    public androidx.appcompat.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setPositiveButtonIcon(android.graphics.drawable.Drawable)
    public androidx.appcompat.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setNegativeButtonIcon(android.graphics.drawable.Drawable)
    public androidx.appcompat.app.AlertDialog$Builder setNeutralButton(int,android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setNeutralButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setNeutralButtonIcon(android.graphics.drawable.Drawable)
    public androidx.appcompat.app.AlertDialog$Builder setCancelable(boolean)
    public androidx.appcompat.app.AlertDialog$Builder setOnCancelListener(android.content.DialogInterface$OnCancelListener)
    public androidx.appcompat.app.AlertDialog$Builder setOnDismissListener(android.content.DialogInterface$OnDismissListener)
    public androidx.appcompat.app.AlertDialog$Builder setItems(int,android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setCursor(android.database.Cursor,android.content.DialogInterface$OnClickListener,java.lang.String)
    public androidx.appcompat.app.AlertDialog$Builder setMultiChoiceItems(int,boolean[],android.content.DialogInterface$OnMultiChoiceClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setMultiChoiceItems(java.lang.CharSequence[],boolean[],android.content.DialogInterface$OnMultiChoiceClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setMultiChoiceItems(android.database.Cursor,java.lang.String,java.lang.String,android.content.DialogInterface$OnMultiChoiceClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(int,int,android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(android.database.Cursor,int,java.lang.String,android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)
    public androidx.appcompat.app.AlertDialog$Builder setView(int)
    public androidx.appcompat.app.AlertDialog$Builder setView(android.view.View)
    public androidx.appcompat.app.AlertDialog$Builder setView(android.view.View,int,int,int,int)
    public androidx.appcompat.app.AlertDialog$Builder setInverseBackgroundForced(boolean)
    public androidx.appcompat.app.AlertDialog$Builder setRecycleOnMeasureEnabled(boolean)
    public androidx.appcompat.app.AlertDialog show()
androidx.core.provider.FontsContractCompat$FontRequestCallback
kotlin.jvm.internal.FunctionReferenceImpl
kotlin.UByteArray
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6
androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord
com.czluciusdev.diceroller.R$animator
androidx.core.text.StringKt
androidx.slidingpanelayout.R$id
androidx.navigation.NavDestination:
    protected static java.lang.Class parseClassFromName(android.content.Context,java.lang.String,java.lang.Class)
    public boolean hasDeepLink(android.net.Uri)
    public final void putAction(int,int)
    public final void removeAction(int)
    public final void removeArgument(java.lang.String)
androidx.core.view.MenuItemCompat$OnActionExpandListener
androidx.databinding.library.baseAdapters.R$anim
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9$1
androidx.constraintlayout.widget.ConstraintHelper:
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
com.google.android.material.bottomnavigation.BottomNavigationView$SavedState$1
androidx.loader.app.LoaderManagerImpl$LoaderObserver:
    void <init>(androidx.loader.content.Loader,androidx.loader.app.LoaderManager$LoaderCallbacks)
    public void onChanged(java.lang.Object)
    public java.lang.String toString()
    private final androidx.loader.content.Loader mLoader
    private final androidx.loader.app.LoaderManager$LoaderCallbacks mCallback
    private boolean mDeliveredData
androidx.databinding.adapters.ViewBindingAdapter$OnViewDetachedFromWindow
androidx.coordinatorlayout.R$color
com.google.android.material.tabs.TabLayoutMediator$PagerAdapterObserver
androidx.navigation.common.R$dimen
kotlin.sequences.SequencesKt___SequencesKt$filterIsInstance$1
androidx.viewpager.widget.ViewPager$SavedState
androidx.recyclerview.widget.RecyclerView$ItemAnimator$AdapterChanges
kotlinx.coroutines.scheduling.CoroutineScheduler$Companion
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$associateTo$1
androidx.viewpager2.widget.ViewPager2$PageAwareAccessibilityProvider$2
androidx.loader.content.Loader$OnLoadCanceledListener
kotlinx.coroutines.channels.TickerChannelsKt$ticker$3
androidx.core.graphics.TypefaceCompatBaseImpl:
    private static final java.lang.String TAG
    private static final int INVALID_KEY
kotlin.coroutines.jvm.internal.ContinuationImpl
android.support.v4.media.MediaBrowserCompatApi23
kotlinx.coroutines.LazyStandaloneCoroutine
androidx.core.view.ViewCompat$NestedScrollType
androidx.databinding.BaseObservableField$DependencyCallback
com.google.android.material.appbar.AppBarLayout$BaseBehavior$BaseDragCallback:
    public void <init>()
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$zip$2
androidx.transition.FloatArrayEvaluator
androidx.navigation.ActivityNavigatorDestinationBuilderKt
kotlinx.coroutines.AwaitAll$AwaitAllNode
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$1
com.google.android.material.floatingactionbutton.BaseMotionStrategy
androidx.loader.R$styleable
kotlin.sequences.SubSequence
kotlinx.coroutines.flow.FlowKt__MigrationKt$combineLatest$$inlined$combine$3$3
kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1$1
androidx.recyclerview.widget.RecyclerView$ViewHolder:
    public final int getPosition()
    void stopIgnoring()
    static final int FLAG_BOUND
    static final int FLAG_UPDATE
    static final int FLAG_INVALID
    static final int FLAG_REMOVED
    static final int FLAG_NOT_RECYCLABLE
    static final int FLAG_RETURNED_FROM_SCRAP
    static final int FLAG_IGNORE
    static final int FLAG_TMP_DETACHED
    static final int FLAG_ADAPTER_POSITION_UNKNOWN
    static final int FLAG_ADAPTER_FULLUPDATE
    static final int FLAG_MOVED
    static final int FLAG_APPEARED_IN_PRE_LAYOUT
    static final int PENDING_ACCESSIBILITY_STATE_NOT_SET
    static final int FLAG_BOUNCED_FROM_HIDDEN_LIST
androidx.core.view.NestedScrollingChild3:
    public abstract void dispatchNestedScroll(int,int,int,int,int[],int,int[])
androidx.core.widget.TextViewKt$addTextChangedListener$3
androidx.navigation.NavGraphBuilder
kotlinx.coroutines.DebugStringsKt
com.google.android.material.tabs.TabLayout$SlidingTabIndicator$1
androidx.lifecycle.LifecycleDispatcher:
    private void <init>()
kotlin.collections.ArraysKt___ArraysKt:
    private static final java.lang.Object component1(java.lang.Object[])
    private static final byte component1(byte[])
    private static final short component1(short[])
    private static final int component1(int[])
    private static final long component1(long[])
    private static final float component1(float[])
    private static final double component1(double[])
    private static final boolean component1(boolean[])
    private static final char component1(char[])
    private static final java.lang.Object component2(java.lang.Object[])
    private static final byte component2(byte[])
    private static final short component2(short[])
    private static final int component2(int[])
    private static final long component2(long[])
    private static final float component2(float[])
    private static final double component2(double[])
    private static final boolean component2(boolean[])
    private static final char component2(char[])
    private static final java.lang.Object component3(java.lang.Object[])
    private static final byte component3(byte[])
    private static final short component3(short[])
    private static final int component3(int[])
    private static final long component3(long[])
    private static final float component3(float[])
    private static final double component3(double[])
    private static final boolean component3(boolean[])
    private static final char component3(char[])
    private static final java.lang.Object component4(java.lang.Object[])
    private static final byte component4(byte[])
    private static final short component4(short[])
    private static final int component4(int[])
    private static final long component4(long[])
    private static final float component4(float[])
    private static final double component4(double[])
    private static final boolean component4(boolean[])
    private static final char component4(char[])
    private static final java.lang.Object component5(java.lang.Object[])
    private static final byte component5(byte[])
    private static final short component5(short[])
    private static final int component5(int[])
    private static final long component5(long[])
    private static final float component5(float[])
    private static final double component5(double[])
    private static final boolean component5(boolean[])
    private static final char component5(char[])
    public static final boolean contains(java.lang.Object[],java.lang.Object)
    public static final boolean contains(byte[],byte)
    public static final boolean contains(short[],short)
    public static final boolean contains(int[],int)
    public static final boolean contains(long[],long)
    public static final boolean contains(float[],float)
    public static final boolean contains(double[],double)
    public static final boolean contains(boolean[],boolean)
    public static final boolean contains(char[],char)
    private static final java.lang.Object elementAtOrElse(java.lang.Object[],int,kotlin.jvm.functions.Function1)
    private static final byte elementAtOrElse(byte[],int,kotlin.jvm.functions.Function1)
    private static final short elementAtOrElse(short[],int,kotlin.jvm.functions.Function1)
    private static final int elementAtOrElse(int[],int,kotlin.jvm.functions.Function1)
    private static final long elementAtOrElse(long[],int,kotlin.jvm.functions.Function1)
    private static final float elementAtOrElse(float[],int,kotlin.jvm.functions.Function1)
    private static final double elementAtOrElse(double[],int,kotlin.jvm.functions.Function1)
    private static final boolean elementAtOrElse(boolean[],int,kotlin.jvm.functions.Function1)
    private static final char elementAtOrElse(char[],int,kotlin.jvm.functions.Function1)
    private static final java.lang.Object elementAtOrNull(java.lang.Object[],int)
    private static final java.lang.Byte elementAtOrNull(byte[],int)
    private static final java.lang.Short elementAtOrNull(short[],int)
    private static final java.lang.Integer elementAtOrNull(int[],int)
    private static final java.lang.Long elementAtOrNull(long[],int)
    private static final java.lang.Float elementAtOrNull(float[],int)
    private static final java.lang.Double elementAtOrNull(double[],int)
    private static final java.lang.Boolean elementAtOrNull(boolean[],int)
    private static final java.lang.Character elementAtOrNull(char[],int)
    private static final java.lang.Object find(java.lang.Object[],kotlin.jvm.functions.Function1)
    private static final java.lang.Byte find(byte[],kotlin.jvm.functions.Function1)
    private static final java.lang.Short find(short[],kotlin.jvm.functions.Function1)
    private static final java.lang.Integer find(int[],kotlin.jvm.functions.Function1)
    private static final java.lang.Long find(long[],kotlin.jvm.functions.Function1)
    private static final java.lang.Float find(float[],kotlin.jvm.functions.Function1)
    private static final java.lang.Double find(double[],kotlin.jvm.functions.Function1)
    private static final java.lang.Boolean find(boolean[],kotlin.jvm.functions.Function1)
    private static final java.lang.Character find(char[],kotlin.jvm.functions.Function1)
    private static final java.lang.Object findLast(java.lang.Object[],kotlin.jvm.functions.Function1)
    private static final java.lang.Byte findLast(byte[],kotlin.jvm.functions.Function1)
    private static final java.lang.Short findLast(short[],kotlin.jvm.functions.Function1)
    private static final java.lang.Integer findLast(int[],kotlin.jvm.functions.Function1)
    private static final java.lang.Long findLast(long[],kotlin.jvm.functions.Function1)
    private static final java.lang.Float findLast(float[],kotlin.jvm.functions.Function1)
    private static final java.lang.Double findLast(double[],kotlin.jvm.functions.Function1)
    private static final java.lang.Boolean findLast(boolean[],kotlin.jvm.functions.Function1)
    private static final java.lang.Character findLast(char[],kotlin.jvm.functions.Function1)
    public static final java.lang.Object first(java.lang.Object[])
    public static final byte first(byte[])
    public static final short first(short[])
    public static final int first(int[])
    public static final long first(long[])
    public static final float first(float[])
    public static final double first(double[])
    public static final boolean first(boolean[])
    public static final char first(char[])
    public static final java.lang.Object first(java.lang.Object[],kotlin.jvm.functions.Function1)
    public static final byte first(byte[],kotlin.jvm.functions.Function1)
    public static final short first(short[],kotlin.jvm.functions.Function1)
    public static final int first(int[],kotlin.jvm.functions.Function1)
    public static final long first(long[],kotlin.jvm.functions.Function1)
    public static final float first(float[],kotlin.jvm.functions.Function1)
    public static final double first(double[],kotlin.jvm.functions.Function1)
    public static final boolean first(boolean[],kotlin.jvm.functions.Function1)
    public static final char first(char[],kotlin.jvm.functions.Function1)
    public static final java.lang.Object firstOrNull(java.lang.Object[])
    public static final java.lang.Byte firstOrNull(byte[])
    public static final java.lang.Short firstOrNull(short[])
    public static final java.lang.Integer firstOrNull(int[])
    public static final java.lang.Long firstOrNull(long[])
    public static final java.lang.Float firstOrNull(float[])
    public static final java.lang.Double firstOrNull(double[])
    public static final java.lang.Boolean firstOrNull(boolean[])
    public static final java.lang.Character firstOrNull(char[])
    public static final java.lang.Object firstOrNull(java.lang.Object[],kotlin.jvm.functions.Function1)
    public static final java.lang.Byte firstOrNull(byte[],kotlin.jvm.functions.Function1)
    public static final java.lang.Short firstOrNull(short[],kotlin.jvm.functions.Function1)
    public static final java.lang.Integer firstOrNull(int[],kotlin.jvm.functions.Function1)
    public static final java.lang.Long firstOrNull(long[],kotlin.jvm.functions.Function1)
    public static final java.lang.Float firstOrNull(float[],kotlin.jvm.functions.Function1)
    public static final java.lang.Double firstOrNull(double[],kotlin.jvm.functions.Function1)
    public static final java.lang.Boolean firstOrNull(boolean[],kotlin.jvm.functions.Function1)
    public static final java.lang.Character firstOrNull(char[],kotlin.jvm.functions.Function1)
    private static final java.lang.Object getOrElse(java.lang.Object[],int,kotlin.jvm.functions.Function1)
    private static final byte getOrElse(byte[],int,kotlin.jvm.functions.Function1)
    private static final short getOrElse(short[],int,kotlin.jvm.functions.Function1)
    private static final int getOrElse(int[],int,kotlin.jvm.functions.Function1)
    private static final long getOrElse(long[],int,kotlin.jvm.functions.Function1)
    private static final float getOrElse(float[],int,kotlin.jvm.functions.Function1)
    private static final double getOrElse(double[],int,kotlin.jvm.functions.Function1)
    private static final boolean getOrElse(boolean[],int,kotlin.jvm.functions.Function1)
    private static final char getOrElse(char[],int,kotlin.jvm.functions.Function1)
    public static final java.lang.Object getOrNull(java.lang.Object[],int)
    public static final java.lang.Byte getOrNull(byte[],int)
    public static final java.lang.Short getOrNull(short[],int)
    public static final java.lang.Integer getOrNull(int[],int)
    public static final java.lang.Long getOrNull(long[],int)
    public static final java.lang.Float getOrNull(float[],int)
    public static final java.lang.Double getOrNull(double[],int)
    public static final java.lang.Boolean getOrNull(boolean[],int)
    public static final java.lang.Character getOrNull(char[],int)
    public static final int indexOf(java.lang.Object[],java.lang.Object)
    public static final int indexOf(byte[],byte)
    public static final int indexOf(short[],short)
    public static final int indexOf(int[],int)
    public static final int indexOf(long[],long)
    public static final int indexOf(float[],float)
    public static final int indexOf(double[],double)
    public static final int indexOf(boolean[],boolean)
    public static final int indexOf(char[],char)
    public static final int indexOfFirst(java.lang.Object[],kotlin.jvm.functions.Function1)
    public static final int indexOfFirst(byte[],kotlin.jvm.functions.Function1)
    public static final int indexOfFirst(short[],kotlin.jvm.functions.Function1)
    public static final int indexOfFirst(int[],kotlin.jvm.functions.Function1)
    public static final int indexOfFirst(long[],kotlin.jvm.functions.Function1)
    public static final int indexOfFirst(float[],kotlin.jvm.functions.Function1)
    public static final int indexOfFirst(double[],kotlin.jvm.functions.Function1)
    public static final int indexOfFirst(boolean[],kotlin.jvm.functions.Function1)
    public static final int indexOfFirst(char[],kotlin.jvm.functions.Function1)
    public static final int indexOfLast(java.lang.Object[],kotlin.jvm.functions.Function1)
    public static final int indexOfLast(byte[],kotlin.jvm.functions.Function1)
    public static final int indexOfLast(short[],kotlin.jvm.functions.Function1)
    public static final int indexOfLast(int[],kotlin.jvm.functions.Function1)
    public static final int indexOfLast(long[],kotlin.jvm.functions.Function1)
    public static final int indexOfLast(float[],kotlin.jvm.functions.Function1)
    public static final int indexOfLast(double[],kotlin.jvm.functions.Function1)
    public static final int indexOfLast(boolean[],kotlin.jvm.functions.Function1)
    public static final int indexOfLast(char[],kotlin.jvm.functions.Function1)
    public static final java.lang.Object last(java.lang.Object[])
    public static final byte last(byte[])
    public static final short last(short[])
    public static final int last(int[])
    public static final long last(long[])
    public static final float last(float[])
    public static final double last(double[])
    public static final boolean last(boolean[])
    public static final char last(char[])
    public static final java.lang.Object last(java.lang.Object[],kotlin.jvm.functions.Function1)
    public static final byte last(byte[],kotlin.jvm.functions.Function1)
    public static final short last(short[],kotlin.jvm.functions.Function1)
    public static final int last(int[],kotlin.jvm.functions.Function1)
    public static final long last(long[],kotlin.jvm.functions.Function1)
    public static final float last(float[],kotlin.jvm.functions.Function1)
    public static final double last(double[],kotlin.jvm.functions.Function1)
    public static final boolean last(boolean[],kotlin.jvm.functions.Function1)
    public static final char last(char[],kotlin.jvm.functions.Function1)
    public static final int lastIndexOf(java.lang.Object[],java.lang.Object)
    public static final int lastIndexOf(byte[],byte)
    public static final int lastIndexOf(short[],short)
    public static final int lastIndexOf(int[],int)
    public static final int lastIndexOf(long[],long)
    public static final int lastIndexOf(float[],float)
    public static final int lastIndexOf(double[],double)
    public static final int lastIndexOf(boolean[],boolean)
    public static final int lastIndexOf(char[],char)
    public static final java.lang.Object lastOrNull(java.lang.Object[])
    public static final java.lang.Byte lastOrNull(byte[])
    public static final java.lang.Short lastOrNull(short[])
    public static final java.lang.Integer lastOrNull(int[])
    public static final java.lang.Long lastOrNull(long[])
    public static final java.lang.Float lastOrNull(float[])
    public static final java.lang.Double lastOrNull(double[])
    public static final java.lang.Boolean lastOrNull(boolean[])
    public static final java.lang.Character lastOrNull(char[])
    public static final java.lang.Object lastOrNull(java.lang.Object[],kotlin.jvm.functions.Function1)
    public static final java.lang.Byte lastOrNull(byte[],kotlin.jvm.functions.Function1)
    public static final java.lang.Short lastOrNull(short[],kotlin.jvm.functions.Function1)
    public static final java.lang.Integer lastOrNull(int[],kotlin.jvm.functions.Function1)
    public static final java.lang.Long lastOrNull(long[],kotlin.jvm.functions.Function1)
    public static final java.lang.Float lastOrNull(float[],kotlin.jvm.functions.Function1)
    public static final java.lang.Double lastOrNull(double[],kotlin.jvm.functions.Function1)
    public static final java.lang.Boolean lastOrNull(boolean[],kotlin.jvm.functions.Function1)
    public static final java.lang.Character lastOrNull(char[],kotlin.jvm.functions.Function1)
    private static final java.lang.Object random(java.lang.Object[])
    private static final byte random(byte[])
    private static final short random(short[])
    private static final int random(int[])
    private static final long random(long[])
    private static final float random(float[])
    private static final double random(double[])
    private static final boolean random(boolean[])
    private static final char random(char[])
    public static final java.lang.Object random(java.lang.Object[],kotlin.random.Random)
    public static final byte random(byte[],kotlin.random.Random)
    public static final short random(short[],kotlin.random.Random)
    public static final int random(int[],kotlin.random.Random)
    public static final long random(long[],kotlin.random.Random)
    public static final float random(float[],kotlin.random.Random)
    public static final double random(double[],kotlin.random.Random)
    public static final boolean random(boolean[],kotlin.random.Random)
    public static final char random(char[],kotlin.random.Random)
    public static final java.lang.Object single(java.lang.Object[])
    public static final byte single(byte[])
    public static final short single(short[])
    public static final int single(int[])
    public static final long single(long[])
    public static final float single(float[])
    public static final double single(double[])
    public static final boolean single(boolean[])
    public static final java.lang.Object single(java.lang.Object[],kotlin.jvm.functions.Function1)
    public static final byte single(byte[],kotlin.jvm.functions.Function1)
    public static final short single(short[],kotlin.jvm.functions.Function1)
    public static final int single(int[],kotlin.jvm.functions.Function1)
    public static final long single(long[],kotlin.jvm.functions.Function1)
    public static final float single(float[],kotlin.jvm.functions.Function1)
    public static final double single(double[],kotlin.jvm.functions.Function1)
    public static final boolean single(boolean[],kotlin.jvm.functions.Function1)
    public static final char single(char[],kotlin.jvm.functions.Function1)
    public static final java.lang.Object singleOrNull(java.lang.Object[])
    public static final java.lang.Byte singleOrNull(byte[])
    public static final java.lang.Short singleOrNull(short[])
    public static final java.lang.Integer singleOrNull(int[])
    public static final java.lang.Long singleOrNull(long[])
    public static final java.lang.Float singleOrNull(float[])
    public static final java.lang.Double singleOrNull(double[])
    public static final java.lang.Boolean singleOrNull(boolean[])
    public static final java.lang.Character singleOrNull(char[])
    public static final java.lang.Object singleOrNull(java.lang.Object[],kotlin.jvm.functions.Function1)
    public static final java.lang.Byte singleOrNull(byte[],kotlin.jvm.functions.Function1)
    public static final java.lang.Short singleOrNull(short[],kotlin.jvm.functions.Function1)
    public static final java.lang.Integer singleOrNull(int[],kotlin.jvm.functions.Function1)
    public static final java.lang.Long singleOrNull(long[],kotlin.jvm.functions.Function1)
    public static final java.lang.Float singleOrNull(float[],kotlin.jvm.functions.Function1)
    public static final java.lang.Double singleOrNull(double[],kotlin.jvm.functions.Function1)
    public static final java.lang.Boolean singleOrNull(boolean[],kotlin.jvm.functions.Function1)
    public static final java.lang.Character singleOrNull(char[],kotlin.jvm.functions.Function1)
    public static final java.util.List drop(java.lang.Object[],int)
    public static final java.util.List drop(byte[],int)
    public static final java.util.List drop(short[],int)
    public static final java.util.List drop(int[],int)
    public static final java.util.List drop(long[],int)
    public static final java.util.List drop(float[],int)
    public static final java.util.List drop(double[],int)
    public static final java.util.List drop(boolean[],int)
    public static final java.util.List drop(char[],int)
    public static final java.util.List dropLast(java.lang.Object[],int)
    public static final java.util.List dropLast(byte[],int)
    public static final java.util.List dropLast(short[],int)
    public static final java.util.List dropLast(int[],int)
    public static final java.util.List dropLast(long[],int)
    public static final java.util.List dropLast(float[],int)
    public static final java.util.List dropLast(double[],int)
    public static final java.util.List dropLast(boolean[],int)
    public static final java.util.List dropLast(char[],int)
    public static final java.util.List dropLastWhile(java.lang.Object[],kotlin.jvm.functions.Function1)
    public static final java.util.List dropLastWhile(byte[],kotlin.jvm.functions.Function1)
    public static final java.util.List dropLastWhile(short[],kotlin.jvm.functions.Function1)
    public static final java.util.List dropLastWhile(int[],kotlin.jvm.functions.Function1)
    public static final java.util.List dropLastWhile(long[],kotlin.jvm.functions.Function1)
    public static final java.util.List dropLastWhile(float[],kotlin.jvm.functions.Function1)
    public static final java.util.List dropLastWhile(double[],kotlin.jvm.functions.Function1)
    public static final java.util.List dropLastWhile(boolean[],kotlin.jvm.functions.Function1)
    public static final java.util.List dropLastWhile(char[],kotlin.jvm.functions.Function1)
    public static final java.util.List dropWhile(java.lang.Object[],kotlin.jvm.functions.Function1)
    public static final java.util.List dropWhile(byte[],kotlin.jvm.functions.Function1)
    public static final java.util.List dropWhile(short[],kotlin.jvm.functions.Function1)
    public static final java.util.List dropWhile(int[],kotlin.jvm.functions.Function1)
    public static final java.util.List dropWhile(long[],kotlin.jvm.functions.Function1)
    public static final java.util.List dropWhile(float[],kotlin.jvm.functions.Function1)
    public static final java.util.List dropWhile(double[],kotlin.jvm.functions.Function1)
    public static final java.util.List dropWhile(boolean[],kotlin.jvm.functions.Function1)
    public static final java.util.List dropWhile(char[],kotlin.jvm.functions.Function1)
    public static final java.util.List filter(java.lang.Object[],kotlin.jvm.functions.Function1)
    public static final java.util.List filter(byte[],kotlin.jvm.functions.Function1)
    public static final java.util.List filter(short[],kotlin.jvm.functions.Function1)
    public static final java.util.List filter(int[],kotlin.jvm.functions.Function1)
    public static final java.util.List filter(long[],kotlin.jvm.functions.Function1)
    public static final java.util.List filter(float[],kotlin.jvm.functions.Function1)
    public static final java.util.List filter(double[],kotlin.jvm.functions.Function1)
    public static final java.util.List filter(boolean[],kotlin.jvm.functions.Function1)
    public static final java.util.List filter(char[],kotlin.jvm.functions.Function1)
    public static final java.util.List filterIndexed(java.lang.Object[],kotlin.jvm.functions.Function2)
    public static final java.util.List filterIndexed(byte[],kotlin.jvm.functions.Function2)
    public static final java.util.List filterIndexed(short[],kotlin.jvm.functions.Function2)
    public static final java.util.List filterIndexed(int[],kotlin.jvm.functions.Function2)
    public static final java.util.List filterIndexed(long[],kotlin.jvm.functions.Function2)
    public static final java.util.List filterIndexed(float[],kotlin.jvm.functions.Function2)
    public static final java.util.List filterIndexed(double[],kotlin.jvm.functions.Function2)
    public static final java.util.List filterIndexed(boolean[],kotlin.jvm.functions.Function2)
    public static final java.util.List filterIndexed(char[],kotlin.jvm.functions.Function2)
    public static final java.util.Collection filterIndexedTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function2)
    public static final java.util.Collection filterIndexedTo(byte[],java.util.Collection,kotlin.jvm.functions.Function2)
    public static final java.util.Collection filterIndexedTo(short[],java.util.Collection,kotlin.jvm.functions.Function2)
    public static final java.util.Collection filterIndexedTo(int[],java.util.Collection,kotlin.jvm.functions.Function2)
    public static final java.util.Collection filterIndexedTo(long[],java.util.Collection,kotlin.jvm.functions.Function2)
    public static final java.util.Collection filterIndexedTo(float[],java.util.Collection,kotlin.jvm.functions.Function2)
    public static final java.util.Collection filterIndexedTo(double[],java.util.Collection,kotlin.jvm.functions.Function2)
    public static final java.util.Collection filterIndexedTo(boolean[],java.util.Collection,kotlin.jvm.functions.Function2)
    public static final java.util.Collection filterIndexedTo(char[],java.util.Collection,kotlin.jvm.functions.Function2)
    public static final synthetic java.util.List filterIsInstance(java.lang.Object[])
    public static final synthetic java.util.Collection filterIsInstanceTo(java.lang.Object[],java.util.Collection)
    public static final java.util.List filterNot(java.lang.Object[],kotlin.jvm.functions.Function1)
    public static final java.util.List filterNot(byte[],kotlin.jvm.functions.Function1)
    public static final java.util.List filterNot(short[],kotlin.jvm.functions.Function1)
    public static final java.util.List filterNot(int[],kotlin.jvm.functions.Function1)
    public static final java.util.List filterNot(long[],kotlin.jvm.functions.Function1)
    public static final java.util.List filterNot(float[],kotlin.jvm.functions.Function1)
    public static final java.util.List filterNot(double[],kotlin.jvm.functions.Function1)
    public static final java.util.List filterNot(boolean[],kotlin.jvm.functions.Function1)
    public static final java.util.List filterNot(char[],kotlin.jvm.functions.Function1)
    public static final java.util.List filterNotNull(java.lang.Object[])
    public static final java.util.Collection filterNotNullTo(java.lang.Object[],java.util.Collection)
    public static final java.util.Collection filterNotTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function1)
    public static final java.util.Collection filterNotTo(byte[],java.util.Collection,kotlin.jvm.functions.Function1)
    public static final java.util.Collection filterNotTo(short[],java.util.Collection,kotlin.jvm.functions.Function1)
    public static final java.util.Collection filterNotTo(int[],java.util.Collection,kotlin.jvm.functions.Function1)
    public static final java.util.Collection filterNotTo(long[],java.util.Collection,kotlin.jvm.functions.Function1)
    public static final java.util.Collection filterNotTo(float[],java.util.Collection,kotlin.jvm.functions.Function1)
    public static final java.util.Collection filterNotTo(double[],java.util.Collection,kotlin.jvm.functions.Function1)
    public static final java.util.Collection filterNotTo(boolean[],java.util.Collection,kotlin.jvm.functions.Function1)
    public static final java.util.Collection filterNotTo(char[],java.util.Collection,kotlin.jvm.functions.Function1)
    public static final java.util.Collection filterTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function1)
    public static final java.util.Collection filterTo(byte[],java.util.Collection,kotlin.jvm.functions.Function1)
    public static final java.util.Collection filterTo(short[],java.util.Collection,kotlin.jvm.functions.Function1)
    public static final java.util.Collection filterTo(int[],java.util.Collection,kotlin.jvm.functions.Function1)
    public static final java.util.Collection filterTo(long[],java.util.Collection,kotlin.jvm.functions.Function1)
    public static final java.util.Collection filterTo(float[],java.util.Collection,kotlin.jvm.functions.Function1)
    public static final java.util.Collection filterTo(double[],java.util.Collection,kotlin.jvm.functions.Function1)
    public static final java.util.Collection filterTo(boolean[],java.util.Collection,kotlin.jvm.functions.Function1)
    public static final java.util.Collection filterTo(char[],java.util.Collection,kotlin.jvm.functions.Function1)
    public static final java.util.List slice(java.lang.Object[],kotlin.ranges.IntRange)
    public static final java.util.List slice(byte[],kotlin.ranges.IntRange)
    public static final java.util.List slice(short[],kotlin.ranges.IntRange)
    public static final java.util.List slice(int[],kotlin.ranges.IntRange)
    public static final java.util.List slice(long[],kotlin.ranges.IntRange)
    public static final java.util.List slice(float[],kotlin.ranges.IntRange)
    public static final java.util.List slice(double[],kotlin.ranges.IntRange)
    public static final java.util.List slice(boolean[],kotlin.ranges.IntRange)
    public static final java.util.List slice(char[],kotlin.ranges.IntRange)
    public static final java.util.List slice(java.lang.Object[],java.lang.Iterable)
    public static final java.util.List slice(byte[],java.lang.Iterable)
    public static final java.util.List slice(short[],java.lang.Iterable)
    public static final java.util.List slice(int[],java.lang.Iterable)
    public static final java.util.List slice(long[],java.lang.Iterable)
    public static final java.util.List slice(float[],java.lang.Iterable)
    public static final java.util.List slice(double[],java.lang.Iterable)
    public static final java.util.List slice(boolean[],java.lang.Iterable)
    public static final java.util.List slice(char[],java.lang.Iterable)
    public static final java.lang.Object[] sliceArray(java.lang.Object[],java.util.Collection)
    public static final byte[] sliceArray(byte[],java.util.Collection)
    public static final short[] sliceArray(short[],java.util.Collection)
    public static final int[] sliceArray(int[],java.util.Collection)
    public static final long[] sliceArray(long[],java.util.Collection)
    public static final float[] sliceArray(float[],java.util.Collection)
    public static final double[] sliceArray(double[],java.util.Collection)
    public static final boolean[] sliceArray(boolean[],java.util.Collection)
    public static final char[] sliceArray(char[],java.util.Collection)
    public static final java.lang.Object[] sliceArray(java.lang.Object[],kotlin.ranges.IntRange)
    public static final byte[] sliceArray(byte[],kotlin.ranges.IntRange)
    public static final short[] sliceArray(short[],kotlin.ranges.IntRange)
    public static final int[] sliceArray(int[],kotlin.ranges.IntRange)
    public static final long[] sliceArray(long[],kotlin.ranges.IntRange)
    public static final float[] sliceArray(float[],kotlin.ranges.IntRange)
    public static final double[] sliceArray(double[],kotlin.ranges.IntRange)
    public static final boolean[] sliceArray(boolean[],kotlin.ranges.IntRange)
    public static final char[] sliceArray(char[],kotlin.ranges.IntRange)
    public static final java.util.List take(java.lang.Object[],int)
    public static final java.util.List take(byte[],int)
    public static final java.util.List take(short[],int)
    public static final java.util.List take(int[],int)
    public static final java.util.List take(long[],int)
    public static final java.util.List take(float[],int)
    public static final java.util.List take(double[],int)
    public static final java.util.List take(boolean[],int)
    public static final java.util.List take(char[],int)
    public static final java.util.List takeLast(java.lang.Object[],int)
    public static final java.util.List takeLast(byte[],int)
    public static final java.util.List takeLast(short[],int)
    public static final java.util.List takeLast(int[],int)
    public static final java.util.List takeLast(long[],int)
    public static final java.util.List takeLast(float[],int)
    public static final java.util.List takeLast(double[],int)
    public static final java.util.List takeLast(boolean[],int)
    public static final java.util.List takeLast(char[],int)
    public static final java.util.List takeLastWhile(java.lang.Object[],kotlin.jvm.functions.Function1)
    public static final java.util.List takeLastWhile(byte[],kotlin.jvm.functions.Function1)
    public static final java.util.List takeLastWhile(short[],kotlin.jvm.functions.Function1)
    public static final java.util.List takeLastWhile(int[],kotlin.jvm.functions.Function1)
    public static final java.util.List takeLastWhile(long[],kotlin.jvm.functions.Function1)
    public static final java.util.List takeLastWhile(float[],kotlin.jvm.functions.Function1)
    public static final java.util.List takeLastWhile(double[],kotlin.jvm.functions.Function1)
    public static final java.util.List takeLastWhile(boolean[],kotlin.jvm.functions.Function1)
    public static final java.util.List takeLastWhile(char[],kotlin.jvm.functions.Function1)
    public static final java.util.List takeWhile(java.lang.Object[],kotlin.jvm.functions.Function1)
    public static final java.util.List takeWhile(byte[],kotlin.jvm.functions.Function1)
    public static final java.util.List takeWhile(short[],kotlin.jvm.functions.Function1)
    public static final java.util.List takeWhile(int[],kotlin.jvm.functions.Function1)
    public static final java.util.List takeWhile(long[],kotlin.jvm.functions.Function1)
    public static final java.util.List takeWhile(float[],kotlin.jvm.functions.Function1)
    public static final java.util.List takeWhile(double[],kotlin.jvm.functions.Function1)
    public static final java.util.List takeWhile(boolean[],kotlin.jvm.functions.Function1)
    public static final java.util.List takeWhile(char[],kotlin.jvm.functions.Function1)
    public static final void reverse(java.lang.Object[])
    public static final void reverse(byte[])
    public static final void reverse(short[])
    public static final void reverse(int[])
    public static final void reverse(long[])
    public static final void reverse(float[])
    public static final void reverse(double[])
    public static final void reverse(boolean[])
    public static final void reverse(char[])
    public static final java.util.List reversed(java.lang.Object[])
    public static final java.util.List reversed(byte[])
    public static final java.util.List reversed(short[])
    public static final java.util.List reversed(int[])
    public static final java.util.List reversed(long[])
    public static final java.util.List reversed(float[])
    public static final java.util.List reversed(double[])
    public static final java.util.List reversed(boolean[])
    public static final java.util.List reversed(char[])
    public static final java.lang.Object[] reversedArray(java.lang.Object[])
    public static final byte[] reversedArray(byte[])
    public static final short[] reversedArray(short[])
    public static final int[] reversedArray(int[])
    public static final long[] reversedArray(long[])
    public static final float[] reversedArray(float[])
    public static final double[] reversedArray(double[])
    public static final boolean[] reversedArray(boolean[])
    public static final char[] reversedArray(char[])
    public static final void sortBy(java.lang.Object[],kotlin.jvm.functions.Function1)
    public static final void sortByDescending(java.lang.Object[],kotlin.jvm.functions.Function1)
    public static final void sortDescending(java.lang.Comparable[])
    public static final void sortDescending(byte[])
    public static final void sortDescending(short[])
    public static final void sortDescending(int[])
    public static final void sortDescending(long[])
    public static final void sortDescending(float[])
    public static final void sortDescending(double[])
    public static final void sortDescending(char[])
    public static final java.util.List sorted(java.lang.Comparable[])
    public static final java.util.List sorted(byte[])
    public static final java.util.List sorted(short[])
    public static final java.util.List sorted(int[])
    public static final java.util.List sorted(long[])
    public static final java.util.List sorted(float[])
    public static final java.util.List sorted(double[])
    public static final java.util.List sorted(char[])
    public static final java.lang.Comparable[] sortedArray(java.lang.Comparable[])
    public static final byte[] sortedArray(byte[])
    public static final short[] sortedArray(short[])
    public static final int[] sortedArray(int[])
    public static final long[] sortedArray(long[])
    public static final float[] sortedArray(float[])
    public static final double[] sortedArray(double[])
    public static final char[] sortedArray(char[])
    public static final java.lang.Comparable[] sortedArrayDescending(java.lang.Comparable[])
    public static final byte[] sortedArrayDescending(byte[])
    public static final short[] sortedArrayDescending(short[])
    public static final int[] sortedArrayDescending(int[])
    public static final long[] sortedArrayDescending(long[])
    public static final float[] sortedArrayDescending(float[])
    public static final double[] sortedArrayDescending(double[])
    public static final char[] sortedArrayDescending(char[])
    public static final java.lang.Object[] sortedArrayWith(java.lang.Object[],java.util.Comparator)
    public static final java.util.List sortedBy(java.lang.Object[],kotlin.jvm.functions.Function1)
    public static final java.util.List sortedBy(byte[],kotlin.jvm.functions.Function1)
    public static final java.util.List sortedBy(short[],kotlin.jvm.functions.Function1)
    public static final java.util.List sortedBy(int[],kotlin.jvm.functions.Function1)
    public static final java.util.List sortedBy(long[],kotlin.jvm.functions.Function1)
    public static final java.util.List sortedBy(float[],kotlin.jvm.functions.Function1)
    public static final java.util.List sortedBy(double[],kotlin.jvm.functions.Function1)
    public static final java.util.List sortedBy(boolean[],kotlin.jvm.functions.Function1)
    public static final java.util.List sortedBy(char[],kotlin.jvm.functions.Function1)
    public static final java.util.List sortedByDescending(java.lang.Object[],kotlin.jvm.functions.Function1)
    public static final java.util.List sortedByDescending(byte[],kotlin.jvm.functions.Function1)
    public static final java.util.List sortedByDescending(short[],kotlin.jvm.functions.Function1)
    public static final java.util.List sortedByDescending(int[],kotlin.jvm.functions.Function1)
    public static final java.util.List sortedByDescending(long[],kotlin.jvm.functions.Function1)
    public static final java.util.List sortedByDescending(float[],kotlin.jvm.functions.Function1)
    public static final java.util.List sortedByDescending(double[],kotlin.jvm.functions.Function1)
    public static final java.util.List sortedByDescending(boolean[],kotlin.jvm.functions.Function1)
    public static final java.util.List sortedByDescending(char[],kotlin.jvm.functions.Function1)
    public static final java.util.List sortedDescending(java.lang.Comparable[])
    public static final java.util.List sortedDescending(byte[])
    public static final java.util.List sortedDescending(short[])
    public static final java.util.List sortedDescending(int[])
    public static final java.util.List sortedDescending(long[])
    public static final java.util.List sortedDescending(float[])
    public static final java.util.List sortedDescending(double[])
    public static final java.util.List sortedDescending(char[])
    public static final java.util.List sortedWith(java.lang.Object[],java.util.Comparator)
    public static final java.util.List sortedWith(byte[],java.util.Comparator)
    public static final java.util.List sortedWith(short[],java.util.Comparator)
    public static final java.util.List sortedWith(int[],java.util.Comparator)
    public static final java.util.List sortedWith(long[],java.util.Comparator)
    public static final java.util.List sortedWith(float[],java.util.Comparator)
    public static final java.util.List sortedWith(double[],java.util.Comparator)
    public static final java.util.List sortedWith(boolean[],java.util.Comparator)
    public static final java.util.List sortedWith(char[],java.util.Comparator)
    public static final kotlin.ranges.IntRange getIndices(java.lang.Object[])
    public static final kotlin.ranges.IntRange getIndices(byte[])
    public static final kotlin.ranges.IntRange getIndices(short[])
    public static final kotlin.ranges.IntRange getIndices(int[])
    public static final kotlin.ranges.IntRange getIndices(long[])
    public static final kotlin.ranges.IntRange getIndices(float[])
    public static final kotlin.ranges.IntRange getIndices(double[])
    public static final kotlin.ranges.IntRange getIndices(boolean[])
    public static final kotlin.ranges.IntRange getIndices(char[])
    private static final boolean isEmpty(java.lang.Object[])
    private static final boolean isEmpty(byte[])
    private static final boolean isEmpty(short[])
    private static final boolean isEmpty(int[])
    private static final boolean isEmpty(long[])
    private static final boolean isEmpty(float[])
    private static final boolean isEmpty(double[])
    private static final boolean isEmpty(boolean[])
    private static final boolean isEmpty(char[])
    private static final boolean isNotEmpty(java.lang.Object[])
    private static final boolean isNotEmpty(byte[])
    private static final boolean isNotEmpty(short[])
    private static final boolean isNotEmpty(int[])
    private static final boolean isNotEmpty(long[])
    private static final boolean isNotEmpty(float[])
    private static final boolean isNotEmpty(double[])
    private static final boolean isNotEmpty(boolean[])
    private static final boolean isNotEmpty(char[])
    public static final int getLastIndex(java.lang.Object[])
    public static final int getLastIndex(byte[])
    public static final int getLastIndex(short[])
    public static final int getLastIndex(int[])
    public static final int getLastIndex(long[])
    public static final int getLastIndex(float[])
    public static final int getLastIndex(double[])
    public static final int getLastIndex(boolean[])
    public static final int getLastIndex(char[])
    public static final boolean[] toBooleanArray(java.lang.Boolean[])
    public static final byte[] toByteArray(java.lang.Byte[])
    public static final char[] toCharArray(java.lang.Character[])
    public static final double[] toDoubleArray(java.lang.Double[])
    public static final float[] toFloatArray(java.lang.Float[])
    public static final int[] toIntArray(java.lang.Integer[])
    public static final long[] toLongArray(java.lang.Long[])
    public static final short[] toShortArray(java.lang.Short[])
    public static final java.util.Map associate(java.lang.Object[],kotlin.jvm.functions.Function1)
    public static final java.util.Map associate(byte[],kotlin.jvm.functions.Function1)
    public static final java.util.Map associate(short[],kotlin.jvm.functions.Function1)
    public static final java.util.Map associate(int[],kotlin.jvm.functions.Function1)
    public static final java.util.Map associate(long[],kotlin.jvm.functions.Function1)
    public static final java.util.Map associate(float[],kotlin.jvm.functions.Function1)
    public static final java.util.Map associate(double[],kotlin.jvm.functions.Function1)
    public static final java.util.Map associate(boolean[],kotlin.jvm.functions.Function1)
    public static final java.util.Map associate(char[],kotlin.jvm.functions.Function1)
    public static final java.util.Map associateBy(java.lang.Object[],kotlin.jvm.functions.Function1)
    public static final java.util.Map associateBy(byte[],kotlin.jvm.functions.Function1)
    public static final java.util.Map associateBy(short[],kotlin.jvm.functions.Function1)
    public static final java.util.Map associateBy(int[],kotlin.jvm.functions.Function1)
    public static final java.util.Map associateBy(long[],kotlin.jvm.functions.Function1)
    public static final java.util.Map associateBy(float[],kotlin.jvm.functions.Function1)
    public static final java.util.Map associateBy(double[],kotlin.jvm.functions.Function1)
    public static final java.util.Map associateBy(boolean[],kotlin.jvm.functions.Function1)
    public static final java.util.Map associateBy(char[],kotlin.jvm.functions.Function1)
    public static final java.util.Map associateBy(java.lang.Object[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
    public static final java.util.Map associateBy(byte[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
    public static final java.util.Map associateBy(short[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
    public static final java.util.Map associateBy(int[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
    public static final java.util.Map associateBy(long[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
    public static final java.util.Map associateBy(float[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
    public static final java.util.Map associateBy(double[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
    public static final java.util.Map associateBy(boolean[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
    public static final java.util.Map associateBy(char[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
    public static final java.util.Map associateByTo(java.lang.Object[],java.util.Map,kotlin.jvm.functions.Function1)
    public static final java.util.Map associateByTo(byte[],java.util.Map,kotlin.jvm.functions.Function1)
    public static final java.util.Map associateByTo(short[],java.util.Map,kotlin.jvm.functions.Function1)
    public static final java.util.Map associateByTo(int[],java.util.Map,kotlin.jvm.functions.Function1)
    public static final java.util.Map associateByTo(long[],java.util.Map,kotlin.jvm.functions.Function1)
    public static final java.util.Map associateByTo(float[],java.util.Map,kotlin.jvm.functions.Function1)
    public static final java.util.Map associateByTo(double[],java.util.Map,kotlin.jvm.functions.Function1)
    public static final java.util.Map associateByTo(boolean[],java.util.Map,kotlin.jvm.functions.Function1)
    public static final java.util.Map associateByTo(char[],java.util.Map,kotlin.jvm.functions.Function1)
    public static final java.util.Map associateByTo(java.lang.Object[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
    public static final java.util.Map associateByTo(byte[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
    public static final java.util.Map associateByTo(short[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
    public static final java.util.Map associateByTo(int[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
    public static final java.util.Map associateByTo(long[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
    public static final java.util.Map associateByTo(float[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
    public static final java.util.Map associateByTo(double[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
    public static final java.util.Map associateByTo(boolean[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
    public static final java.util.Map associateByTo(char[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
    public static final java.util.Map associateTo(java.lang.Object[],java.util.Map,kotlin.jvm.functions.Function1)
    public static final java.util.Map associateTo(byte[],java.util.Map,kotlin.jvm.functions.Function1)
    public static final java.util.Map associateTo(short[],java.util.Map,kotlin.jvm.functions.Function1)
    public static final java.util.Map associateTo(int[],java.util.Map,kotlin.jvm.functions.Function1)
    public static final java.util.Map associateTo(long[],java.util.Map,kotlin.jvm.functions.Function1)
    public static final java.util.Map associateTo(float[],java.util.Map,kotlin.jvm.functions.Function1)
    public static final java.util.Map associateTo(double[],java.util.Map,kotlin.jvm.functions.Function1)
    public static final java.util.Map associateTo(boolean[],java.util.Map,kotlin.jvm.functions.Function1)
    public static final java.util.Map associateTo(char[],java.util.Map,kotlin.jvm.functions.Function1)
    public static final java.util.Collection toCollection(java.lang.Object[],java.util.Collection)
    public static final java.util.Collection toCollection(byte[],java.util.Collection)
    public static final java.util.Collection toCollection(short[],java.util.Collection)
    public static final java.util.Collection toCollection(int[],java.util.Collection)
    public static final java.util.Collection toCollection(long[],java.util.Collection)
    public static final java.util.Collection toCollection(float[],java.util.Collection)
    public static final java.util.Collection toCollection(double[],java.util.Collection)
    public static final java.util.Collection toCollection(boolean[],java.util.Collection)
    public static final java.util.Collection toCollection(char[],java.util.Collection)
    public static final java.util.HashSet toHashSet(java.lang.Object[])
    public static final java.util.HashSet toHashSet(byte[])
    public static final java.util.HashSet toHashSet(short[])
    public static final java.util.HashSet toHashSet(int[])
    public static final java.util.HashSet toHashSet(long[])
    public static final java.util.HashSet toHashSet(float[])
    public static final java.util.HashSet toHashSet(double[])
    public static final java.util.HashSet toHashSet(boolean[])
    public static final java.util.HashSet toHashSet(char[])
    public static final java.util.List toList(java.lang.Object[])
    public static final java.util.List toList(byte[])
    public static final java.util.List toList(short[])
    public static final java.util.List toList(int[])
    public static final java.util.List toList(long[])
    public static final java.util.List toList(float[])
    public static final java.util.List toList(double[])
    public static final java.util.List toList(boolean[])
    public static final java.util.List toList(char[])
    public static final java.util.List toMutableList(java.lang.Object[])
    public static final java.util.List toMutableList(byte[])
    public static final java.util.List toMutableList(short[])
    public static final java.util.List toMutableList(int[])
    public static final java.util.List toMutableList(long[])
    public static final java.util.List toMutableList(float[])
    public static final java.util.List toMutableList(double[])
    public static final java.util.List toMutableList(boolean[])
    public static final java.util.List toMutableList(char[])
    public static final java.util.Set toSet(java.lang.Object[])
    public static final java.util.Set toSet(byte[])
    public static final java.util.Set toSet(short[])
    public static final java.util.Set toSet(int[])
    public static final java.util.Set toSet(long[])
    public static final java.util.Set toSet(float[])
    public static final java.util.Set toSet(double[])
    public static final java.util.Set toSet(boolean[])
    public static final java.util.Set toSet(char[])
    public static final java.util.List flatMap(java.lang.Object[],kotlin.jvm.functions.Function1)
    public static final java.util.List flatMap(byte[],kotlin.jvm.functions.Function1)
    public static final java.util.List flatMap(short[],kotlin.jvm.functions.Function1)
    public static final java.util.List flatMap(int[],kotlin.jvm.functions.Function1)
    public static final java.util.List flatMap(long[],kotlin.jvm.functions.Function1)
    public static final java.util.List flatMap(float[],kotlin.jvm.functions.Function1)
    public static final java.util.List flatMap(double[],kotlin.jvm.functions.Function1)
    public static final java.util.List flatMap(boolean[],kotlin.jvm.functions.Function1)
    public static final java.util.List flatMap(char[],kotlin.jvm.functions.Function1)
    public static final java.util.Collection flatMapTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function1)
    public static final java.util.Collection flatMapTo(byte[],java.util.Collection,kotlin.jvm.functions.Function1)
    public static final java.util.Collection flatMapTo(short[],java.util.Collection,kotlin.jvm.functions.Function1)
    public static final java.util.Collection flatMapTo(int[],java.util.Collection,kotlin.jvm.functions.Function1)
    public static final java.util.Collection flatMapTo(long[],java.util.Collection,kotlin.jvm.functions.Function1)
    public static final java.util.Collection flatMapTo(float[],java.util.Collection,kotlin.jvm.functions.Function1)
    public static final java.util.Collection flatMapTo(double[],java.util.Collection,kotlin.jvm.functions.Function1)
    public static final java.util.Collection flatMapTo(boolean[],java.util.Collection,kotlin.jvm.functions.Function1)
    public static final java.util.Collection flatMapTo(char[],java.util.Collection,kotlin.jvm.functions.Function1)
    public static final java.util.Map groupBy(java.lang.Object[],kotlin.jvm.functions.Function1)
    public static final java.util.Map groupBy(byte[],kotlin.jvm.functions.Function1)
    public static final java.util.Map groupBy(short[],kotlin.jvm.functions.Function1)
    public static final java.util.Map groupBy(int[],kotlin.jvm.functions.Function1)
    public static final java.util.Map groupBy(long[],kotlin.jvm.functions.Function1)
    public static final java.util.Map groupBy(float[],kotlin.jvm.functions.Function1)
    public static final java.util.Map groupBy(double[],kotlin.jvm.functions.Function1)
    public static final java.util.Map groupBy(boolean[],kotlin.jvm.functions.Function1)
    public static final java.util.Map groupBy(char[],kotlin.jvm.functions.Function1)
    public static final java.util.Map groupBy(java.lang.Object[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
    public static final java.util.Map groupBy(byte[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
    public static final java.util.Map groupBy(short[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
    public static final java.util.Map groupBy(int[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
    public static final java.util.Map groupBy(long[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
    public static final java.util.Map groupBy(float[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
    public static final java.util.Map groupBy(double[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
    public static final java.util.Map groupBy(boolean[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
    public static final java.util.Map groupBy(char[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
    public static final java.util.Map groupByTo(java.lang.Object[],java.util.Map,kotlin.jvm.functions.Function1)
    public static final java.util.Map groupByTo(byte[],java.util.Map,kotlin.jvm.functions.Function1)
    public static final java.util.Map groupByTo(short[],java.util.Map,kotlin.jvm.functions.Function1)
    public static final java.util.Map groupByTo(int[],java.util.Map,kotlin.jvm.functions.Function1)
    public static final java.util.Map groupByTo(long[],java.util.Map,kotlin.jvm.functions.Function1)
    public static final java.util.Map groupByTo(float[],java.util.Map,kotlin.jvm.functions.Function1)
    public static final java.util.Map groupByTo(double[],java.util.Map,kotlin.jvm.functions.Function1)
    public static final java.util.Map groupByTo(boolean[],java.util.Map,kotlin.jvm.functions.Function1)
    public static final java.util.Map groupByTo(char[],java.util.Map,kotlin.jvm.functions.Function1)
    public static final java.util.Map groupByTo(java.lang.Object[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
    public static final java.util.Map groupByTo(byte[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
    public static final java.util.Map groupByTo(short[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
    public static final java.util.Map groupByTo(int[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
    public static final java.util.Map groupByTo(long[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
    public static final java.util.Map groupByTo(float[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
    public static final java.util.Map groupByTo(double[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
    public static final java.util.Map groupByTo(boolean[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
    public static final java.util.Map groupByTo(char[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
    public static final kotlin.collections.Grouping groupingBy(java.lang.Object[],kotlin.jvm.functions.Function1)
    public static final java.util.List map(java.lang.Object[],kotlin.jvm.functions.Function1)
    public static final java.util.List map(byte[],kotlin.jvm.functions.Function1)
    public static final java.util.List map(short[],kotlin.jvm.functions.Function1)
    public static final java.util.List map(int[],kotlin.jvm.functions.Function1)
    public static final java.util.List map(long[],kotlin.jvm.functions.Function1)
    public static final java.util.List map(float[],kotlin.jvm.functions.Function1)
    public static final java.util.List map(double[],kotlin.jvm.functions.Function1)
    public static final java.util.List map(boolean[],kotlin.jvm.functions.Function1)
    public static final java.util.List map(char[],kotlin.jvm.functions.Function1)
    public static final java.util.List mapIndexed(java.lang.Object[],kotlin.jvm.functions.Function2)
    public static final java.util.List mapIndexed(byte[],kotlin.jvm.functions.Function2)
    public static final java.util.List mapIndexed(short[],kotlin.jvm.functions.Function2)
    public static final java.util.List mapIndexed(int[],kotlin.jvm.functions.Function2)
    public static final java.util.List mapIndexed(long[],kotlin.jvm.functions.Function2)
    public static final java.util.List mapIndexed(float[],kotlin.jvm.functions.Function2)
    public static final java.util.List mapIndexed(double[],kotlin.jvm.functions.Function2)
    public static final java.util.List mapIndexed(boolean[],kotlin.jvm.functions.Function2)
    public static final java.util.List mapIndexed(char[],kotlin.jvm.functions.Function2)
    public static final java.util.List mapIndexedNotNull(java.lang.Object[],kotlin.jvm.functions.Function2)
    public static final java.util.Collection mapIndexedNotNullTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function2)
    public static final java.util.Collection mapIndexedTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function2)
    public static final java.util.Collection mapIndexedTo(byte[],java.util.Collection,kotlin.jvm.functions.Function2)
    public static final java.util.Collection mapIndexedTo(short[],java.util.Collection,kotlin.jvm.functions.Function2)
    public static final java.util.Collection mapIndexedTo(int[],java.util.Collection,kotlin.jvm.functions.Function2)
    public static final java.util.Collection mapIndexedTo(long[],java.util.Collection,kotlin.jvm.functions.Function2)
    public static final java.util.Collection mapIndexedTo(float[],java.util.Collection,kotlin.jvm.functions.Function2)
    public static final java.util.Collection mapIndexedTo(double[],java.util.Collection,kotlin.jvm.functions.Function2)
    public static final java.util.Collection mapIndexedTo(boolean[],java.util.Collection,kotlin.jvm.functions.Function2)
    public static final java.util.Collection mapIndexedTo(char[],java.util.Collection,kotlin.jvm.functions.Function2)
    public static final java.util.List mapNotNull(java.lang.Object[],kotlin.jvm.functions.Function1)
    public static final java.util.Collection mapNotNullTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function1)
    public static final java.util.Collection mapTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function1)
    public static final java.util.Collection mapTo(byte[],java.util.Collection,kotlin.jvm.functions.Function1)
    public static final java.util.Collection mapTo(short[],java.util.Collection,kotlin.jvm.functions.Function1)
    public static final java.util.Collection mapTo(int[],java.util.Collection,kotlin.jvm.functions.Function1)
    public static final java.util.Collection mapTo(long[],java.util.Collection,kotlin.jvm.functions.Function1)
    public static final java.util.Collection mapTo(float[],java.util.Collection,kotlin.jvm.functions.Function1)
    public static final java.util.Collection mapTo(double[],java.util.Collection,kotlin.jvm.functions.Function1)
    public static final java.util.Collection mapTo(boolean[],java.util.Collection,kotlin.jvm.functions.Function1)
    public static final java.util.Collection mapTo(char[],java.util.Collection,kotlin.jvm.functions.Function1)
    public static final java.lang.Iterable withIndex(java.lang.Object[])
    public static final java.lang.Iterable withIndex(byte[])
    public static final java.lang.Iterable withIndex(short[])
    public static final java.lang.Iterable withIndex(int[])
    public static final java.lang.Iterable withIndex(long[])
    public static final java.lang.Iterable withIndex(float[])
    public static final java.lang.Iterable withIndex(double[])
    public static final java.lang.Iterable withIndex(boolean[])
    public static final java.lang.Iterable withIndex(char[])
    public static final java.util.List distinct(java.lang.Object[])
    public static final java.util.List distinct(byte[])
    public static final java.util.List distinct(short[])
    public static final java.util.List distinct(int[])
    public static final java.util.List distinct(long[])
    public static final java.util.List distinct(float[])
    public static final java.util.List distinct(double[])
    public static final java.util.List distinct(boolean[])
    public static final java.util.List distinct(char[])
    public static final java.util.List distinctBy(java.lang.Object[],kotlin.jvm.functions.Function1)
    public static final java.util.List distinctBy(byte[],kotlin.jvm.functions.Function1)
    public static final java.util.List distinctBy(short[],kotlin.jvm.functions.Function1)
    public static final java.util.List distinctBy(int[],kotlin.jvm.functions.Function1)
    public static final java.util.List distinctBy(long[],kotlin.jvm.functions.Function1)
    public static final java.util.List distinctBy(float[],kotlin.jvm.functions.Function1)
    public static final java.util.List distinctBy(double[],kotlin.jvm.functions.Function1)
    public static final java.util.List distinctBy(boolean[],kotlin.jvm.functions.Function1)
    public static final java.util.List distinctBy(char[],kotlin.jvm.functions.Function1)
    public static final java.util.Set intersect(java.lang.Object[],java.lang.Iterable)
    public static final java.util.Set intersect(byte[],java.lang.Iterable)
    public static final java.util.Set intersect(short[],java.lang.Iterable)
    public static final java.util.Set intersect(int[],java.lang.Iterable)
    public static final java.util.Set intersect(long[],java.lang.Iterable)
    public static final java.util.Set intersect(float[],java.lang.Iterable)
    public static final java.util.Set intersect(double[],java.lang.Iterable)
    public static final java.util.Set intersect(boolean[],java.lang.Iterable)
    public static final java.util.Set intersect(char[],java.lang.Iterable)
    public static final java.util.Set subtract(java.lang.Object[],java.lang.Iterable)
    public static final java.util.Set subtract(byte[],java.lang.Iterable)
    public static final java.util.Set subtract(short[],java.lang.Iterable)
    public static final java.util.Set subtract(int[],java.lang.Iterable)
    public static final java.util.Set subtract(long[],java.lang.Iterable)
    public static final java.util.Set subtract(float[],java.lang.Iterable)
    public static final java.util.Set subtract(double[],java.lang.Iterable)
    public static final java.util.Set subtract(boolean[],java.lang.Iterable)
    public static final java.util.Set subtract(char[],java.lang.Iterable)
    public static final java.util.Set toMutableSet(java.lang.Object[])
    public static final java.util.Set toMutableSet(byte[])
    public static final java.util.Set toMutableSet(short[])
    public static final java.util.Set toMutableSet(int[])
    public static final java.util.Set toMutableSet(long[])
    public static final java.util.Set toMutableSet(float[])
    public static final java.util.Set toMutableSet(double[])
    public static final java.util.Set toMutableSet(boolean[])
    public static final java.util.Set toMutableSet(char[])
    public static final java.util.Set union(java.lang.Object[],java.lang.Iterable)
    public static final java.util.Set union(byte[],java.lang.Iterable)
    public static final java.util.Set union(short[],java.lang.Iterable)
    public static final java.util.Set union(int[],java.lang.Iterable)
    public static final java.util.Set union(long[],java.lang.Iterable)
    public static final java.util.Set union(float[],java.lang.Iterable)
    public static final java.util.Set union(double[],java.lang.Iterable)
    public static final java.util.Set union(boolean[],java.lang.Iterable)
    public static final java.util.Set union(char[],java.lang.Iterable)
    public static final boolean all(java.lang.Object[],kotlin.jvm.functions.Function1)
    public static final boolean all(byte[],kotlin.jvm.functions.Function1)
    public static final boolean all(short[],kotlin.jvm.functions.Function1)
    public static final boolean all(int[],kotlin.jvm.functions.Function1)
    public static final boolean all(long[],kotlin.jvm.functions.Function1)
    public static final boolean all(float[],kotlin.jvm.functions.Function1)
    public static final boolean all(double[],kotlin.jvm.functions.Function1)
    public static final boolean all(boolean[],kotlin.jvm.functions.Function1)
    public static final boolean all(char[],kotlin.jvm.functions.Function1)
    public static final boolean any(java.lang.Object[])
    public static final boolean any(byte[])
    public static final boolean any(short[])
    public static final boolean any(int[])
    public static final boolean any(long[])
    public static final boolean any(float[])
    public static final boolean any(double[])
    public static final boolean any(boolean[])
    public static final boolean any(char[])
    public static final boolean any(java.lang.Object[],kotlin.jvm.functions.Function1)
    public static final boolean any(byte[],kotlin.jvm.functions.Function1)
    public static final boolean any(short[],kotlin.jvm.functions.Function1)
    public static final boolean any(int[],kotlin.jvm.functions.Function1)
    public static final boolean any(long[],kotlin.jvm.functions.Function1)
    public static final boolean any(float[],kotlin.jvm.functions.Function1)
    public static final boolean any(double[],kotlin.jvm.functions.Function1)
    public static final boolean any(boolean[],kotlin.jvm.functions.Function1)
    public static final boolean any(char[],kotlin.jvm.functions.Function1)
    private static final int count(java.lang.Object[])
    private static final int count(byte[])
    private static final int count(short[])
    private static final int count(int[])
    private static final int count(long[])
    private static final int count(float[])
    private static final int count(double[])
    private static final int count(boolean[])
    private static final int count(char[])
    public static final int count(java.lang.Object[],kotlin.jvm.functions.Function1)
    public static final int count(byte[],kotlin.jvm.functions.Function1)
    public static final int count(short[],kotlin.jvm.functions.Function1)
    public static final int count(int[],kotlin.jvm.functions.Function1)
    public static final int count(long[],kotlin.jvm.functions.Function1)
    public static final int count(float[],kotlin.jvm.functions.Function1)
    public static final int count(double[],kotlin.jvm.functions.Function1)
    public static final int count(boolean[],kotlin.jvm.functions.Function1)
    public static final int count(char[],kotlin.jvm.functions.Function1)
    public static final java.lang.Object fold(java.lang.Object[],java.lang.Object,kotlin.jvm.functions.Function2)
    public static final java.lang.Object fold(byte[],java.lang.Object,kotlin.jvm.functions.Function2)
    public static final java.lang.Object fold(short[],java.lang.Object,kotlin.jvm.functions.Function2)
    public static final java.lang.Object fold(int[],java.lang.Object,kotlin.jvm.functions.Function2)
    public static final java.lang.Object fold(long[],java.lang.Object,kotlin.jvm.functions.Function2)
    public static final java.lang.Object fold(float[],java.lang.Object,kotlin.jvm.functions.Function2)
    public static final java.lang.Object fold(double[],java.lang.Object,kotlin.jvm.functions.Function2)
    public static final java.lang.Object fold(boolean[],java.lang.Object,kotlin.jvm.functions.Function2)
    public static final java.lang.Object fold(char[],java.lang.Object,kotlin.jvm.functions.Function2)
    public static final java.lang.Object foldIndexed(java.lang.Object[],java.lang.Object,kotlin.jvm.functions.Function3)
    public static final java.lang.Object foldIndexed(byte[],java.lang.Object,kotlin.jvm.functions.Function3)
    public static final java.lang.Object foldIndexed(short[],java.lang.Object,kotlin.jvm.functions.Function3)
    public static final java.lang.Object foldIndexed(int[],java.lang.Object,kotlin.jvm.functions.Function3)
    public static final java.lang.Object foldIndexed(long[],java.lang.Object,kotlin.jvm.functions.Function3)
    public static final java.lang.Object foldIndexed(float[],java.lang.Object,kotlin.jvm.functions.Function3)
    public static final java.lang.Object foldIndexed(double[],java.lang.Object,kotlin.jvm.functions.Function3)
    public static final java.lang.Object foldIndexed(boolean[],java.lang.Object,kotlin.jvm.functions.Function3)
    public static final java.lang.Object foldIndexed(char[],java.lang.Object,kotlin.jvm.functions.Function3)
    public static final java.lang.Object foldRight(java.lang.Object[],java.lang.Object,kotlin.jvm.functions.Function2)
    public static final java.lang.Object foldRight(byte[],java.lang.Object,kotlin.jvm.functions.Function2)
    public static final java.lang.Object foldRight(short[],java.lang.Object,kotlin.jvm.functions.Function2)
    public static final java.lang.Object foldRight(int[],java.lang.Object,kotlin.jvm.functions.Function2)
    public static final java.lang.Object foldRight(long[],java.lang.Object,kotlin.jvm.functions.Function2)
    public static final java.lang.Object foldRight(float[],java.lang.Object,kotlin.jvm.functions.Function2)
    public static final java.lang.Object foldRight(double[],java.lang.Object,kotlin.jvm.functions.Function2)
    public static final java.lang.Object foldRight(boolean[],java.lang.Object,kotlin.jvm.functions.Function2)
    public static final java.lang.Object foldRight(char[],java.lang.Object,kotlin.jvm.functions.Function2)
    public static final java.lang.Object foldRightIndexed(java.lang.Object[],java.lang.Object,kotlin.jvm.functions.Function3)
    public static final java.lang.Object foldRightIndexed(byte[],java.lang.Object,kotlin.jvm.functions.Function3)
    public static final java.lang.Object foldRightIndexed(short[],java.lang.Object,kotlin.jvm.functions.Function3)
    public static final java.lang.Object foldRightIndexed(int[],java.lang.Object,kotlin.jvm.functions.Function3)
    public static final java.lang.Object foldRightIndexed(long[],java.lang.Object,kotlin.jvm.functions.Function3)
    public static final java.lang.Object foldRightIndexed(float[],java.lang.Object,kotlin.jvm.functions.Function3)
    public static final java.lang.Object foldRightIndexed(double[],java.lang.Object,kotlin.jvm.functions.Function3)
    public static final java.lang.Object foldRightIndexed(boolean[],java.lang.Object,kotlin.jvm.functions.Function3)
    public static final java.lang.Object foldRightIndexed(char[],java.lang.Object,kotlin.jvm.functions.Function3)
    public static final void forEach(java.lang.Object[],kotlin.jvm.functions.Function1)
    public static final void forEach(byte[],kotlin.jvm.functions.Function1)
    public static final void forEach(short[],kotlin.jvm.functions.Function1)
    public static final void forEach(int[],kotlin.jvm.functions.Function1)
    public static final void forEach(long[],kotlin.jvm.functions.Function1)
    public static final void forEach(float[],kotlin.jvm.functions.Function1)
    public static final void forEach(double[],kotlin.jvm.functions.Function1)
    public static final void forEach(boolean[],kotlin.jvm.functions.Function1)
    public static final void forEach(char[],kotlin.jvm.functions.Function1)
    public static final void forEachIndexed(java.lang.Object[],kotlin.jvm.functions.Function2)
    public static final void forEachIndexed(byte[],kotlin.jvm.functions.Function2)
    public static final void forEachIndexed(short[],kotlin.jvm.functions.Function2)
    public static final void forEachIndexed(int[],kotlin.jvm.functions.Function2)
    public static final void forEachIndexed(long[],kotlin.jvm.functions.Function2)
    public static final void forEachIndexed(float[],kotlin.jvm.functions.Function2)
    public static final void forEachIndexed(double[],kotlin.jvm.functions.Function2)
    public static final void forEachIndexed(boolean[],kotlin.jvm.functions.Function2)
    public static final void forEachIndexed(char[],kotlin.jvm.functions.Function2)
    public static final java.lang.Double max(java.lang.Double[])
    public static final java.lang.Float max(java.lang.Float[])
    public static final java.lang.Comparable max(java.lang.Comparable[])
    public static final java.lang.Byte max(byte[])
    public static final java.lang.Short max(short[])
    public static final java.lang.Integer max(int[])
    public static final java.lang.Long max(long[])
    public static final java.lang.Float max(float[])
    public static final java.lang.Double max(double[])
    public static final java.lang.Character max(char[])
    public static final java.lang.Object maxBy(java.lang.Object[],kotlin.jvm.functions.Function1)
    public static final java.lang.Byte maxBy(byte[],kotlin.jvm.functions.Function1)
    public static final java.lang.Short maxBy(short[],kotlin.jvm.functions.Function1)
    public static final java.lang.Integer maxBy(int[],kotlin.jvm.functions.Function1)
    public static final java.lang.Long maxBy(long[],kotlin.jvm.functions.Function1)
    public static final java.lang.Float maxBy(float[],kotlin.jvm.functions.Function1)
    public static final java.lang.Double maxBy(double[],kotlin.jvm.functions.Function1)
    public static final java.lang.Boolean maxBy(boolean[],kotlin.jvm.functions.Function1)
    public static final java.lang.Character maxBy(char[],kotlin.jvm.functions.Function1)
    public static final java.lang.Object maxWith(java.lang.Object[],java.util.Comparator)
    public static final java.lang.Byte maxWith(byte[],java.util.Comparator)
    public static final java.lang.Short maxWith(short[],java.util.Comparator)
    public static final java.lang.Integer maxWith(int[],java.util.Comparator)
    public static final java.lang.Long maxWith(long[],java.util.Comparator)
    public static final java.lang.Float maxWith(float[],java.util.Comparator)
    public static final java.lang.Double maxWith(double[],java.util.Comparator)
    public static final java.lang.Boolean maxWith(boolean[],java.util.Comparator)
    public static final java.lang.Character maxWith(char[],java.util.Comparator)
    public static final java.lang.Double min(java.lang.Double[])
    public static final java.lang.Float min(java.lang.Float[])
    public static final java.lang.Comparable min(java.lang.Comparable[])
    public static final java.lang.Byte min(byte[])
    public static final java.lang.Short min(short[])
    public static final java.lang.Integer min(int[])
    public static final java.lang.Long min(long[])
    public static final java.lang.Float min(float[])
    public static final java.lang.Double min(double[])
    public static final java.lang.Character min(char[])
    public static final java.lang.Object minBy(java.lang.Object[],kotlin.jvm.functions.Function1)
    public static final java.lang.Byte minBy(byte[],kotlin.jvm.functions.Function1)
    public static final java.lang.Short minBy(short[],kotlin.jvm.functions.Function1)
    public static final java.lang.Integer minBy(int[],kotlin.jvm.functions.Function1)
    public static final java.lang.Long minBy(long[],kotlin.jvm.functions.Function1)
    public static final java.lang.Float minBy(float[],kotlin.jvm.functions.Function1)
    public static final java.lang.Double minBy(double[],kotlin.jvm.functions.Function1)
    public static final java.lang.Boolean minBy(boolean[],kotlin.jvm.functions.Function1)
    public static final java.lang.Character minBy(char[],kotlin.jvm.functions.Function1)
    public static final java.lang.Object minWith(java.lang.Object[],java.util.Comparator)
    public static final java.lang.Byte minWith(byte[],java.util.Comparator)
    public static final java.lang.Short minWith(short[],java.util.Comparator)
    public static final java.lang.Integer minWith(int[],java.util.Comparator)
    public static final java.lang.Long minWith(long[],java.util.Comparator)
    public static final java.lang.Float minWith(float[],java.util.Comparator)
    public static final java.lang.Double minWith(double[],java.util.Comparator)
    public static final java.lang.Boolean minWith(boolean[],java.util.Comparator)
    public static final java.lang.Character minWith(char[],java.util.Comparator)
    public static final boolean none(java.lang.Object[])
    public static final boolean none(byte[])
    public static final boolean none(short[])
    public static final boolean none(int[])
    public static final boolean none(long[])
    public static final boolean none(float[])
    public static final boolean none(double[])
    public static final boolean none(boolean[])
    public static final boolean none(char[])
    public static final boolean none(java.lang.Object[],kotlin.jvm.functions.Function1)
    public static final boolean none(byte[],kotlin.jvm.functions.Function1)
    public static final boolean none(short[],kotlin.jvm.functions.Function1)
    public static final boolean none(int[],kotlin.jvm.functions.Function1)
    public static final boolean none(long[],kotlin.jvm.functions.Function1)
    public static final boolean none(float[],kotlin.jvm.functions.Function1)
    public static final boolean none(double[],kotlin.jvm.functions.Function1)
    public static final boolean none(boolean[],kotlin.jvm.functions.Function1)
    public static final boolean none(char[],kotlin.jvm.functions.Function1)
    public static final java.lang.Object reduce(java.lang.Object[],kotlin.jvm.functions.Function2)
    public static final byte reduce(byte[],kotlin.jvm.functions.Function2)
    public static final short reduce(short[],kotlin.jvm.functions.Function2)
    public static final int reduce(int[],kotlin.jvm.functions.Function2)
    public static final long reduce(long[],kotlin.jvm.functions.Function2)
    public static final float reduce(float[],kotlin.jvm.functions.Function2)
    public static final double reduce(double[],kotlin.jvm.functions.Function2)
    public static final boolean reduce(boolean[],kotlin.jvm.functions.Function2)
    public static final char reduce(char[],kotlin.jvm.functions.Function2)
    public static final java.lang.Object reduceIndexed(java.lang.Object[],kotlin.jvm.functions.Function3)
    public static final byte reduceIndexed(byte[],kotlin.jvm.functions.Function3)
    public static final short reduceIndexed(short[],kotlin.jvm.functions.Function3)
    public static final int reduceIndexed(int[],kotlin.jvm.functions.Function3)
    public static final long reduceIndexed(long[],kotlin.jvm.functions.Function3)
    public static final float reduceIndexed(float[],kotlin.jvm.functions.Function3)
    public static final double reduceIndexed(double[],kotlin.jvm.functions.Function3)
    public static final boolean reduceIndexed(boolean[],kotlin.jvm.functions.Function3)
    public static final char reduceIndexed(char[],kotlin.jvm.functions.Function3)
    public static final java.lang.Object reduceRight(java.lang.Object[],kotlin.jvm.functions.Function2)
    public static final byte reduceRight(byte[],kotlin.jvm.functions.Function2)
    public static final short reduceRight(short[],kotlin.jvm.functions.Function2)
    public static final int reduceRight(int[],kotlin.jvm.functions.Function2)
    public static final long reduceRight(long[],kotlin.jvm.functions.Function2)
    public static final float reduceRight(float[],kotlin.jvm.functions.Function2)
    public static final double reduceRight(double[],kotlin.jvm.functions.Function2)
    public static final boolean reduceRight(boolean[],kotlin.jvm.functions.Function2)
    public static final char reduceRight(char[],kotlin.jvm.functions.Function2)
    public static final java.lang.Object reduceRightIndexed(java.lang.Object[],kotlin.jvm.functions.Function3)
    public static final byte reduceRightIndexed(byte[],kotlin.jvm.functions.Function3)
    public static final short reduceRightIndexed(short[],kotlin.jvm.functions.Function3)
    public static final int reduceRightIndexed(int[],kotlin.jvm.functions.Function3)
    public static final long reduceRightIndexed(long[],kotlin.jvm.functions.Function3)
    public static final float reduceRightIndexed(float[],kotlin.jvm.functions.Function3)
    public static final double reduceRightIndexed(double[],kotlin.jvm.functions.Function3)
    public static final boolean reduceRightIndexed(boolean[],kotlin.jvm.functions.Function3)
    public static final char reduceRightIndexed(char[],kotlin.jvm.functions.Function3)
    public static final int sumBy(java.lang.Object[],kotlin.jvm.functions.Function1)
    public static final int sumBy(byte[],kotlin.jvm.functions.Function1)
    public static final int sumBy(short[],kotlin.jvm.functions.Function1)
    public static final int sumBy(int[],kotlin.jvm.functions.Function1)
    public static final int sumBy(long[],kotlin.jvm.functions.Function1)
    public static final int sumBy(float[],kotlin.jvm.functions.Function1)
    public static final int sumBy(double[],kotlin.jvm.functions.Function1)
    public static final int sumBy(boolean[],kotlin.jvm.functions.Function1)
    public static final int sumBy(char[],kotlin.jvm.functions.Function1)
    public static final double sumByDouble(java.lang.Object[],kotlin.jvm.functions.Function1)
    public static final double sumByDouble(byte[],kotlin.jvm.functions.Function1)
    public static final double sumByDouble(short[],kotlin.jvm.functions.Function1)
    public static final double sumByDouble(int[],kotlin.jvm.functions.Function1)
    public static final double sumByDouble(long[],kotlin.jvm.functions.Function1)
    public static final double sumByDouble(float[],kotlin.jvm.functions.Function1)
    public static final double sumByDouble(double[],kotlin.jvm.functions.Function1)
    public static final double sumByDouble(boolean[],kotlin.jvm.functions.Function1)
    public static final double sumByDouble(char[],kotlin.jvm.functions.Function1)
    public static final java.lang.Object[] requireNoNulls(java.lang.Object[])
    public static final kotlin.Pair partition(java.lang.Object[],kotlin.jvm.functions.Function1)
    public static final kotlin.Pair partition(byte[],kotlin.jvm.functions.Function1)
    public static final kotlin.Pair partition(short[],kotlin.jvm.functions.Function1)
    public static final kotlin.Pair partition(int[],kotlin.jvm.functions.Function1)
    public static final kotlin.Pair partition(long[],kotlin.jvm.functions.Function1)
    public static final kotlin.Pair partition(float[],kotlin.jvm.functions.Function1)
    public static final kotlin.Pair partition(double[],kotlin.jvm.functions.Function1)
    public static final kotlin.Pair partition(boolean[],kotlin.jvm.functions.Function1)
    public static final kotlin.Pair partition(char[],kotlin.jvm.functions.Function1)
    public static final java.util.List zip(java.lang.Object[],java.lang.Object[])
    public static final java.util.List zip(byte[],java.lang.Object[])
    public static final java.util.List zip(short[],java.lang.Object[])
    public static final java.util.List zip(int[],java.lang.Object[])
    public static final java.util.List zip(long[],java.lang.Object[])
    public static final java.util.List zip(float[],java.lang.Object[])
    public static final java.util.List zip(double[],java.lang.Object[])
    public static final java.util.List zip(boolean[],java.lang.Object[])
    public static final java.util.List zip(char[],java.lang.Object[])
    public static final java.util.List zip(java.lang.Object[],java.lang.Object[],kotlin.jvm.functions.Function2)
    public static final java.util.List zip(byte[],java.lang.Object[],kotlin.jvm.functions.Function2)
    public static final java.util.List zip(short[],java.lang.Object[],kotlin.jvm.functions.Function2)
    public static final java.util.List zip(int[],java.lang.Object[],kotlin.jvm.functions.Function2)
    public static final java.util.List zip(long[],java.lang.Object[],kotlin.jvm.functions.Function2)
    public static final java.util.List zip(float[],java.lang.Object[],kotlin.jvm.functions.Function2)
    public static final java.util.List zip(double[],java.lang.Object[],kotlin.jvm.functions.Function2)
    public static final java.util.List zip(boolean[],java.lang.Object[],kotlin.jvm.functions.Function2)
    public static final java.util.List zip(char[],java.lang.Object[],kotlin.jvm.functions.Function2)
    public static final java.util.List zip(java.lang.Object[],java.lang.Iterable)
    public static final java.util.List zip(byte[],java.lang.Iterable)
    public static final java.util.List zip(short[],java.lang.Iterable)
    public static final java.util.List zip(int[],java.lang.Iterable)
    public static final java.util.List zip(long[],java.lang.Iterable)
    public static final java.util.List zip(float[],java.lang.Iterable)
    public static final java.util.List zip(double[],java.lang.Iterable)
    public static final java.util.List zip(boolean[],java.lang.Iterable)
    public static final java.util.List zip(char[],java.lang.Iterable)
    public static final java.util.List zip(java.lang.Object[],java.lang.Iterable,kotlin.jvm.functions.Function2)
    public static final java.util.List zip(byte[],java.lang.Iterable,kotlin.jvm.functions.Function2)
    public static final java.util.List zip(short[],java.lang.Iterable,kotlin.jvm.functions.Function2)
    public static final java.util.List zip(int[],java.lang.Iterable,kotlin.jvm.functions.Function2)
    public static final java.util.List zip(long[],java.lang.Iterable,kotlin.jvm.functions.Function2)
    public static final java.util.List zip(float[],java.lang.Iterable,kotlin.jvm.functions.Function2)
    public static final java.util.List zip(double[],java.lang.Iterable,kotlin.jvm.functions.Function2)
    public static final java.util.List zip(boolean[],java.lang.Iterable,kotlin.jvm.functions.Function2)
    public static final java.util.List zip(char[],java.lang.Iterable,kotlin.jvm.functions.Function2)
    public static final java.util.List zip(byte[],byte[])
    public static final java.util.List zip(short[],short[])
    public static final java.util.List zip(int[],int[])
    public static final java.util.List zip(long[],long[])
    public static final java.util.List zip(float[],float[])
    public static final java.util.List zip(double[],double[])
    public static final java.util.List zip(boolean[],boolean[])
    public static final java.util.List zip(char[],char[])
    public static final java.util.List zip(byte[],byte[],kotlin.jvm.functions.Function2)
    public static final java.util.List zip(short[],short[],kotlin.jvm.functions.Function2)
    public static final java.util.List zip(int[],int[],kotlin.jvm.functions.Function2)
    public static final java.util.List zip(long[],long[],kotlin.jvm.functions.Function2)
    public static final java.util.List zip(float[],float[],kotlin.jvm.functions.Function2)
    public static final java.util.List zip(double[],double[],kotlin.jvm.functions.Function2)
    public static final java.util.List zip(boolean[],boolean[],kotlin.jvm.functions.Function2)
    public static final java.util.List zip(char[],char[],kotlin.jvm.functions.Function2)
    public static final java.lang.Appendable joinTo(java.lang.Object[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
    public static synthetic java.lang.Appendable joinTo$default(java.lang.Object[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
    public static final java.lang.Appendable joinTo(byte[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
    public static synthetic java.lang.Appendable joinTo$default(byte[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
    public static final java.lang.Appendable joinTo(short[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
    public static synthetic java.lang.Appendable joinTo$default(short[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
    public static final java.lang.Appendable joinTo(int[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
    public static synthetic java.lang.Appendable joinTo$default(int[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
    public static final java.lang.Appendable joinTo(long[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
    public static synthetic java.lang.Appendable joinTo$default(long[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
    public static final java.lang.Appendable joinTo(float[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
    public static synthetic java.lang.Appendable joinTo$default(float[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
    public static final java.lang.Appendable joinTo(double[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
    public static synthetic java.lang.Appendable joinTo$default(double[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
    public static final java.lang.Appendable joinTo(boolean[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
    public static synthetic java.lang.Appendable joinTo$default(boolean[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
    public static final java.lang.Appendable joinTo(char[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
    public static synthetic java.lang.Appendable joinTo$default(char[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
    public static final java.lang.String joinToString(java.lang.Object[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
    public static synthetic java.lang.String joinToString$default(java.lang.Object[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
    public static final java.lang.String joinToString(byte[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
    public static synthetic java.lang.String joinToString$default(byte[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
    public static final java.lang.String joinToString(short[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
    public static synthetic java.lang.String joinToString$default(short[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
    public static final java.lang.String joinToString(int[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
    public static synthetic java.lang.String joinToString$default(int[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
    public static final java.lang.String joinToString(long[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
    public static synthetic java.lang.String joinToString$default(long[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
    public static final java.lang.String joinToString(float[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
    public static synthetic java.lang.String joinToString$default(float[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
    public static final java.lang.String joinToString(double[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
    public static synthetic java.lang.String joinToString$default(double[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
    public static final java.lang.String joinToString(boolean[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
    public static synthetic java.lang.String joinToString$default(boolean[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
    public static final java.lang.String joinToString(char[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
    public static synthetic java.lang.String joinToString$default(char[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
    public static final java.lang.Iterable asIterable(java.lang.Object[])
    public static final java.lang.Iterable asIterable(byte[])
    public static final java.lang.Iterable asIterable(short[])
    public static final java.lang.Iterable asIterable(int[])
    public static final java.lang.Iterable asIterable(long[])
    public static final java.lang.Iterable asIterable(float[])
    public static final java.lang.Iterable asIterable(double[])
    public static final java.lang.Iterable asIterable(boolean[])
    public static final java.lang.Iterable asIterable(char[])
    public static final kotlin.sequences.Sequence asSequence(java.lang.Object[])
    public static final kotlin.sequences.Sequence asSequence(byte[])
    public static final kotlin.sequences.Sequence asSequence(short[])
    public static final kotlin.sequences.Sequence asSequence(int[])
    public static final kotlin.sequences.Sequence asSequence(long[])
    public static final kotlin.sequences.Sequence asSequence(float[])
    public static final kotlin.sequences.Sequence asSequence(double[])
    public static final kotlin.sequences.Sequence asSequence(boolean[])
    public static final kotlin.sequences.Sequence asSequence(char[])
    public static final double averageOfByte(java.lang.Byte[])
    public static final double averageOfShort(java.lang.Short[])
    public static final double averageOfInt(java.lang.Integer[])
    public static final double averageOfLong(java.lang.Long[])
    public static final double averageOfFloat(java.lang.Float[])
    public static final double averageOfDouble(java.lang.Double[])
    public static final double average(byte[])
    public static final double average(short[])
    public static final double average(int[])
    public static final double average(long[])
    public static final double average(float[])
    public static final double average(double[])
    public static final int sumOfByte(java.lang.Byte[])
    public static final int sumOfShort(java.lang.Short[])
    public static final int sumOfInt(java.lang.Integer[])
    public static final long sumOfLong(java.lang.Long[])
    public static final float sumOfFloat(java.lang.Float[])
    public static final double sumOfDouble(java.lang.Double[])
    public static final int sum(byte[])
    public static final int sum(short[])
    public static final int sum(int[])
    public static final long sum(long[])
    public static final float sum(float[])
    public static final double sum(double[])
    public void <init>()
androidx.transition.GhostViewPort
kotlinx.coroutines.CoroutineExceptionHandler:
    public abstract void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
androidx.constraintlayout.solver.widgets.Optimizer:
    public void <init>()
    public static final int OPTIMIZATION_NONE
    public static final int OPTIMIZATION_DIRECT
    public static final int OPTIMIZATION_BARRIER
    public static final int OPTIMIZATION_CHAIN
    public static final int OPTIMIZATION_DIMENSIONS
    public static final int OPTIMIZATION_RATIO
    public static final int OPTIMIZATION_GROUPS
    public static final int OPTIMIZATION_STANDARD
    static final int FLAG_USE_OPTIMIZE
    static final int FLAG_CHAIN_DANGLING
    static final int FLAG_RECOMPUTE_BOUNDS
com.czluciusdev.diceroller.DiceFragment:
    public static final synthetic void access$setBinding$p(com.czluciusdev.diceroller.DiceFragment,com.czluciusdev.diceroller.databinding.DiceFragmentBinding)
androidx.lifecycle.LifecycleCoroutineScopeImpl$register$1
androidx.lifecycle.extensions.R$integer
android.support.v4.os.ResultReceiver:
    public void <init>(android.os.Handler)
    public void send(int,android.os.Bundle)
androidx.core.app.JobIntentService$JobWorkEnqueuer
androidx.arch.core.R
androidx.transition.Slide$4
androidx.core.graphics.drawable.RoundedBitmapDrawableFactory
kotlin.coroutines.experimental.jvm.internal.CoroutineIntrinsics
androidx.lifecycle.LifecycleRegistry:
    public int getObserverCount()
androidx.navigation.ui.ktx.R$id
androidx.databinding.adapters.RatingBarBindingAdapter$1
kotlinx.coroutines.flow.FlowKt__ReduceKt
androidx.navigation.ui.R$interpolator
androidx.appcompat.widget.ActionBarContextView:
    public boolean hideOverflowMenu()
    public boolean isOverflowMenuShowing()
    public synthetic bridge void dismissPopupMenus()
    public synthetic bridge boolean canShowOverflowMenu()
    public synthetic bridge boolean isOverflowReserved()
    public synthetic bridge boolean isOverflowMenuShowPending()
    public synthetic bridge void postShowOverflowMenu()
    public synthetic bridge void animateToVisibility(int)
    private static final java.lang.String TAG
kotlin.reflect.KMutableProperty1$Setter
androidx.core.util.RangeKt
kotlin.coroutines.experimental.migration.ExperimentalSuspendFunction0Migration
androidx.fragment.app.FragmentHostCallback:
    public void <init>(android.content.Context,android.os.Handler,int)
    public void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
    public void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int)
    public void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)
    public void onStartIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
    public void onRequestPermissionsFromFragment(androidx.fragment.app.Fragment,java.lang.String[],int)
    public boolean onShouldShowRequestPermissionRationale(java.lang.String)
    public boolean onHasWindowAnimations()
    public int onGetWindowAnimations()
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1$2
android.support.v4.media.session.IMediaControllerCallback$Stub:
    public static android.support.v4.media.session.IMediaControllerCallback asInterface(android.os.IBinder)
    private static final java.lang.String DESCRIPTOR
    static final int TRANSACTION_onEvent
    static final int TRANSACTION_onSessionDestroyed
    static final int TRANSACTION_onPlaybackStateChanged
    static final int TRANSACTION_onMetadataChanged
    static final int TRANSACTION_onQueueChanged
    static final int TRANSACTION_onQueueTitleChanged
    static final int TRANSACTION_onExtrasChanged
    static final int TRANSACTION_onVolumeInfoChanged
    static final int TRANSACTION_onRepeatModeChanged
    static final int TRANSACTION_onShuffleModeChangedRemoved
    static final int TRANSACTION_onCaptioningEnabledChanged
    static final int TRANSACTION_onShuffleModeChanged
    static final int TRANSACTION_onSessionReady
androidx.fragment.app.FragmentTransaction:
    public void <init>()
    private androidx.fragment.app.Fragment createFragment(java.lang.Class,android.os.Bundle)
    public final androidx.fragment.app.FragmentTransaction add(java.lang.Class,android.os.Bundle,java.lang.String)
    public final androidx.fragment.app.FragmentTransaction add(int,java.lang.Class,android.os.Bundle)
    public androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment)
    public final androidx.fragment.app.FragmentTransaction add(int,java.lang.Class,android.os.Bundle,java.lang.String)
    public final androidx.fragment.app.FragmentTransaction replace(int,java.lang.Class,android.os.Bundle)
    public final androidx.fragment.app.FragmentTransaction replace(int,java.lang.Class,android.os.Bundle,java.lang.String)
    public androidx.fragment.app.FragmentTransaction hide(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction show(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction detach(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction attach(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State)
    public boolean isEmpty()
    public androidx.fragment.app.FragmentTransaction setCustomAnimations(int,int)
    public androidx.fragment.app.FragmentTransaction setTransition(int)
    public androidx.fragment.app.FragmentTransaction setTransitionStyle(int)
    public boolean isAddToBackStackAllowed()
    public androidx.fragment.app.FragmentTransaction setBreadCrumbTitle(int)
    public androidx.fragment.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence)
    public androidx.fragment.app.FragmentTransaction setBreadCrumbShortTitle(int)
    public androidx.fragment.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence)
    public androidx.fragment.app.FragmentTransaction setAllowOptimization(boolean)
    public androidx.fragment.app.FragmentTransaction runOnCommit(java.lang.Runnable)
    static final int OP_NULL
    static final int OP_ADD
    static final int OP_REPLACE
    static final int OP_REMOVE
    static final int OP_HIDE
    static final int OP_SHOW
    static final int OP_DETACH
    static final int OP_ATTACH
    static final int OP_SET_PRIMARY_NAV
    static final int OP_UNSET_PRIMARY_NAV
    static final int OP_SET_MAX_LIFECYCLE
    public static final int TRANSIT_ENTER_MASK
    public static final int TRANSIT_EXIT_MASK
    public static final int TRANSIT_UNSET
    public static final int TRANSIT_NONE
    public static final int TRANSIT_FRAGMENT_OPEN
    public static final int TRANSIT_FRAGMENT_CLOSE
    public static final int TRANSIT_FRAGMENT_FADE
com.czluciusdev.diceroller.R$styleable
androidx.core.app.AppComponentFactory
androidx.navigation.fragment.DialogFragmentNavigatorDestinationBuilder
androidx.core.app.NotificationCompatExtras
kotlin.sequences.FilteringSequence
kotlinx.coroutines.CoroutineStart
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$4
androidx.media.MediaBrowserServiceCompat$ServiceCallbacksCompat
kotlin.collections.CollectionsKt__IterablesKt$Iterable$1
kotlinx.coroutines.ThreadContextElement$DefaultImpls
androidx.core.R$attr:
    private void <init>()
androidx.appcompat.R$integer
com.google.android.material.button.MaterialButtonToggleGroup$PressedStateTracker
androidx.annotation.ColorRes
androidx.core.content.res.GrowingArrayUtils:
    public static long[] append(long[],int,long)
    public static boolean[] append(boolean[],int,boolean)
    public static java.lang.Object[] insert(java.lang.Object[],int,int,java.lang.Object)
    public static int[] insert(int[],int,int,int)
    public static long[] insert(long[],int,int,long)
    public static boolean[] insert(boolean[],int,int,boolean)
kotlin.contracts.InvocationKind
kotlinx.coroutines.flow.FlowKt__ContextKt
kotlinx.coroutines.StandaloneCoroutine
kotlin.jvm.internal.ArrayIterator
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$5
kotlin.io.CloseableKt
androidx.annotation.IdRes
kotlin.jvm.functions.Function10
androidx.appcompat.view.menu.MenuItemWrapperICS:
    static final java.lang.String LOG_TAG
androidx.drawerlayout.widget.DrawerLayout:
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    static boolean includeChildForAccessibility(android.view.View)
    public void setChildInsets(java.lang.Object,boolean)
    public void setDrawerShadow(android.graphics.drawable.Drawable,int)
    public void setDrawerShadow(int,int)
    public void setDrawerLockMode(int,android.view.View)
    public void setDrawerTitle(int,java.lang.CharSequence)
    public java.lang.CharSequence getDrawerTitle(int)
    public void openDrawer(int)
    public void openDrawer(int,boolean)
    public void closeDrawer(int)
    public void closeDrawer(int,boolean)
    public boolean isDrawerOpen(int)
    public boolean isDrawerVisible(int)
    void cancelChildViewTouch()
    private java.lang.CharSequence mTitleLeft
    private java.lang.CharSequence mTitleRight
    private static final java.lang.String TAG
    public static final int STATE_IDLE
    public static final int STATE_DRAGGING
    public static final int STATE_SETTLING
    public static final int LOCK_MODE_UNLOCKED
    public static final int LOCK_MODE_LOCKED_CLOSED
    public static final int LOCK_MODE_LOCKED_OPEN
    public static final int LOCK_MODE_UNDEFINED
    private static final int MIN_DRAWER_MARGIN
    private static final int DRAWER_ELEVATION
    private static final int DEFAULT_SCRIM_COLOR
    private static final int PEEK_DELAY
    private static final int MIN_FLING_VELOCITY
    private static final boolean ALLOW_EDGE_LOCK
    private static final boolean CHILDREN_DISALLOW_INTERCEPT
    private static final float TOUCH_SLOP_SENSITIVITY
android.support.v4.media.MediaBrowserCompat$ItemCallback$StubApi23
kotlinx.coroutines.DeferredCoroutine$await$1
kotlin.time.MeasureTimeKt
androidx.appcompat.resources.R$dimen
kotlinx.coroutines.flow.FlowKt__MergeKt$map$$inlined$unsafeTransform$1$1
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3
kotlinx.coroutines.Active
androidx.core.text.ICUCompat:
    private void <init>()
    private static final java.lang.String TAG
androidx.core.os.ParcelableCompatCreatorCallbacks
kotlinx.coroutines.sync.MutexImpl$LockedQueue
androidx.core.util.Pair:
    public void <init>(java.lang.Object,java.lang.Object)
    public static androidx.core.util.Pair create(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21:
    public void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token)
    private void requestExtraBinder()
    public final void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler)
    public final void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback)
    public boolean dispatchMediaButtonEvent(android.view.KeyEvent)
    public android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls()
    public android.support.v4.media.session.PlaybackStateCompat getPlaybackState()
    public android.support.v4.media.MediaMetadataCompat getMetadata()
    public java.util.List getQueue()
    public void addQueueItem(android.support.v4.media.MediaDescriptionCompat)
    public void addQueueItem(android.support.v4.media.MediaDescriptionCompat,int)
    public void removeQueueItem(android.support.v4.media.MediaDescriptionCompat)
    public java.lang.CharSequence getQueueTitle()
    public android.os.Bundle getExtras()
    public int getRatingType()
    public boolean isCaptioningEnabled()
    public int getRepeatMode()
    public int getShuffleMode()
    public long getFlags()
    public android.support.v4.media.session.MediaControllerCompat$PlaybackInfo getPlaybackInfo()
    public android.app.PendingIntent getSessionActivity()
    public void setVolumeTo(int,int)
    public void adjustVolume(int,int)
    public void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)
    public boolean isSessionReady()
    public java.lang.String getPackageName()
    public java.lang.Object getMediaController()
    protected final java.lang.Object mControllerObj
kotlinx.coroutines.channels.ValueOrClosed$Closed
androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor
androidx.coordinatorlayout.R$id
androidx.slidingpanelayout.widget.SlidingPaneLayout$SimplePanelSlideListener
androidx.collection.CircularIntArray
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$first$1
kotlin.collections.AbstractSet$Companion
androidx.navigation.R$string
androidx.core.app.NotificationCompat$BubbleMetadata
androidx.navigation.common.ktx.R$dimen
androidx.navigation.NavHost
kotlinx.coroutines.ChildContinuation
kotlin.coroutines.intrinsics.IntrinsicsKt
androidx.versionedparcelable.VersionedParcelStream$1
kotlinx.coroutines.flow.FlowKt__DelayKt$debounce$2$invokeSuspend$$inlined$select$lambda$2
kotlinx.coroutines.DisposableFutureHandle
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21$4
kotlinx.coroutines.channels.ValueOrClosed$Companion
androidx.loader.content.AsyncTaskLoader$LoadTask
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$$inlined$collect$1
androidx.core.os.LocaleListCompatWrapper
kotlin.collections.TypeAliasesKt
androidx.core.content.pm.ShortcutInfoCompat$Builder
androidx.appcompat.R$dimen:
    private void <init>()
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$1
kotlinx.coroutines.flow.FlowKt__BuildersKt
androidx.fragment.app.FragmentManager:
    public static void enableDebugLogging(boolean)
    private void throwException(java.lang.RuntimeException)
    public static androidx.fragment.app.Fragment findFragment(android.view.View)
    private static androidx.fragment.app.Fragment findViewFragment(android.view.View)
    static androidx.fragment.app.FragmentManager findFragmentManager(android.view.View)
    public androidx.fragment.app.FragmentTransaction openTransaction()
    public boolean executePendingTransactions()
    public void popBackStack()
    public boolean popBackStackImmediate(java.lang.String,int)
    public boolean popBackStackImmediate(int,int)
    public androidx.fragment.app.FragmentManager$BackStackEntry getBackStackEntryAt(int)
    public void addOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener)
    public void removeOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener)
    public void putFragment(android.os.Bundle,java.lang.String,androidx.fragment.app.Fragment)
    public androidx.fragment.app.Fragment getFragment(android.os.Bundle,java.lang.String)
    java.util.List getActiveFragments()
    int getActiveFragmentCount()
    public androidx.fragment.app.Fragment$SavedState saveFragmentInstanceState(androidx.fragment.app.Fragment)
    androidx.fragment.app.FragmentManagerNonConfig retainNonConfig()
    void restoreAllState(android.os.Parcelable,androidx.fragment.app.FragmentManagerNonConfig)
    public void setFragmentFactory(androidx.fragment.app.FragmentFactory)
    public void registerFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks,boolean)
    public void unregisterFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks)
    static final java.lang.String TAG
    public static final int POP_BACK_STACK_INCLUSIVE
kotlin.collections.ULongIterator
kotlinx.coroutines.flow.internal.CombineKt$combineTransformInternal$2
androidx.core.widget.ListPopupWindowCompat
androidx.core.app.AlarmManagerCompat
androidx.lifecycle.ComputableLiveData$3
androidx.navigation.ui.ActivityKt
kotlinx.coroutines.flow.FlowKt__MigrationKt$combine$$inlined$combine$2$3
kotlin.ranges.RangesKt__RangesKt:
    public static final kotlin.ranges.ClosedRange rangeTo(java.lang.Comparable,java.lang.Comparable)
    public static final kotlin.ranges.ClosedFloatingPointRange rangeTo(double,double)
    private static final boolean contains(java.lang.Iterable,java.lang.Object)
    public static final void checkStepIsPositive(boolean,java.lang.Number)
    public void <init>()
androidx.core.graphics.drawable.RoundedBitmapDrawable21
com.google.android.material.navigation.NavigationView
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$1
androidx.core.util.Predicate
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$2$2
androidx.transition.GhostViewPlatform
kotlinx.coroutines.flow.internal.ChannelFlowOperator
androidx.collection.LongSparseArrayKt
androidx.fragment.app.FragmentTransition:
    private void <init>()
kotlin.ranges.IntRange$Companion:
    public final kotlin.ranges.IntRange getEMPTY()
com.google.android.material.appbar.CollapsingToolbarLayout$LayoutParams
androidx.core.os.ParcelableCompat
kotlin.jvm.internal.Ref
kotlin.jvm.internal.PrimitiveSpreadBuilder
com.google.android.material.textfield.ClearTextEndIconDelegate:
    private static final int ANIMATION_FADE_DURATION
    private static final int ANIMATION_SCALE_DURATION
    private static final float ANIMATION_SCALE_FROM_VALUE
androidx.appcompat.widget.AppCompatSeekBar:
    public void <init>(android.content.Context)
kotlin.collections.CollectionsKt__CollectionsJVMKt
androidx.loader.R$attr
com.google.android.material.internal.TextScale$1
androidx.lifecycle.PausingDispatcherKt$whenStateAtLeast$2
androidx.core.os.BuildCompat
androidx.navigation.ui.R$color
androidx.appcompat.widget.ShareActionProvider$ShareActivityChooserModelPolicy
com.google.android.material.snackbar.BaseTransientBottomBar$BaseCallback$DismissEvent
kotlin.sequences.DistinctSequence
androidx.navigation.NavDestination$ClassType
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback:
    public void <init>()
    public void onShown(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)
    public void onHidden(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)
    public void onExtended(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)
    public void onShrunken(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1
com.google.android.material.datepicker.CalendarConstraints:
    boolean isWithinBounds(long)
com.google.android.material.bottomnavigation.BottomNavigationView$2
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt
kotlinx.coroutines.flow.FlowKt__MigrationKt$combineLatest$$inlined$combine$2$1
kotlin.collections.AbstractCollection
androidx.core.app.ActivityCompat$OnRequestPermissionsResultCallback
androidx.viewpager.R
kotlinx.coroutines.CopyableThrowable
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$5
androidx.core.animation.AnimatorKt$doOnCancel$$inlined$addListener$1
kotlin.jvm.internal.FunctionReference
androidx.navigation.NavArgsLazyKt
com.google.android.material.bottomnavigation.BottomNavigationMenuView
androidx.fragment.app.Fragment$SavedState$1
com.google.android.material.R$xml
androidx.customview.R$string
kotlinx.coroutines.internal.ThreadContextKt$countAll$1
android.support.v4.media.MediaBrowserCompat$CustomActionResultReceiver:
    void <init>(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserCompat$CustomActionCallback,android.os.Handler)
androidx.media.MediaBrowserServiceCompat$4
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9
kotlinx.coroutines.flow.FlowKt__MergeKt$map$$inlined$unsafeTransform$2$2$1
androidx.fragment.ktx.R$anim
androidx.databinding.CallbackRegistry:
    public synchronized java.util.ArrayList copyCallbacks()
    public synchronized void copyCallbacks(java.util.List)
    public synchronized boolean isEmpty()
    public synchronized void clear()
    private static final java.lang.String TAG
androidx.core.graphics.PointKt
androidx.navigation.NavDeepLinkBuilder:
    public androidx.navigation.NavDeepLinkBuilder setComponentName(java.lang.Class)
    public androidx.navigation.NavDeepLinkBuilder setComponentName(android.content.ComponentName)
    public androidx.navigation.NavDeepLinkBuilder setGraph(int)
    public androidx.navigation.NavDeepLinkBuilder setGraph(androidx.navigation.NavGraph)
    public androidx.navigation.NavDeepLinkBuilder setArguments(android.os.Bundle)
    public android.app.PendingIntent createPendingIntent()
    private android.os.Bundle mArgs
androidx.appcompat.app.ActionBarDrawerToggleHoneycomb
androidx.recyclerview.widget.DiffUtil$PostponedUpdate
androidx.core.util.SparseBooleanArrayKt
androidx.core.net.UriKt
androidx.media.app.NotificationCompat$DecoratedMediaCustomViewStyle
androidx.core.widget.TextViewKt$addTextChangedListener$textWatcher$1
com.google.android.material.snackbar.BaseTransientBottomBar$14
androidx.core.animation.AnimatorKt$addListener$3
kotlin.reflect.KClass:
    public abstract java.lang.String getSimpleName()
    public abstract java.lang.String getQualifiedName()
    public abstract java.util.Collection getMembers()
    public abstract java.util.Collection getConstructors()
    public abstract java.util.Collection getNestedClasses()
    public abstract java.lang.Object getObjectInstance()
    public abstract boolean isInstance(java.lang.Object)
    public abstract java.util.List getTypeParameters()
    public abstract java.util.List getSupertypes()
    public abstract java.util.List getSealedSubclasses()
    public abstract kotlin.reflect.KVisibility getVisibility()
    public abstract boolean isFinal()
    public abstract boolean isOpen()
    public abstract boolean isAbstract()
    public abstract boolean isSealed()
    public abstract boolean isData()
    public abstract boolean isInner()
    public abstract boolean isCompanion()
    public abstract boolean equals(java.lang.Object)
    public abstract int hashCode()
com.google.android.material.circularreveal.coordinatorlayout.CircularRevealCoordinatorLayout
kotlinx.coroutines.CancelHandler
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior:
    private void setBaseTransientBottomBar(com.google.android.material.snackbar.BaseTransientBottomBar)
    static synthetic void access$900(com.google.android.material.snackbar.BaseTransientBottomBar$Behavior,com.google.android.material.snackbar.BaseTransientBottomBar)
android.support.v4.media.session.MediaControllerCompatApi21$TransportControls
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransform$2$1
kotlin.collections.LongIterator
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1$1
androidx.constraintlayout.solver.SolverVariable:
    private static java.lang.String getUniqueName(androidx.constraintlayout.solver.SolverVariable$Type,java.lang.String)
    public void <init>(java.lang.String,androidx.constraintlayout.solver.SolverVariable$Type)
    void clearStrengths()
    java.lang.String strengthsToString()
    public java.lang.String getName()
    public void setName(java.lang.String)
    private static final boolean INTERNAL_DEBUG
    public static final int STRENGTH_NONE
    public static final int STRENGTH_LOW
    public static final int STRENGTH_MEDIUM
    public static final int STRENGTH_HIGH
    public static final int STRENGTH_HIGHEST
    public static final int STRENGTH_EQUALITY
    public static final int STRENGTH_FIXED
    public static final int STRENGTH_BARRIER
    static final int MAX_STRENGTH
androidx.legacy.coreutils.R$id
androidx.constraintlayout.widget.Constraints$LayoutParams:
    public void <init>(androidx.constraintlayout.widget.Constraints$LayoutParams)
kotlin.properties.NotNullVar
kotlinx.coroutines.Deferred$DefaultImpls
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$none$3
kotlin.collections.CollectionsKt___CollectionsKt$withIndex$1
androidx.drawerlayout.R$dimen
com.google.android.material.appbar.CollapsingToolbarLayout
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi26
kotlin.sequences.SequencesKt___SequencesJvmKt
androidx.recyclerview.widget.OrientationHelper:
    public androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
    public abstract void offsetChild(android.view.View,int)
    private static final int INVALID_SIZE
    public static final int HORIZONTAL
    public static final int VERTICAL
androidx.navigation.ui.AppBarConfigurationKt$AppBarConfiguration$2
android.support.v4.media.MediaDescriptionCompatApi23$Builder:
    private void <init>()
kotlin.collections.MapsKt__MapsKt
kotlin.NotImplementedError
androidx.core.os.TraceKt
kotlin.jvm.JvmName
kotlinx.coroutines.channels.AbstractChannel$onReceiveOrNull$1
kotlinx.coroutines.flow.FlowKt__MigrationKt$combine$$inlined$combine$2
androidx.legacy.app.ActionBarDrawerToggle$Delegate
kotlinx.coroutines.flow.FlowKt__CountKt
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1
com.google.android.material.tabs.TabLayoutMediator$TabLayoutOnPageChangeCallback
kotlinx.coroutines.CompletableJob
androidx.recyclerview.widget.ItemTouchHelper$SimpleCallback
kotlin.ranges.CharProgression
kotlin.text.StringsKt__RegexExtensionsKt:
    private static final kotlin.text.Regex toRegex(java.lang.String)
    private static final kotlin.text.Regex toRegex(java.lang.String,kotlin.text.RegexOption)
    private static final kotlin.text.Regex toRegex(java.lang.String,java.util.Set)
    public void <init>()
org.intellij.lang.annotations.JdkConstants$TabLayoutPolicy
androidx.appcompat.widget.PopupMenu$OnMenuItemClickListener
kotlin.collections.SetsKt__SetsJVMKt
android.support.v4.media.session.MediaSessionCompatApi21$Callback
com.google.android.material.floatingactionbutton.BorderDrawable:
    public com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
    private static final float DRAW_STROKE_WIDTH_MULTIPLE
androidx.databinding.adapters.ViewGroupBindingAdapter$OnChildViewRemoved
android.support.v4.media.session.MediaControllerCompat$TransportControlsApi21
kotlin.time.TestClock
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl
androidx.core.math.MathUtils:
    private void <init>()
    public static double clamp(double,double,double)
    public static long clamp(long,long,long)
androidx.core.os.TraceCompat:
    public static boolean isEnabled()
    public static void beginAsyncSection(java.lang.String,int)
    public static void endAsyncSection(java.lang.String,int)
    public static void setCounter(java.lang.String,int)
    private void <init>()
    private static final java.lang.String TAG
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$groupByTo$3
kotlin.sequences.SequencesKt___SequencesJvmKt$filterIsInstance$1
kotlinx.coroutines.flow.FlowKt__TransformKt$unsafeTransform$$inlined$unsafeFlow$1$1
androidx.viewpager2.R$integer
kotlin.ExperimentalStdlibApi
kotlinx.coroutines.internal.LockFreeTaskQueue
androidx.databinding.adapters.ToolbarBindingAdapter
androidx.core.app.ActivityCompat:
    protected void <init>()
    public static void setPermissionCompatDelegate(androidx.core.app.ActivityCompat$PermissionCompatDelegate)
    public static boolean invalidateOptionsMenu(android.app.Activity)
    public static void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)
    public static void startIntentSenderForResult(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
    public static void finishAfterTransition(android.app.Activity)
    public static android.net.Uri getReferrer(android.app.Activity)
    public static void setEnterSharedElementCallback(android.app.Activity,androidx.core.app.SharedElementCallback)
    public static void setExitSharedElementCallback(android.app.Activity,androidx.core.app.SharedElementCallback)
    public static void postponeEnterTransition(android.app.Activity)
    public static void startPostponedEnterTransition(android.app.Activity)
    public static void requestPermissions(android.app.Activity,java.lang.String[],int)
    public static boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)
    public static androidx.core.view.DragAndDropPermissionsCompat requestDragAndDropPermissions(android.app.Activity,android.view.DragEvent)
kotlin.coroutines.CoroutineContext:
    public abstract kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
androidx.viewpager.widget.PagerTitleStrip$SingleLineAllCapsTransform
androidx.appcompat.app.AlertController$AlertParams:
    public boolean mForceInverseBackground
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combine$3$2
com.google.android.material.bottomnavigation.BottomNavigationPresenter$SavedState
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt
androidx.recyclerview.widget.StaggeredGridLayoutManager:
    public void <init>(int,int)
    public int getGapStrategy()
    public void setGapStrategy(int)
    public int getSpanCount()
    public boolean getReverseLayout()
    public int[] findFirstVisibleItemPositions(int[])
    public int[] findFirstCompletelyVisibleItemPositions(int[])
    public int[] findLastVisibleItemPositions(int[])
    public int[] findLastCompletelyVisibleItemPositions(int[])
    public void scrollToPositionWithOffset(int,int)
    public int getOrientation()
    private static final java.lang.String TAG
    static final boolean DEBUG
    public static final int HORIZONTAL
    public static final int VERTICAL
    public static final int GAP_HANDLING_NONE
    public static final int GAP_HANDLING_LAZY
    public static final int GAP_HANDLING_MOVE_ITEMS_BETWEEN_SPANS
    static final int INVALID_OFFSET
    private static final float MAX_SCROLL_FACTOR
androidx.core.widget.ContentLoadingProgressBar$1
androidx.databinding.ViewStubProxy$1
kotlinx.coroutines.flow.FlowKt__MigrationKt
kotlin.collections.AbstractMap$values$1$iterator$1
androidx.appcompat.widget.ActivityChooserModel
androidx.viewpager.widget.ViewPager$PagerObserver
kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$$inlined$unsafeFlow$1$lambda$1
kotlinx.coroutines.channels.AbstractSendChannel$SendBuffered
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1$2$1
androidx.core.util.ObjectsCompat:
    private void <init>()
    public static int hashCode(java.lang.Object)
androidx.databinding.adapters.NumberPickerBindingAdapter
androidx.annotation.WorkerThread
kotlinx.coroutines.DeferredCoroutine
androidx.databinding.ObservableMap$OnMapChangedCallback:
    public abstract void onMapChanged(androidx.databinding.ObservableMap,java.lang.Object)
com.google.android.material.shape.ShapeAppearanceModel$Builder:
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setAllCorners(int,float)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setAllCorners(com.google.android.material.shape.CornerTreatment)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setAllCornerSizes(com.google.android.material.shape.CornerSize)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCorner(int,float)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCorner(int,float)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCorner(int,float)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCorner(int,float)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setAllEdges(com.google.android.material.shape.EdgeTreatment)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setLeftEdge(com.google.android.material.shape.EdgeTreatment)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setRightEdge(com.google.android.material.shape.EdgeTreatment)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomEdge(com.google.android.material.shape.EdgeTreatment)
com.google.android.material.snackbar.Snackbar$1
com.google.android.material.bottomappbar.BottomAppBar$FabAnimationMode
androidx.databinding.adapters.SearchViewBindingAdapter
androidx.coordinatorlayout.R$integer
androidx.media.MediaSessionManagerImplApi28$RemoteUserInfoImplApi28
androidx.core.database.CursorKt
kotlin.internal.NoInfer
androidx.fragment.app.FragmentTabHost$SavedState$1
androidx.collection.ArraySetKt
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapLatest$1
androidx.core.transition.TransitionKt$doOnEnd$$inlined$addListener$1
androidx.databinding.MergedDataBinderMapper:
    protected void addMapper(java.lang.String)
    public int getLayoutId(java.lang.String)
    public java.lang.String convertBrIdToString(int)
    private static final java.lang.String TAG
kotlinx.coroutines.flow.FlowKt__TransformKt$unsafeTransform$$inlined$unsafeFlow$4
androidx.recyclerview.widget.RecyclerView$State:
    public boolean isMeasuring()
    public boolean willRunSimpleAnimations()
    public void remove(int)
    public java.lang.Object get(int)
    public void put(int,java.lang.Object)
    public boolean didStructureChange()
    public int getRemainingScrollHorizontal()
    public int getRemainingScrollVertical()
    static final int STEP_START
    static final int STEP_LAYOUT
    static final int STEP_ANIMATIONS
kotlin.jvm.internal.DoubleCompanionObject
kotlin.collections.GroupingKt__GroupingKt
androidx.core.app.ServiceCompat$StopForegroundFlags
androidx.loader.R$style
kotlin.UIntArray$Iterator
kotlinx.coroutines.TimeSourceKt
androidx.viewpager2.widget.ViewPager2$SavedState
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$groupBy$1
com.google.android.material.card.MaterialCardView:
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    public void setContentPadding(int,int,int,int)
    void setAncestorContentPadding(int,int,int,int)
    private static final java.lang.String LOG_TAG
androidx.core.net.ConnectivityManagerCompat
kotlinx.coroutines.flow.internal.CombineKt$combineTransformInternal$2$invokeSuspend$$inlined$select$lambda$1
androidx.customview.R$styleable
kotlin.js.JsName
android.support.v4.media.MediaBrowserCompat$ServiceBinderWrapper
kotlin.reflect.TypeOfKt
com.google.android.material.tabs.TabLayout$LabelVisibility
androidx.cardview.R
org.intellij.lang.annotations.JdkConstants
androidx.transition.TransitionManager:
    public void <init>()
    private androidx.transition.Transition getTransition(androidx.transition.Scene)
    private static void changeScene(androidx.transition.Scene,androidx.transition.Transition)
    public static void go(androidx.transition.Scene)
    public static void go(androidx.transition.Scene,androidx.transition.Transition)
    public static void beginDelayedTransition(android.view.ViewGroup)
    public static void endTransitions(android.view.ViewGroup)
    public void setTransition(androidx.transition.Scene,androidx.transition.Transition)
    public void setTransition(androidx.transition.Scene,androidx.transition.Scene,androidx.transition.Transition)
    public void transitionTo(androidx.transition.Scene)
    private androidx.collection.ArrayMap mSceneTransitions
    private androidx.collection.ArrayMap mScenePairTransitions
    private static final java.lang.String LOG_TAG
kotlinx.coroutines.sync.MutexImpl$lockSuspend$$inlined$suspendAtomicCancellableCoroutine$lambda$1
androidx.databinding.adapters.ViewStubBindingAdapter
androidx.media.R$integer
androidx.core.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem
androidx.core.graphics.RegionKt
androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub
kotlin.sequences.USequencesKt
androidx.navigation.ui.R$string:
    private void <init>()
androidx.activity.R$integer
org.intellij.lang.annotations.PrintFormatPattern
androidx.fragment.ktx.R$string
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3
kotlin.coroutines.experimental.SafeContinuation$Fail
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$4
kotlin.reflect.KProperty1$Getter
androidx.navigation.common.R$attr
kotlinx.coroutines.flow.ChannelFlowBuilder
androidx.fragment.ktx.R$attr
com.google.android.material.appbar.AppBarLayout$BaseBehavior:
    public void setDragCallback(com.google.android.material.appbar.AppBarLayout$BaseBehavior$BaseDragCallback)
    boolean isOffsetAnimatorRunning()
    private static final int MAX_OFFSET_ANIMATION_DURATION
    private static final int INVALID_POSITION
kotlin.reflect.KDeclarationContainer:
    public abstract java.util.Collection getMembers()
androidx.appcompat.view.menu.MenuPresenter:
    public abstract androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
    public abstract int getId()
    public abstract android.os.Parcelable onSaveInstanceState()
    public abstract void onRestoreInstanceState(android.os.Parcelable)
kotlin.coroutines.jvm.internal.DebugProbesKt
androidx.drawerlayout.R$integer
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver:
    public void onItemRangeChanged(int,int)
    public void onItemRangeChanged(int,int,java.lang.Object)
    public void onItemRangeInserted(int,int)
    public void onItemRangeRemoved(int,int)
    public void onItemRangeMoved(int,int,int)
kotlin.collections.AbstractMap$values$1
androidx.core.content.SharedPreferencesCompat
kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3
androidx.databinding.library.baseAdapters.R$string
com.google.android.material.bottomsheet.BottomSheetDialogFragment:
    public void dismissAllowingStateLoss()
androidx.appcompat.widget.LinearLayoutCompat$OrientationMode
android.support.v4.media.session.PlaybackStateCompat$RepeatMode
androidx.transition.CanvasUtils
com.google.android.material.internal.NavigationMenuPresenter$NormalViewHolder
androidx.lifecycle.LifecycleController:
    private final void handleDestroy(kotlinx.coroutines.Job)
    public void <init>(androidx.lifecycle.Lifecycle,androidx.lifecycle.Lifecycle$State,androidx.lifecycle.DispatchQueue,kotlinx.coroutines.Job)
    public static final synthetic void access$handleDestroy(androidx.lifecycle.LifecycleController,kotlinx.coroutines.Job)
    private final androidx.lifecycle.LifecycleEventObserver observer
    private final androidx.lifecycle.Lifecycle lifecycle
androidx.cardview.widget.CardView:
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    static synthetic void access$001(androidx.cardview.widget.CardView,int,int,int,int)
    static synthetic void access$101(androidx.cardview.widget.CardView,int)
    static synthetic void access$201(androidx.cardview.widget.CardView,int)
    public void setContentPadding(int,int,int,int)
    final android.graphics.Rect mShadowBounds
kotlin.coroutines.experimental.SequenceBuilderIterator
androidx.databinding.adapters.TextViewBindingAdapter:
    public void <init>()
    public static java.lang.String getTextString(android.widget.TextView)
    public static void setAutoText(android.widget.TextView,boolean)
    public static void setCapitalize(android.widget.TextView,android.text.method.TextKeyListener$Capitalize)
    public static void setBufferType(android.widget.TextView,android.widget.TextView$BufferType)
    public static void setDigits(android.widget.TextView,java.lang.CharSequence)
    public static void setNumeric(android.widget.TextView,int)
    public static void setPhoneNumber(android.widget.TextView,boolean)
    private static void setIntrinsicBounds(android.graphics.drawable.Drawable)
    public static void setDrawableBottom(android.widget.TextView,android.graphics.drawable.Drawable)
    public static void setDrawableLeft(android.widget.TextView,android.graphics.drawable.Drawable)
    public static void setDrawableRight(android.widget.TextView,android.graphics.drawable.Drawable)
    public static void setDrawableTop(android.widget.TextView,android.graphics.drawable.Drawable)
    public static void setDrawableStart(android.widget.TextView,android.graphics.drawable.Drawable)
    public static void setDrawableEnd(android.widget.TextView,android.graphics.drawable.Drawable)
    public static void setImeActionLabel(android.widget.TextView,java.lang.CharSequence)
    public static void setImeActionLabel(android.widget.TextView,int)
    public static void setInputMethod(android.widget.TextView,java.lang.CharSequence)
    public static void setLineSpacingExtra(android.widget.TextView,float)
    public static void setLineSpacingMultiplier(android.widget.TextView,float)
    public static void setMaxLength(android.widget.TextView,int)
    public static void setPassword(android.widget.TextView,boolean)
    public static void setShadowColor(android.widget.TextView,int)
    public static void setShadowDx(android.widget.TextView,float)
    public static void setShadowDy(android.widget.TextView,float)
    public static void setShadowRadius(android.widget.TextView,float)
    public static void setTextSize(android.widget.TextView,float)
    public static void setTextWatcher(android.widget.TextView,androidx.databinding.adapters.TextViewBindingAdapter$BeforeTextChanged,androidx.databinding.adapters.TextViewBindingAdapter$OnTextChanged,androidx.databinding.adapters.TextViewBindingAdapter$AfterTextChanged,androidx.databinding.InverseBindingListener)
    private static final java.lang.String TAG
    public static final int INTEGER
    public static final int SIGNED
    public static final int DECIMAL
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$2$lambda$2
kotlinx.coroutines.CompletableDeferredImpl$await$1
androidx.transition.Slide$CalculateSlideVertical
androidx.core.hardware.fingerprint.FingerprintManagerCompat
androidx.lifecycle.livedata.R
kotlin.reflect.KMutableProperty0
androidx.core.graphics.MatrixKt
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$MediaServiceConnection
kotlin.text.StringsKt__IndentKt$getIndentFunction$1
androidx.viewpager.widget.PagerTabStrip$2
kotlin.sequences.FlatteningSequence
kotlinx.coroutines.channels.ConflatedChannel
kotlin.concurrent.TimersKt
kotlin.coroutines.intrinsics.CoroutineSingletons
kotlin.text.StringsKt___StringsKt$windowedSequence$2
androidx.transition.ViewUtilsApi29:
    public void setAnimationMatrix(android.view.View,android.graphics.Matrix)
androidx.appcompat.widget.ActionMenuPresenter:
    public void setWidthLimit(int,boolean)
    public void setItemLimit(int)
    public boolean isOverflowReserved()
    public android.os.Parcelable onSaveInstanceState()
    public void onRestoreInstanceState(android.os.Parcelable)
    public void onSubUiVisibilityChanged(boolean)
    private static final java.lang.String TAG
androidx.viewpager2.widget.AnimateLayoutChangeDetector
android.support.v4.media.session.MediaControllerCompatApi23$TransportControls
androidx.constraintlayout.solver.Metrics:
    public void <init>()
    public java.lang.String toString()
    public void reset()
    public long variables
    public long oldresolvedWidgets
    public java.util.ArrayList problematicLayouts
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$2
androidx.databinding.adapters.NumberPickerBindingAdapter$1
kotlin.ranges.UIntProgressionIterator
androidx.fragment.app.BackStackRecord:
    public int getId()
    public int getBreadCrumbTitleRes()
    public int getBreadCrumbShortTitleRes()
    public java.lang.CharSequence getBreadCrumbTitle()
    public java.lang.CharSequence getBreadCrumbShortTitle()
    public androidx.fragment.app.FragmentTransaction hide(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction show(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction detach(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State)
    public boolean isEmpty()
    private static final java.lang.String TAG
kotlin.collections.ArraysKt___ArraysKt$withIndex$6
kotlinx.coroutines.internal.AtomicKt
androidx.media.AudioAttributesCompat$AudioManagerHidden
com.google.android.material.internal.NavigationSubMenu
androidx.collection.LongSparseArrayKt$keyIterator$1
android.support.v4.media.session.PlaybackStateCompat$ShuffleMode
kotlin.TypeCastException:
    public void <init>()
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo:
    public int changeFlags
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$$inlined$collect$1$1
kotlin.jvm.internal.TypeReference$WhenMappings
androidx.core.util.LruCacheKt$lruCache$2
androidx.navigation.R$style
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$4
androidx.legacy.coreutils.R$color
kotlin.jvm.functions.Function18
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$2
kotlinx.coroutines.SelectAwaitOnCompletion
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$flatMap$1
kotlin.io.LinesSequence
androidx.versionedparcelable.VersionedParcel$ParcelException
kotlin.text.CharsKt__CharKt:
    private static final java.lang.String plus(char,java.lang.String)
    public static synthetic boolean equals$default(char,char,boolean,int,java.lang.Object)
    public static final boolean isSurrogate(char)
    public void <init>()
com.google.android.material.internal.CheckableImageButton:
    public boolean isPressable()
androidx.lifecycle.LifecycleCoroutineScope$launchWhenCreated$1
com.google.android.material.textfield.DropdownMenuEndIconDelegate:
    private static final int ANIMATION_FADE_OUT_DURATION
    private static final int ANIMATION_FADE_IN_DURATION
androidx.core.os.HandlerKt
kotlinx.coroutines.NotCompleted
kotlin.contracts.CallsInPlace
androidx.core.app.ActivityCompat$1
com.google.android.material.R$id:
    private void <init>()
kotlin.ranges.UIntRange$Companion
kotlinx.coroutines.AwaitKt$joinAll$3
kotlin.sequences.SequencesKt___SequencesKt$minus$2
android.support.v4.media.session.MediaSessionCompatApi23
kotlinx.coroutines.TimeoutCancellationException
androidx.appcompat.app.ActionBar$NavigationMode
androidx.appcompat.widget.AbsActionBarView$1
androidx.appcompat.view.menu.MenuPopupHelper:
    public void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder)
    public void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View)
    public int getGravity()
    public void show(int,int)
    public android.widget.ListView getListView()
    private static final int TOUCH_EPICENTER_SIZE_DP
kotlin.ULongArrayKt
kotlin.UShort$Companion
kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1
kotlin.jvm.internal.ArrayByteIterator
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$9
kotlin.reflect.KProperty1:
    public abstract java.lang.Object get(java.lang.Object)
    public abstract java.lang.Object getDelegate(java.lang.Object)
    public abstract kotlin.reflect.KProperty1$Getter getGetter()
kotlin.sequences.SequencesKt___SequencesKt$elementAt$1
androidx.viewpager2.widget.FakeDrag
com.google.android.material.internal.ViewUtils:
    private void <init>()
    public static boolean isLayoutRtl(android.view.View)
    public static void requestFocusAndShowKeyboard(android.view.View)
kotlin.collections.MapsKt___MapsKt
androidx.appcompat.widget.TooltipCompat:
    private void <init>()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton:
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    private boolean isOrWillBeShown()
    private boolean isOrWillBeHidden()
    static synthetic boolean access$602(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,boolean)
    static synthetic boolean access$600(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)
    static synthetic int access$702(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,int)
    static synthetic boolean access$800(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)
    static synthetic boolean access$900(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)
    public final boolean isExtended()
    public void addOnShowAnimationListener(android.animation.Animator$AnimatorListener)
    public void removeOnShowAnimationListener(android.animation.Animator$AnimatorListener)
    public void addOnHideAnimationListener(android.animation.Animator$AnimatorListener)
    public void removeOnHideAnimationListener(android.animation.Animator$AnimatorListener)
    public void addOnShrinkAnimationListener(android.animation.Animator$AnimatorListener)
    public void removeOnShrinkAnimationListener(android.animation.Animator$AnimatorListener)
    public void addOnExtendAnimationListener(android.animation.Animator$AnimatorListener)
    public void removeOnExtendAnimationListener(android.animation.Animator$AnimatorListener)
    public void hide()
    public void hide(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback)
    public void show()
    public void show(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback)
    public void extend()
    public void extend(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback)
    public void shrink()
    public void shrink(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback)
    private int animState
    private final com.google.android.material.floatingactionbutton.AnimatorTracker changeVisibilityTracker
    private static final int ANIM_STATE_NONE
    private static final int ANIM_STATE_HIDING
    private static final int ANIM_STATE_SHOWING
androidx.navigation.R$dimen
androidx.viewpager.widget.ViewPager$OnPageChangeListener
kotlin.coroutines.experimental.CoroutineContext$DefaultImpls
androidx.databinding.library.baseAdapters.R$layout
kotlinx.coroutines.channels.AbstractSendChannel
androidx.navigation.ui.R$layout
androidx.databinding.ObservableFloat$1
kotlinx.coroutines.JobSupportKt
kotlin.sequences.IndexingSequence$iterator$1
kotlinx.coroutines.ThreadPoolDispatcherKt
androidx.core.app.SharedElementCallback$OnSharedElementsReadyListener
androidx.core.view.MenuCompat
kotlin.reflect.KParameter
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$1
kotlinx.coroutines.internal.NativeThreadLocal
kotlinx.coroutines.flow.FlowKt__MigrationKt$combineLatest$$inlined$combine$3
androidx.appcompat.widget.ResourceManagerInternal:
    private void removeDelegate(java.lang.String,androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate)
    private static boolean arrayContains(int[],int)
    private static final java.lang.String TAG
    private static final boolean DEBUG
    private static final java.lang.String SKIP_DRAWABLE_TAG
    private static final java.lang.String PLATFORM_VD_CLAZZ
androidx.recyclerview.widget.ViewBoundsCheck$ViewBounds
androidx.appcompat.widget.ActivityChooserView$3
androidx.lifecycle.Transformations:
    private void <init>()
    public static androidx.lifecycle.LiveData switchMap(androidx.lifecycle.LiveData,androidx.arch.core.util.Function)
    public static androidx.lifecycle.LiveData distinctUntilChanged(androidx.lifecycle.LiveData)
androidx.swiperefreshlayout.R$layout
kotlin.collections.SlidingWindowKt$windowedSequence$$inlined$Sequence$1
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$drop$1
androidx.customview.R$integer
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21
kotlinx.coroutines.channels.Closed
kotlinx.coroutines.channels.AbstractSendChannel$SendSelect
androidx.recyclerview.widget.MessageThreadUtil
android.support.v4.media.session.IMediaSession$Stub$Proxy:
    public java.lang.String getInterfaceDescriptor()
    public void sendCommand(java.lang.String,android.os.Bundle,android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper)
    public boolean sendMediaButton(android.view.KeyEvent)
    public void unregisterCallbackListener(android.support.v4.media.session.IMediaControllerCallback)
    public boolean isTransportControlEnabled()
    public java.lang.String getPackageName()
    public java.lang.String getTag()
    public android.app.PendingIntent getLaunchPendingIntent()
    public long getFlags()
    public android.support.v4.media.session.ParcelableVolumeInfo getVolumeAttributes()
    public void adjustVolume(int,int,java.lang.String)
    public void setVolumeTo(int,int,java.lang.String)
    public android.support.v4.media.MediaMetadataCompat getMetadata()
    public android.support.v4.media.session.PlaybackStateCompat getPlaybackState()
    public java.util.List getQueue()
    public java.lang.CharSequence getQueueTitle()
    public android.os.Bundle getExtras()
    public int getRatingType()
    public boolean isCaptioningEnabled()
    public int getRepeatMode()
    public boolean isShuffleModeEnabledRemoved()
    public int getShuffleMode()
    public void addQueueItem(android.support.v4.media.MediaDescriptionCompat)
    public void addQueueItemAt(android.support.v4.media.MediaDescriptionCompat,int)
    public void removeQueueItem(android.support.v4.media.MediaDescriptionCompat)
    public void removeQueueItemAt(int)
    public void prepare()
    public void prepareFromMediaId(java.lang.String,android.os.Bundle)
    public void prepareFromSearch(java.lang.String,android.os.Bundle)
    public void prepareFromUri(android.net.Uri,android.os.Bundle)
    public void play()
    public void playFromMediaId(java.lang.String,android.os.Bundle)
    public void playFromSearch(java.lang.String,android.os.Bundle)
    public void playFromUri(android.net.Uri,android.os.Bundle)
    public void skipToQueueItem(long)
    public void pause()
    public void stop()
    public void next()
    public void previous()
    public void fastForward()
    public void rewind()
    public void seekTo(long)
    public void rate(android.support.v4.media.RatingCompat)
    public void rateWithExtras(android.support.v4.media.RatingCompat,android.os.Bundle)
    public void setCaptioningEnabled(boolean)
    public void setRepeatMode(int)
    public void setShuffleModeEnabledRemoved(boolean)
    public void setShuffleMode(int)
    public void sendCustomAction(java.lang.String,android.os.Bundle)
androidx.cardview.R$dimen
androidx.core.app.TaskStackBuilder:
    public static androidx.core.app.TaskStackBuilder from(android.content.Context)
    public androidx.core.app.TaskStackBuilder addParentStack(java.lang.Class)
    public android.content.Intent getIntent(int)
    public android.app.PendingIntent getPendingIntent(int,int)
    public android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle)
    public android.content.Intent[] getIntents()
    private static final java.lang.String TAG
android.support.v4.media.MediaBrowserCompatApi21$ConnectionCallbackProxy
androidx.recyclerview.widget.ViewBoundsCheck:
    static final int GT
    static final int EQ
    static final int LT
    static final int CVS_PVS_POS
    static final int FLAG_CVS_GT_PVS
    static final int FLAG_CVS_EQ_PVS
    static final int FLAG_CVS_LT_PVS
    static final int CVS_PVE_POS
    static final int FLAG_CVS_GT_PVE
    static final int FLAG_CVS_EQ_PVE
    static final int FLAG_CVS_LT_PVE
    static final int CVE_PVS_POS
    static final int FLAG_CVE_GT_PVS
    static final int FLAG_CVE_EQ_PVS
    static final int FLAG_CVE_LT_PVS
    static final int CVE_PVE_POS
    static final int FLAG_CVE_GT_PVE
    static final int FLAG_CVE_EQ_PVE
    static final int FLAG_CVE_LT_PVE
    static final int MASK
kotlinx.coroutines.channels.LazyBroadcastCoroutine
androidx.slidingpanelayout.R$integer
androidx.core.util.LongSparseArrayKt$valueIterator$1
androidx.recyclerview.widget.ItemTouchHelper$Callback
androidx.databinding.PropertyChangeRegistry:
    public void notifyChange(androidx.databinding.Observable,int)
androidx.recyclerview.R$integer
androidx.viewpager2.widget.ViewPager2$2
kotlin.random.KotlinRandom
kotlin.collections.SlidingWindowKt
kotlinx.coroutines.channels.AbstractSendChannel$onSend$1
com.czluciusdev.diceroller.R$id:
    private void <init>()
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2$1
androidx.recyclerview.widget.TileList$Tile
androidx.slidingpanelayout.R$drawable
androidx.constraintlayout.widget.Barrier:
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    public boolean allowsGoneWidget()
    public static final int LEFT
    public static final int TOP
    public static final int RIGHT
    public static final int BOTTOM
    public static final int START
    public static final int END
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenBy$2
androidx.navigation.common.ktx.R$style
androidx.loader.R$dimen
kotlinx.coroutines.scheduling.NanoTimeSource
kotlin.ranges.ClosedFloatingPointRange
androidx.lifecycle.Transformations$2$1
androidx.viewpager.widget.PagerTitleStrip$PageListener
androidx.navigation.fragment.ktx.R
kotlinx.coroutines.DispatchersKt
kotlin.comparisons.ComparisonsKt__ComparisonsKt$then$1
androidx.core.graphics.drawable.BitmapDrawableKt
androidx.appcompat.app.ActionBar$DisplayOptions
androidx.navigation.fragment.ktx.R$id
kotlin.jvm.internal.Ref$DoubleRef
androidx.media.MediaBrowserServiceCompatApi23$ServiceCompatProxy
androidx.core.ktx.R$attr
androidx.vectordrawable.animated.R$integer
com.google.android.material.bottomnavigation.BottomNavigationView
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10$1
org.intellij.lang.annotations.JdkConstants$HorizontalAlignment
com.google.android.material.bottomsheet.BottomSheetBehavior$State
androidx.annotation.RequiresFeature
androidx.databinding.library.R$attr
android.support.v4.media.session.MediaControllerCompat$TransportControls
androidx.media.AudioAttributesCompat$Builder
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3$1
androidx.core.os.ParcelCompat
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$2$lambda$1
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21
kotlin.jvm.internal.MutablePropertyReference2
com.czluciusdev.diceroller.DiceFragment$OrientationListener:
    public final kotlin.Pair getRotation0()
    public final kotlin.Pair getRotation90()
    public final kotlin.Pair getRotation180()
    public final kotlin.Pair getRotation270()
    public final int getRotationState0()
    public final int getRotationState90()
    public final int getRotationState180()
    public final int getRotationState270()
    public final android.content.Context getContext()
    public final com.czluciusdev.diceroller.databinding.DiceFragmentBinding getBinding()
androidx.core.text.SpannableStringBuilderKt
androidx.core.R$id:
    private void <init>()
kotlinx.coroutines.sync.MutexImpl$LockCont
androidx.fragment.app.BackStackState:
    private static final java.lang.String TAG
androidx.viewpager.widget.PagerTabStrip$1
androidx.core.content.PermissionChecker$PermissionResult
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$mapTo$1
androidx.customview.R$drawable
androidx.core.util.Supplier
androidx.core.view.WindowCompat
androidx.core.util.SizeKt
kotlinx.coroutines.Deferred
androidx.appcompat.app.ActionBarDrawerToggle$FrameworkActionBarDelegate
com.google.android.material.snackbar.BaseTransientBottomBar$8
android.support.v4.media.session.PlaybackStateCompat$CustomAction:
    public java.lang.Object getCustomAction()
    public java.lang.String getAction()
    public java.lang.CharSequence getName()
    public int getIcon()
    public android.os.Bundle getExtras()
kotlinx.coroutines.NonDisposableHandle
androidx.appcompat.widget.ActionMenuPresenter$SavedState
kotlin.jvm.internal.Reflection:
    public void <init>()
    public static kotlin.reflect.KClass createKotlinClass(java.lang.Class)
    public static kotlin.reflect.KClass createKotlinClass(java.lang.Class,java.lang.String)
    public static kotlin.reflect.KDeclarationContainer getOrCreateKotlinPackage(java.lang.Class,java.lang.String)
    public static kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class,java.lang.String)
    public static kotlin.reflect.KClass[] getOrCreateKotlinClasses(java.lang.Class[])
    public static java.lang.String renderLambdaToString(kotlin.jvm.internal.FunctionBase)
    public static kotlin.reflect.KFunction function(kotlin.jvm.internal.FunctionReference)
    public static kotlin.reflect.KProperty0 property0(kotlin.jvm.internal.PropertyReference0)
    public static kotlin.reflect.KMutableProperty0 mutableProperty0(kotlin.jvm.internal.MutablePropertyReference0)
    public static kotlin.reflect.KMutableProperty1 mutableProperty1(kotlin.jvm.internal.MutablePropertyReference1)
    public static kotlin.reflect.KProperty2 property2(kotlin.jvm.internal.PropertyReference2)
    public static kotlin.reflect.KMutableProperty2 mutableProperty2(kotlin.jvm.internal.MutablePropertyReference2)
    public static kotlin.reflect.KType typeOf(java.lang.Class)
    public static kotlin.reflect.KType typeOf(java.lang.Class,kotlin.reflect.KTypeProjection)
    public static kotlin.reflect.KType typeOf(java.lang.Class,kotlin.reflect.KTypeProjection,kotlin.reflect.KTypeProjection)
    public static varargs kotlin.reflect.KType typeOf(java.lang.Class,kotlin.reflect.KTypeProjection[])
    public static kotlin.reflect.KType nullableTypeOf(java.lang.Class)
    public static kotlin.reflect.KType nullableTypeOf(java.lang.Class,kotlin.reflect.KTypeProjection)
    public static kotlin.reflect.KType nullableTypeOf(java.lang.Class,kotlin.reflect.KTypeProjection,kotlin.reflect.KTypeProjection)
    public static varargs kotlin.reflect.KType nullableTypeOf(java.lang.Class,kotlin.reflect.KTypeProjection[])
    static final java.lang.String REFLECTION_NOT_AVAILABLE
androidx.vectordrawable.animated.R$attr
androidx.recyclerview.widget.RecyclerView$LayoutParams:
    public boolean viewNeedsUpdate()
    public int getViewPosition()
    public int getViewAdapterPosition()
androidx.fragment.R
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplBase
kotlin.collections.ArraysKt___ArraysJvmKt$asList$2
com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemReselectedListener
androidx.navigation.AnimBuilder
kotlin.collections.ArraysKt__ArraysKt:
    public static final java.util.List flatten(java.lang.Object[][])
    public static final kotlin.Pair unzip(kotlin.Pair[])
    private static final boolean isNullOrEmpty(java.lang.Object[])
    private static final java.lang.Object ifEmpty(java.lang.Object[],kotlin.jvm.functions.Function0)
    public static final boolean contentDeepEquals(java.lang.Object[],java.lang.Object[])
    public static final java.lang.String contentDeepToString(java.lang.Object[])
    private static final void contentDeepToStringInternal$ArraysKt__ArraysKt(java.lang.Object[],java.lang.StringBuilder,java.util.List)
    public void <init>()
androidx.core.view.MenuKt
androidx.appcompat.app.ActionBar$OnNavigationListener
kotlinx.coroutines.selects.SelectClause1
org.jetbrains.annotations.NonNls
kotlin.text.FlagEnum
androidx.core.content.SharedPreferencesCompat$EditorCompat$Helper
com.google.android.material.snackbar.Snackbar$Callback
com.google.android.material.card.MaterialCardViewHelper$1
androidx.core.view.DragStartHelper$1
kotlin.coroutines.SafeContinuation
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$invokeSuspend$$inlined$select$lambda$1
androidx.navigation.ui.ktx.R$styleable
androidx.activity.ktx.R$dimen
androidx.navigation.R$styleable:
    private void <init>()
kotlin.io.FileSystemException
kotlin.jvm.internal.ByteCompanionObject
kotlin.random.PlatformRandomKt
com.google.android.material.tabs.TabLayout$Mode
kotlinx.coroutines.flow.FlowKt__ReduceKt$single$1
androidx.slidingpanelayout.widget.SlidingPaneLayout$PanelSlideListener
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$5$2
androidx.lifecycle.LifecycleKt
kotlin.text.TypeAliasesKt
androidx.vectordrawable.R$id
androidx.appcompat.widget.SearchView:
    public boolean isIconfiedByDefault()
    public boolean isSubmitButtonEnabled()
    public boolean isQueryRefinementEnabled()
    static final boolean DBG
    static final java.lang.String LOG_TAG
    private static final java.lang.String IME_OPTION_NO_MICROPHONE
androidx.core.database.sqlite.SQLiteDatabaseKt
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$filterNotTo$3
androidx.navigation.ktx.R$color
kotlinx.coroutines.flow.FlowKt__MigrationKt$combine$$inlined$unsafeFlow$3$lambda$1
androidx.media.MediaBrowserServiceCompatApi21$MediaBrowserServiceAdaptor
kotlin.time.MonoClock
androidx.legacy.widget.Space
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$findLast$1
androidx.appcompat.resources.R$attr
kotlinx.coroutines.test.TestCoroutineContext$Dispatcher$scheduleResumeAfterDelay$$inlined$Runnable$1
kotlin.sequences.SequencesKt__SequencesJVMKt
androidx.customview.widget.FocusStrategy:
    private void <init>()
androidx.appcompat.widget.ViewUtils:
    private void <init>()
    private static final java.lang.String TAG
kotlinx.coroutines.test.TestCoroutineContextKt
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$MediaServiceConnection$2
androidx.core.provider.FontsContractCompat$FontFamilyResult:
    public static final int STATUS_OK
    public static final int STATUS_WRONG_CERTIFICATES
    public static final int STATUS_UNEXPECTED_DATA_PROVIDED
kotlinx.coroutines.flow.FlowKt__ChannelsKt$emitAll$1
kotlin.Deprecated
androidx.core.R$style
kotlinx.coroutines.flow.FlowKt__DelayKt$debounce$2$invokeSuspend$$inlined$select$lambda$1
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1$lambda$1
androidx.recyclerview.widget.LayoutState:
    static final int LAYOUT_START
    static final int LAYOUT_END
    static final int INVALID_LAYOUT
    static final int ITEM_DIRECTION_HEAD
    static final int ITEM_DIRECTION_TAIL
android.support.v4.media.session.PlaybackStateCompat$Actions
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$7
androidx.viewpager.R$styleable
kotlin.collections.UCollectionsKt___UCollectionsKt
com.google.android.material.bottomappbar.BottomAppBar$FabAlignmentMode
androidx.navigation.ui.NavigationUI$2
androidx.core.app.JobIntentService$CompatWorkEnqueuer
androidx.swiperefreshlayout.R$string
androidx.activity.R$dimen
com.czluciusdev.diceroller.R$style
androidx.core.transition.TransitionKt$addListener$5
kotlinx.coroutines.flow.FlowKt__MergeKt$unsafeTransform$$inlined$unsafeFlow$1$1
androidx.asynclayoutinflater.R$dimen
androidx.navigation.fragment.ktx.R$dimen
androidx.media.MediaSessionManagerImplBase
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$zip$1
androidx.core.view.ViewCompat$FocusDirection
androidx.lifecycle.viewmodel.ktx.R
com.google.android.material.internal.CollapsingTextHelper$2
com.google.android.material.math.MathUtils:
    private void <init>()
    public static boolean geq(float,float,float)
    public static final float DEFAULT_EPSILON
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$6
androidx.appcompat.view.menu.CascadingMenuPopup$HorizPosition
kotlinx.coroutines.flow.EmptyFlow
androidx.activity.ComponentActivity:
    public void <init>(int)
    public java.lang.Object getLastCustomNonConfigurationInstance()
    public androidx.lifecycle.ViewModelProvider$Factory getDefaultViewModelProviderFactory()
    private androidx.lifecycle.ViewModelProvider$Factory mDefaultFactory
com.google.android.material.datepicker.DateFormatTextWatcher
androidx.annotation.StyleableRes
androidx.media.AudioAttributesCompat:
    void <init>(androidx.media.AudioAttributesImpl)
    public static androidx.media.AudioAttributesCompat wrap(java.lang.Object)
    public static androidx.media.AudioAttributesCompat fromBundle(android.os.Bundle)
    static int usageForStreamType(int)
    public static void setForceLegacyBehavior(boolean)
    static int toVolumeStreamType(boolean,androidx.media.AudioAttributesCompat)
    public int getVolumeControlStream()
    public java.lang.Object unwrap()
    public int getLegacyStreamType()
    public int getContentType()
    public int getUsage()
    public int getFlags()
    public android.os.Bundle toBundle()
    int getRawLegacyStreamType()
    private static final java.lang.String TAG
    public static final int CONTENT_TYPE_UNKNOWN
    public static final int CONTENT_TYPE_SPEECH
    public static final int CONTENT_TYPE_MUSIC
    public static final int CONTENT_TYPE_MOVIE
    public static final int CONTENT_TYPE_SONIFICATION
    public static final int USAGE_UNKNOWN
    public static final int USAGE_MEDIA
    public static final int USAGE_VOICE_COMMUNICATION
    public static final int USAGE_VOICE_COMMUNICATION_SIGNALLING
    public static final int USAGE_ALARM
    public static final int USAGE_NOTIFICATION
    public static final int USAGE_NOTIFICATION_RINGTONE
    public static final int USAGE_NOTIFICATION_COMMUNICATION_REQUEST
    public static final int USAGE_NOTIFICATION_COMMUNICATION_INSTANT
    public static final int USAGE_NOTIFICATION_COMMUNICATION_DELAYED
    public static final int USAGE_NOTIFICATION_EVENT
    public static final int USAGE_ASSISTANCE_ACCESSIBILITY
    public static final int USAGE_ASSISTANCE_NAVIGATION_GUIDANCE
    public static final int USAGE_ASSISTANCE_SONIFICATION
    public static final int USAGE_GAME
    private static final int USAGE_VIRTUAL_SOURCE
    public static final int USAGE_ASSISTANT
    private static final int SUPPRESSIBLE_NOTIFICATION
    private static final int SUPPRESSIBLE_CALL
    static boolean sForceLegacyBehavior
    public static final int FLAG_AUDIBILITY_ENFORCED
    static final int FLAG_SECURE
    static final int FLAG_SCO
    static final int FLAG_BEACON
    public static final int FLAG_HW_AV_SYNC
    static final int FLAG_HW_HOTWORD
    static final int FLAG_BYPASS_INTERRUPTION_POLICY
    static final int FLAG_BYPASS_MUTE
    static final int FLAG_LOW_LATENCY
    static final int FLAG_DEEP_BUFFER
    static final int FLAG_ALL
    static final int FLAG_ALL_PUBLIC
    static final int INVALID_STREAM_TYPE
    static final java.lang.String AUDIO_ATTRIBUTES_FRAMEWORKS
    static final java.lang.String AUDIO_ATTRIBUTES_USAGE
    static final java.lang.String AUDIO_ATTRIBUTES_CONTENT_TYPE
    static final java.lang.String AUDIO_ATTRIBUTES_FLAGS
    static final java.lang.String AUDIO_ATTRIBUTES_LEGACY_STREAM_TYPE
kotlin.UShortKt
androidx.databinding.InverseBindingListener
kotlinx.coroutines.flow.FlowKt__MergeKt$map$$inlined$unsafeTransform$2$2
androidx.transition.R$color
kotlin.collections.CollectionsKt__IterablesKt
androidx.core.provider.FontsContractCompat$4
androidx.transition.Visibility$Mode
androidx.transition.GhostViewPort$1
kotlin.io.ExceptionsKt
kotlin.text.Regex$findAll$2
androidx.core.text.HtmlCompat
androidx.core.view.accessibility.AccessibilityRecordCompat:
    public void <init>(java.lang.Object)
    public static androidx.core.view.accessibility.AccessibilityRecordCompat obtain(androidx.core.view.accessibility.AccessibilityRecordCompat)
    public static androidx.core.view.accessibility.AccessibilityRecordCompat obtain()
    public static int getMaxScrollX(android.view.accessibility.AccessibilityRecord)
    public static int getMaxScrollY(android.view.accessibility.AccessibilityRecord)
    public java.lang.Object getImpl()
    public void setSource(android.view.View)
    public void setSource(android.view.View,int)
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat getSource()
    public int getWindowId()
    public boolean isChecked()
    public void setChecked(boolean)
    public boolean isEnabled()
    public void setEnabled(boolean)
    public boolean isPassword()
    public void setPassword(boolean)
    public boolean isFullScreen()
    public void setFullScreen(boolean)
    public boolean isScrollable()
    public void setScrollable(boolean)
    public int getItemCount()
    public void setItemCount(int)
    public int getCurrentItemIndex()
    public void setCurrentItemIndex(int)
    public int getFromIndex()
    public void setFromIndex(int)
    public int getToIndex()
    public void setToIndex(int)
    public int getScrollX()
    public void setScrollX(int)
    public int getScrollY()
    public void setScrollY(int)
    public int getMaxScrollX()
    public void setMaxScrollX(int)
    public int getMaxScrollY()
    public void setMaxScrollY(int)
    public int getAddedCount()
    public void setAddedCount(int)
    public int getRemovedCount()
    public void setRemovedCount(int)
    public java.lang.CharSequence getClassName()
    public void setClassName(java.lang.CharSequence)
    public java.util.List getText()
    public java.lang.CharSequence getBeforeText()
    public void setBeforeText(java.lang.CharSequence)
    public java.lang.CharSequence getContentDescription()
    public void setContentDescription(java.lang.CharSequence)
    public android.os.Parcelable getParcelableData()
    public void setParcelableData(android.os.Parcelable)
    public void recycle()
    public int hashCode()
    public boolean equals(java.lang.Object)
    private final android.view.accessibility.AccessibilityRecord mRecord
kotlinx.coroutines.flow.FlowKt__TransformKt$unsafeTransform$$inlined$unsafeFlow$4$lambda$1
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat:
    private static void dumpKeyframes(java.lang.Object[],java.lang.String)
    private void <init>()
    private static final java.lang.String TAG
    private static final int TOGETHER
    private static final int MAX_NUM_POINTS
    private static final int VALUE_TYPE_FLOAT
    private static final int VALUE_TYPE_INT
    private static final int VALUE_TYPE_PATH
    private static final int VALUE_TYPE_COLOR
    private static final int VALUE_TYPE_UNDEFINED
    private static final boolean DBG_ANIMATOR_INFLATER
androidx.slidingpanelayout.widget.SlidingPaneLayout
kotlin.text.StringsKt___StringsKt$asIterable$$inlined$Iterable$1
androidx.versionedparcelable.VersionedParcelStream$FieldBuffer
androidx.databinding.library.baseAdapters.DataBinderMapperImpl:
    public int getLayoutId(java.lang.String)
    public java.lang.String convertBrIdToString(int)
androidx.appcompat.app.ActionBar$Tab:
    public abstract int getPosition()
    public abstract androidx.appcompat.app.ActionBar$Tab setIcon(android.graphics.drawable.Drawable)
    public abstract androidx.appcompat.app.ActionBar$Tab setIcon(int)
    public abstract androidx.appcompat.app.ActionBar$Tab setText(java.lang.CharSequence)
    public abstract androidx.appcompat.app.ActionBar$Tab setText(int)
    public abstract androidx.appcompat.app.ActionBar$Tab setCustomView(android.view.View)
    public abstract androidx.appcompat.app.ActionBar$Tab setCustomView(int)
    public abstract androidx.appcompat.app.ActionBar$Tab setTag(java.lang.Object)
    public abstract java.lang.Object getTag()
    public abstract androidx.appcompat.app.ActionBar$Tab setTabListener(androidx.appcompat.app.ActionBar$TabListener)
    public abstract androidx.appcompat.app.ActionBar$Tab setContentDescription(int)
    public abstract androidx.appcompat.app.ActionBar$Tab setContentDescription(java.lang.CharSequence)
    public static final int INVALID_POSITION
kotlinx.coroutines.flow.FlowKt__DelayKt$debounce$2
kotlin.coroutines.jvm.internal.RunSuspendKt
androidx.core.ktx.R$dimen
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$$inlined$collect$2
androidx.databinding.adapters.ViewGroupBindingAdapter$OnAnimationStart
androidx.core.provider.FontsContractCompat$4$4
kotlin.comparisons.ComparisonsKt__ComparisonsKt$nullsLast$1
androidx.transition.Transition:
    public void <init>(android.content.Context,android.util.AttributeSet)
    private static int[] parseMatchOrder(java.lang.String)
    private static boolean isValidMatch(int)
    private static boolean alreadyContains(int[],int)
    private static java.util.ArrayList excludeObject(java.util.ArrayList,java.lang.Object,boolean)
    private java.util.ArrayList excludeId(java.util.ArrayList,int,boolean)
    private java.util.ArrayList excludeView(java.util.ArrayList,android.view.View,boolean)
    private java.util.ArrayList excludeType(java.util.ArrayList,java.lang.Class,boolean)
    public varargs void setMatchOrder(int[])
    public androidx.transition.Transition addTarget(int)
    public androidx.transition.Transition addTarget(java.lang.String)
    public androidx.transition.Transition addTarget(java.lang.Class)
    public androidx.transition.Transition removeTarget(int)
    public androidx.transition.Transition removeTarget(java.lang.String)
    public androidx.transition.Transition removeTarget(java.lang.Class)
    public androidx.transition.Transition excludeTarget(android.view.View,boolean)
    public androidx.transition.Transition excludeTarget(int,boolean)
    public androidx.transition.Transition excludeTarget(java.lang.String,boolean)
    public androidx.transition.Transition excludeChildren(android.view.View,boolean)
    public androidx.transition.Transition excludeChildren(int,boolean)
    public androidx.transition.Transition excludeTarget(java.lang.Class,boolean)
    public androidx.transition.Transition excludeChildren(java.lang.Class,boolean)
    void forceToEnd(android.view.ViewGroup)
    public android.graphics.Rect getEpicenter()
    androidx.transition.Transition setSceneRoot(android.view.ViewGroup)
    void setCanRemoveViews(boolean)
    private static final java.lang.String LOG_TAG
    static final boolean DBG
    public static final int MATCH_INSTANCE
    private static final int MATCH_FIRST
    public static final int MATCH_NAME
    public static final int MATCH_ID
    public static final int MATCH_ITEM_ID
    private static final int MATCH_LAST
    private static final java.lang.String MATCH_INSTANCE_STR
    private static final java.lang.String MATCH_NAME_STR
    private static final java.lang.String MATCH_ID_STR
    private static final java.lang.String MATCH_ITEM_ID_STR
kotlin.text.StringsKt___StringsKt$windowed$1
androidx.databinding.adapters.AdapterViewBindingAdapter$OnItemSelectedComponentListener
kotlin.jvm.functions.Function22
android.support.v4.media.MediaBrowserCompatApi26$SubscriptionCallbackProxy
kotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnchecked$$inlined$buildContinuationByInvokeCall$IntrinsicsKt__IntrinsicsJvmKt$1
androidx.annotation.FloatRange
com.google.android.material.R
androidx.swiperefreshlayout.R$color
androidx.appcompat.graphics.drawable.DrawerArrowDrawable$ArrowDirection
kotlin.jvm.internal.FunctionBase:
    public abstract int getArity()
kotlinx.coroutines.EventLoopImplBase$DelayedTask
androidx.transition.TransitionUtils:
    private void <init>()
    private static final int MAX_IMAGE_SIZE
androidx.core.util.SparseArrayKt$keyIterator$1
androidx.media.MediaBrowserServiceCompatApi21$BrowserRoot
androidx.core.view.ViewPropertyAnimatorCompat:
    public androidx.core.view.ViewPropertyAnimatorCompat alphaBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat translationX(float)
    public androidx.core.view.ViewPropertyAnimatorCompat withEndAction(java.lang.Runnable)
    public android.view.animation.Interpolator getInterpolator()
    public long getStartDelay()
    public androidx.core.view.ViewPropertyAnimatorCompat rotation(float)
    public androidx.core.view.ViewPropertyAnimatorCompat rotationBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat rotationX(float)
    public androidx.core.view.ViewPropertyAnimatorCompat rotationXBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat rotationY(float)
    public androidx.core.view.ViewPropertyAnimatorCompat rotationYBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat scaleX(float)
    public androidx.core.view.ViewPropertyAnimatorCompat scaleXBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat scaleY(float)
    public androidx.core.view.ViewPropertyAnimatorCompat scaleYBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat x(float)
    public androidx.core.view.ViewPropertyAnimatorCompat xBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat y(float)
    public androidx.core.view.ViewPropertyAnimatorCompat yBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat translationXBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat translationYBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat translationZBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat translationZ(float)
    public androidx.core.view.ViewPropertyAnimatorCompat z(float)
    public androidx.core.view.ViewPropertyAnimatorCompat zBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat withLayer()
    public androidx.core.view.ViewPropertyAnimatorCompat withStartAction(java.lang.Runnable)
    static final int LISTENER_TAG_ID
kotlinx.coroutines.internal.AtomicOp
com.google.android.material.snackbar.ContentViewCallback
androidx.core.content.res.ComplexColorCompat:
    private static final java.lang.String LOG_TAG
kotlinx.coroutines.scheduling.DefaultScheduler
kotlinx.coroutines.channels.ProduceKt
android.support.v4.media.MediaBrowserCompat$ItemReceiver:
    void <init>(java.lang.String,android.support.v4.media.MediaBrowserCompat$ItemCallback,android.os.Handler)
androidx.fragment.app.FragmentTabHost
androidx.viewpager2.R$styleable
androidx.core.graphics.CanvasKt
kotlin.jvm.internal.Ref$FloatRef
com.google.android.material.datepicker.MaterialCalendar:
    private static final java.lang.String THEME_RES_ID_KEY
    private static final java.lang.String GRID_SELECTOR_KEY
    private static final java.lang.String CALENDAR_CONSTRAINTS_KEY
    private static final java.lang.String CURRENT_MONTH_KEY
    private static final int SMOOTH_SCROLL_MAX
kotlinx.coroutines.flow.FlowKt__DistinctKt$distinctUntilChangedBy$$inlined$distinctUntilChangedBy$FlowKt__DistinctKt$1
kotlin.text.MatchResult
androidx.appcompat.widget.AppCompatCheckedTextView:
    public void <init>(android.content.Context)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8
androidx.viewpager.widget.ViewPager$ViewPositionComparator
androidx.viewpager2.adapter.FragmentStateAdapter:
    public void <init>(androidx.fragment.app.FragmentActivity)
    public void <init>(androidx.fragment.app.Fragment)
    public void <init>(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle)
    private boolean isFragmentViewBound(long)
    private java.lang.Long itemForViewHolder(int)
    private void ensureFragment(int)
    private void scheduleViewAttach(androidx.fragment.app.Fragment,android.widget.FrameLayout)
    private void removeFragment(long)
    private void scheduleGracePeriodEnd()
    private static java.lang.String createKey(java.lang.String,long)
    private static boolean isValidKey(java.lang.String,java.lang.String)
    private static long parseIdFromKey(java.lang.String,java.lang.String)
    public void onAttachedToRecyclerView(androidx.recyclerview.widget.RecyclerView)
    public void onDetachedFromRecyclerView(androidx.recyclerview.widget.RecyclerView)
    public abstract androidx.fragment.app.Fragment createFragment(int)
    public final androidx.viewpager2.adapter.FragmentViewHolder onCreateViewHolder(android.view.ViewGroup,int)
    public final void onBindViewHolder(androidx.viewpager2.adapter.FragmentViewHolder,int)
    void gcFragments()
    public final void onViewAttachedToWindow(androidx.viewpager2.adapter.FragmentViewHolder)
    void addViewToContainer(android.view.View,android.widget.FrameLayout)
    public final void onViewRecycled(androidx.viewpager2.adapter.FragmentViewHolder)
    public final boolean onFailedToRecycleView(androidx.viewpager2.adapter.FragmentViewHolder)
    public long getItemId(int)
    public boolean containsItem(long)
    public final void setHasStableIds(boolean)
    public final android.os.Parcelable saveState()
    public final void restoreState(android.os.Parcelable)
    public synthetic bridge void onViewAttachedToWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public synthetic bridge boolean onFailedToRecycleView(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public synthetic bridge void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public synthetic bridge void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)
    public synthetic bridge androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int)
    final androidx.lifecycle.Lifecycle mLifecycle
    final androidx.fragment.app.FragmentManager mFragmentManager
    final androidx.collection.LongSparseArray mFragments
    private final androidx.collection.LongSparseArray mSavedStates
    private final androidx.collection.LongSparseArray mItemIdToViewHolder
    private androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer mFragmentMaxLifecycleEnforcer
    boolean mIsInGracePeriod
    private boolean mHasStaleFragments
    private static final java.lang.String KEY_PREFIX_FRAGMENT
    private static final java.lang.String KEY_PREFIX_STATE
    private static final long GRACE_WINDOW_TIME_MS
androidx.recyclerview.widget.ItemTouchUIUtilImpl
kotlin.ranges.ULongRange$Companion
android.support.v4.media.session.MediaSessionCompatApi23$Callback
kotlin.sequences.GeneratorSequence
kotlin.sequences.SequencesKt__SequenceBuilderKt$sequence$$inlined$Sequence$1
android.support.v4.media.session.MediaControllerCompatApi23
androidx.customview.widget.ExploreByTouchHelper:
    public final void invalidateRoot()
    public final void invalidateVirtualView(int)
    public final void invalidateVirtualView(int,int)
    public int getFocusedVirtualView()
    public static final int INVALID_ID
    public static final int HOST_ID
    private static final java.lang.String DEFAULT_CLASS_NAME
com.google.android.material.snackbar.BaseTransientBottomBar$13
androidx.annotation.CheckResult
kotlinx.coroutines.flow.FlowKt__ReduceKt$single$$inlined$collect$1
androidx.core.animation.AnimatorKt$addListener$4
kotlin.Suppress
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ChangeSizeStrategy
androidx.core.graphics.drawable.WrappedDrawableApi21:
    private static final java.lang.String TAG
kotlin.collections.GroupingKt
kotlin.internal.RequireKotlin
com.google.android.material.resources.TextAppearanceConfig:
    public void <init>()
    public static void setShouldLoadFontSynchronously(boolean)
androidx.core.app.NotificationCompat$Action
androidx.appcompat.R$style:
    private void <init>()
androidx.recyclerview.widget.AsyncDifferConfig
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21$1
kotlinx.coroutines.flow.FlowKt__MergeKt$unsafeTransform$$inlined$unsafeFlow$2$1
kotlin.internal.PlatformImplementations$ReflectAddSuppressedMethod
kotlin.coroutines.ContinuationKt
com.google.android.material.internal.ParcelableSparseIntArray$1
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$$inlined$collect$1
androidx.core.content.res.ConfigurationHelper
kotlin.internal.OnlyInputTypes
androidx.appcompat.resources.R$id
kotlinx.coroutines.Delay$DefaultImpls
androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments:
    public int getRow()
    public int getColumn()
kotlin.jvm.internal.EnumCompanionObject
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon:
    protected void onBoundsChange(android.graphics.Rect)
androidx.navigation.NavArgumentBuilder
kotlinx.coroutines.EventLoopImplPlatform
androidx.viewpager.widget.ViewPager
androidx.navigation.common.ktx.R$id
kotlin.internal.jdk7.JDK7PlatformImplementations:
    public void addSuppressed(java.lang.Throwable,java.lang.Throwable)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper:
    private static final java.lang.String TAG
    private static final int DEFAULT_AUTO_SIZE_MIN_TEXT_SIZE_IN_SP
    private static final int DEFAULT_AUTO_SIZE_MAX_TEXT_SIZE_IN_SP
    private static final int DEFAULT_AUTO_SIZE_GRANULARITY_IN_PX
    static final float UNSET_AUTO_SIZE_UNIFORM_CONFIGURATION_VALUE
    private static final int VERY_WIDE
kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1$1
kotlinx.coroutines.CompletedExceptionally
androidx.lifecycle.SavedStateHandleController:
    static final java.lang.String TAG_SAVED_STATE_HANDLE_CONTROLLER
androidx.databinding.library.baseAdapters.R$dimen
androidx.navigation.common.R
com.google.android.material.internal.ScrimInsetsFrameLayout
androidx.vectordrawable.graphics.drawable.Animatable2Compat:
    public abstract void registerAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
    public abstract boolean unregisterAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
    public abstract void clearAnimationCallbacks()
androidx.navigation.NavDirections
androidx.core.app.FrameMetricsAggregator
com.google.android.material.internal.NavigationMenuPresenter$SeparatorViewHolder
kotlin.coroutines.experimental.CoroutinesKt
android.support.v4.media.session.MediaSessionCompatApi24$CallbackProxy
androidx.fragment.R$drawable
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$filterNotNullTo$1
androidx.core.graphics.PaintCompat
androidx.recyclerview.R$attr:
    private void <init>()
androidx.constraintlayout.solver.widgets.Rectangle:
    public void setBounds(int,int,int,int)
    void grow(int,int)
    boolean intersects(androidx.constraintlayout.solver.widgets.Rectangle)
    public boolean contains(int,int)
    public int getCenterX()
    public int getCenterY()
    public int x
    public int y
    public int width
    public int height
androidx.navigation.fragment.R$string
com.google.android.material.chip.Chip:
    public boolean isChipIconVisible()
    public boolean isChipIconEnabled()
    public boolean isCloseIconEnabled()
    public boolean isCheckedIconVisible()
    public boolean isCheckedIconEnabled()
    private static final java.lang.String TAG
    private static final int CHIP_BODY_VIRTUAL_ID
    private static final int CLOSE_ICON_VIRTUAL_ID
    private static final java.lang.String NAMESPACE_ANDROID
    private static final int MIN_TOUCH_TARGET_DP
    private static final java.lang.String BUTTON_ACCESSIBILITY_CLASS_NAME
    private static final java.lang.String COMPOUND_BUTTON_ACCESSIBILITY_CLASS_NAME
    private static final java.lang.String GENERIC_VIEW_ACCESSIBILITY_CLASS_NAME
kotlinx.coroutines.flow.FlowKt__MigrationKt$combineLatest$$inlined$combine$2$2
androidx.viewpager.R$layout
androidx.legacy.coreutils.R
androidx.navigation.fragment.ktx.R$anim
androidx.viewpager2.R
androidx.appcompat.R$anim
kotlin.Result$Companion
kotlin.internal.PlatformImplementations:
    public void addSuppressed(java.lang.Throwable,java.lang.Throwable)
    public kotlin.text.MatchGroup getMatchResultNamedGroup(java.util.regex.MatchResult,java.lang.String)
androidx.transition.ChangeTransform$PathAnimatorMatrix
kotlin.text.Charsets
kotlinx.coroutines.CompletionHandlerKt
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combine$3$3
kotlin.jvm.internal.BooleanSpreadBuilder
kotlin.system.ProcessKt
kotlinx.coroutines.AwaitKt$awaitAll$2
androidx.navigation.ui.MenuItemKt
android.support.v4.media.session.PlaybackStateCompat$ErrorCode
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$invokeSuspend$$inlined$collect$1$1
androidx.navigation.ktx.R$drawable
kotlin.jvm.internal.MutablePropertyReference
kotlin.reflect.KProperty2$Getter
androidx.viewpager.R$string
androidx.lifecycle.DispatchQueue$runOrEnqueue$$inlined$with$lambda$1
androidx.core.app.ActivityRecreator:
    private void <init>()
    private static final java.lang.String LOG_TAG
com.google.android.material.tabs.TabLayout$AdapterChangeListener
androidx.databinding.library.baseAdapters.BuildConfig
kotlinx.coroutines.flow.FlowKt__MergeKt$unsafeTransform$$inlined$unsafeFlow$2
kotlin.internal.PlatformDependent
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$1$1
kotlinx.coroutines.flow.FlowKt__DistinctKt$distinctUntilChangedBy$$inlined$unsafeFlow$3$lambda$1$1
androidx.core.text.SpannableStringKt
androidx.collection.SparseArrayKt$keyIterator$1
androidx.databinding.BaseObservable:
    public void notifyChange()
androidx.databinding.ObservableParcelable$1
androidx.fragment.app.FragmentPagerAdapter
androidx.legacy.coreui.R$styleable
androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState$1
com.google.android.material.shape.MaterialShapeDrawable$CompatibilityShadowMode
androidx.annotation.IntegerRes
kotlin.ranges.LongProgression$Companion
kotlinx.coroutines.flow.internal.FlowProduceCoroutine
kotlinx.coroutines.flow.FlowKt__TransformKt$unsafeTransform$$inlined$unsafeFlow$5
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$filterTo$3
androidx.databinding.adapters.ViewBindingAdapter$1
androidx.navigation.ui.AppBarConfigurationKt$AppBarConfiguration$3
kotlinx.coroutines.flow.FlowKt__LimitKt
androidx.core.R
androidx.navigation.R$drawable
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat:
    public static androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean)
    public int getColumnIndex()
    public int getColumnSpan()
    public int getRowIndex()
    public int getRowSpan()
    public boolean isHeading()
    public boolean isSelected()
kotlin.jvm.functions.Function1:
    public abstract java.lang.Object invoke(java.lang.Object)
kotlin.reflect.KClass$DefaultImpls
android.support.v4.media.session.MediaControllerCompat$PlaybackInfo:
    public int getPlaybackType()
    public int getAudioStream()
    public int getVolumeControl()
    public int getMaxVolume()
    public int getCurrentVolume()
    public static final int PLAYBACK_TYPE_LOCAL
    public static final int PLAYBACK_TYPE_REMOTE
kotlin.jvm.internal.FloatCompanionObject
androidx.core.view.ViewPropertyAnimatorListenerAdapter:
    public void onAnimationEnd(android.view.View)
androidx.constraintlayout.widget.R
androidx.navigation.fragment.FragmentNavArgsLazyKt
androidx.transition.PropertyValuesHolderUtils:
    private void <init>()
androidx.core.graphics.BlendModeUtils
kotlin.experimental.ExperimentalTypeInference
com.google.android.material.internal.Experimental
kotlin.ranges.ComparableRange
kotlin.collections.UShortIterator
androidx.core.content.pm.ShortcutInfoCompat
androidx.asynclayoutinflater.R$attr
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$4
kotlinx.coroutines.PoolThread
androidx.lifecycle.viewmodel.savedstate.R
androidx.core.app.NotificationCompat$Extender
androidx.core.view.ViewKt$postDelayed$runnable$1
androidx.navigation.ui.NavigationViewKt
kotlinx.coroutines.internal.ThreadSafeHeapNode
kotlin.collections.CollectionsKt___CollectionsKt$asSequence$$inlined$Sequence$1
androidx.core.graphics.TypefaceCompatApi24Impl:
    private static final java.lang.String TAG
    private static final java.lang.String FONT_FAMILY_CLASS
    private static final java.lang.String ADD_FONT_WEIGHT_STYLE_METHOD
    private static final java.lang.String CREATE_FROM_FAMILIES_WITH_DEFAULT_METHOD
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup:
    private static final int MIN_SIZE
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$1
kotlinx.coroutines.JobSupport$Finishing
kotlinx.coroutines.channels.ConflatedBroadcastChannel$Companion
kotlin.sequences.SequencesKt___SequencesKt$sorted$1
androidx.core.view.LayoutInflaterCompat$Factory2Wrapper
kotlinx.coroutines.flow.internal.SafeCollectorKt
androidx.appcompat.widget.DropDownListView:
    public int lookForSelectablePosition(int,boolean)
    public static final int INVALID_POSITION
    public static final int NO_POSITION
android.support.v4.media.MediaBrowserCompat$SearchResultReceiver:
    void <init>(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserCompat$SearchCallback,android.os.Handler)
androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter
kotlin.collections.unsigned.UArraysKt___UArraysKt
androidx.appcompat.graphics.drawable.DrawerArrowDrawable:
    public void setArrowHeadLength(float)
    public float getArrowHeadLength()
    public void setArrowShaftLength(float)
    public float getArrowShaftLength()
    public float getBarLength()
    public void setBarLength(float)
    public int getColor()
    public float getBarThickness()
    public float getGapSize()
    public void setDirection(int)
    public boolean isSpinEnabled()
    public int getDirection()
    public void setVerticalMirror(boolean)
    public final android.graphics.Paint getPaint()
    public static final int ARROW_DIRECTION_LEFT
    public static final int ARROW_DIRECTION_RIGHT
    public static final int ARROW_DIRECTION_START
    public static final int ARROW_DIRECTION_END
kotlin.sequences.DropWhileSequence
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder
androidx.coordinatorlayout.widget.CoordinatorLayout:
    public boolean doViewsOverlap(android.view.View,android.view.View)
    static final java.lang.String TAG
    private static final int TYPE_ON_INTERCEPT
    private static final int TYPE_ON_TOUCH
    static final int EVENT_PRE_DRAW
    static final int EVENT_NESTED_SCROLL
    static final int EVENT_VIEW_REMOVED
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$2
androidx.core.graphics.drawable.DrawableKt
kotlin.reflect.KCallable$DefaultImpls
androidx.databinding.library.baseAdapters.R$integer
kotlin.jvm.internal.markers.KMutableList
com.czluciusdev.diceroller.R$interpolator
androidx.transition.Styleable
kotlin.NoWhenBranchMatchedException
kotlin.text.MatchGroupCollection
kotlin.UnsafeVariance
androidx.transition.Styleable$ChangeBounds
androidx.core.graphics.BitmapKt
kotlin.jvm.internal.PropertyReference2
kotlin.time.Duration
kotlinx.coroutines.ExecutorCoroutineDispatcher
androidx.slidingpanelayout.widget.SlidingPaneLayout$AccessibilityDelegate
kotlin.collections.MutableMapWithDefaultImpl
com.google.android.material.R$animator:
    private void <init>()
androidx.appcompat.R$attr:
    private void <init>()
kotlin.collections.AbstractIterator
androidx.appcompat.view.menu.ListMenuItemView:
    public boolean showsIcon()
    private static final java.lang.String TAG
com.google.android.material.shape.CornerTreatment:
    public void getCornerPath(float,float,com.google.android.material.shape.ShapePath)
org.intellij.lang.annotations.JdkConstants$FontStyle
androidx.core.graphics.ImageDecoderKt$decodeDrawable$1
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$8
kotlinx.coroutines.flow.FlowKt__LimitKt$drop$$inlined$unsafeFlow$1$lambda$1
androidx.loader.R
androidx.activity.ActivityViewModelLazyKt$viewModels$1
androidx.viewpager.widget.ViewPager$DecorView
androidx.appcompat.resources.R$drawable:
    private void <init>()
kotlinx.coroutines.internal.SharedImmutable
androidx.cardview.widget.CardViewImpl:
    public abstract void initialize(androidx.cardview.widget.CardViewDelegate,android.content.Context,android.content.res.ColorStateList,float,float,float)
    public abstract void updatePadding(androidx.cardview.widget.CardViewDelegate)
kotlinx.coroutines.flow.FlowKt__MigrationKt$combine$$inlined$combine$1
kotlinx.coroutines.flow.FlowKt__CollectKt
kotlinx.coroutines.sync.CancelSemaphoreAcquisitionHandler
kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3$emit$1
kotlin.collections.AbstractMap
androidx.databinding.ViewDataBinding$WeakMapListener:
    public void onMapChanged(androidx.databinding.ObservableMap,java.lang.Object)
androidx.legacy.v4.R
kotlin.time.DurationUnitKt__DurationUnitKt
androidx.databinding.adapters.SeekBarBindingAdapter$OnStopTrackingTouch
kotlinx.coroutines.CompletableDeferred
kotlin.collections.ArraysKt___ArraysKt$withIndex$5
kotlin.jvm.functions.Function17
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$6
kotlin.collections.CollectionsKt__CollectionsKt
androidx.cursoradapter.R
androidx.appcompat.widget.ActivityChooserModel$ActivitySorter
kotlinx.coroutines.sync.MutexImpl
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$associateByTo$3
androidx.core.provider.FontsContractCompat:
    private void <init>()
    public static void resetCache()
    public static void requestFont(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler)
    private static void requestFontInternal(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler)
    public static android.graphics.Typeface buildTypeface(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[])
    public static final java.lang.String PARCEL_FONT_RESULTS
    static final int RESULT_CODE_PROVIDER_NOT_FOUND
    static final int RESULT_CODE_WRONG_CERTIFICATES
    private static final int BACKGROUND_THREAD_KEEP_ALIVE_DURATION_MS
androidx.core.content.FileProvider$SimplePathStrategy
kotlinx.coroutines.SelectJoinOnCompletion
kotlin.collections.MapAccessorsKt
androidx.navigation.fragment.R$layout
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$3
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior:
    public void setAutoHideEnabled(boolean)
    public boolean isAutoHideEnabled()
    public void setAutoShrinkEnabled(boolean)
    public boolean isAutoShrinkEnabled()
    void setInternalAutoHideCallback(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback)
    void setInternalAutoShrinkCallback(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback)
    private static final boolean AUTO_HIDE_DEFAULT
    private static final boolean AUTO_SHRINK_DEFAULT
androidx.media.VolumeProviderCompat
kotlinx.coroutines.ChildJob
androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState
androidx.core.app.AppOpsManagerCompat:
    private void <init>()
    public static int noteOp(android.content.Context,java.lang.String,int,java.lang.String)
    public static int noteOpNoThrow(android.content.Context,java.lang.String,int,java.lang.String)
    public static int noteProxyOp(android.content.Context,java.lang.String,java.lang.String)
    public static final int MODE_ALLOWED
    public static final int MODE_IGNORED
    public static final int MODE_ERRORED
    public static final int MODE_DEFAULT
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$maxWith$1
kotlinx.coroutines.CoroutinesInternalError
androidx.core.view.ViewKt$doOnPreDraw$1
androidx.recyclerview.widget.LinearLayoutManager:
    public void <init>(android.content.Context)
    private void logChildren()
    public boolean getRecycleChildrenOnDetach()
    public void setRecycleChildrenOnDetach(boolean)
    public boolean getStackFromEnd()
    public boolean getReverseLayout()
    public void scrollToPositionWithOffset(int,int)
    public void setSmoothScrollbarEnabled(boolean)
    public void setInitialPrefetchItemCount(int)
    public int getInitialPrefetchItemCount()
    public int findFirstCompletelyVisibleItemPosition()
    public int findLastCompletelyVisibleItemPosition()
    void validateChildOrder()
    public void prepareForDrop(android.view.View,android.view.View,int,int)
    private static final java.lang.String TAG
    static final boolean DEBUG
    public static final int HORIZONTAL
    public static final int VERTICAL
    public static final int INVALID_OFFSET
    private static final float MAX_SCROLL_FACTOR
androidx.core.app.Person$Builder
androidx.core.util.SparseBooleanArrayKt$keyIterator$1
kotlinx.coroutines.intrinsics.CancellableKt
androidx.core.os.ParcelableCompat$ParcelableCompatCreatorHoneycombMR2
androidx.navigation.ActivityNavigator$Destination:
    public void <init>(androidx.navigation.NavigatorProvider)
    public final androidx.navigation.ActivityNavigator$Destination setIntent(android.content.Intent)
    public final java.lang.String getTargetPackage()
    public final android.net.Uri getData()
kotlinx.coroutines.internal.SystemPropsKt__SystemPropsKt
kotlinx.coroutines.flow.FlowKt__MigrationKt$combineLatest$$inlined$combine$1
kotlin.sequences.SequencesKt__SequencesKt$asSequence$$inlined$Sequence$1
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat:
    private void printGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,int)
    public float getPixelSize()
    static final java.lang.String LOGTAG
    private static final java.lang.String SHAPE_CLIP_PATH
    private static final java.lang.String SHAPE_GROUP
    private static final java.lang.String SHAPE_PATH
    private static final java.lang.String SHAPE_VECTOR
    private static final int LINECAP_BUTT
    private static final int LINECAP_ROUND
    private static final int LINECAP_SQUARE
    private static final int LINEJOIN_MITER
    private static final int LINEJOIN_ROUND
    private static final int LINEJOIN_BEVEL
    private static final int MAX_CACHED_BITMAP_SIZE
    private static final boolean DBG_VECTOR_DRAWABLE
kotlin.io.FilesKt__UtilsKt
androidx.core.text.util.FindAddress$ZipRange
kotlin.reflect.KVariance
kotlin.sequences.SequencesKt__SequencesKt$Sequence$1
kotlin.ranges.RangesKt__RangesJVMKt:
    public static final kotlin.ranges.ClosedFloatingPointRange rangeTo(float,float)
    public void <init>()
androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup:
    public abstract int getHorizontalOriginalOffset()
androidx.collection.SparseArrayKt
androidx.viewpager2.widget.ViewPager2$SmoothScrollToPosition
kotlin.sequences.SequencesKt___SequencesKt$minus$1
androidx.media.MediaBrowserServiceCompatApi26
kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1
android.support.v4.media.session.MediaSessionCompatApi22
com.google.android.material.button.MaterialButton:
    public void addOnCheckedChangeListener(com.google.android.material.button.MaterialButton$OnCheckedChangeListener)
    public void removeOnCheckedChangeListener(com.google.android.material.button.MaterialButton$OnCheckedChangeListener)
    public void clearOnCheckedChangeListeners()
    public static final int ICON_GRAVITY_START
    public static final int ICON_GRAVITY_TEXT_START
    public static final int ICON_GRAVITY_END
    public static final int ICON_GRAVITY_TEXT_END
    private static final java.lang.String LOG_TAG
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt
androidx.appcompat.app.ToolbarActionBar$2
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransform$3$2
androidx.transition.Explode
kotlin.internal.UProgressionUtilKt
androidx.transition.Visibility:
    public void <init>(android.content.Context,android.util.AttributeSet)
    public int getMode()
    public boolean isVisible(androidx.transition.TransitionValues)
    static final java.lang.String PROPNAME_VISIBILITY
    private static final java.lang.String PROPNAME_PARENT
    private static final java.lang.String PROPNAME_SCREEN_LOCATION
    public static final int MODE_IN
    public static final int MODE_OUT
kotlin.UninitializedPropertyAccessException:
    public void <init>(java.lang.String,java.lang.Throwable)
    public void <init>(java.lang.Throwable)
kotlinx.coroutines.flow.FlowKt__MigrationKt$combine$$inlined$unsafeFlow$1$lambda$1
com.google.android.material.tabs.TabItem
kotlin.text.StringsKt__IndentKt$getIndentFunction$2
kotlin.reflect.KProperty0
androidx.swiperefreshlayout.widget.SwipeRefreshLayout
kotlin.sequences.SequencesKt___SequencesKt$sortedWith$1
kotlin.ExperimentalMultiplatform
androidx.constraintlayout.solver.LinearSystem$Row:
    public abstract boolean isEmpty()
kotlinx.coroutines.flow.FlowKt__TransformKt$unsafeTransform$$inlined$unsafeFlow$4$lambda$1$1
androidx.recyclerview.widget.RecyclerView$Orientation
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$groupBy$2
kotlinx.coroutines.scheduling.CoroutineScheduler
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior:
    public synthetic bridge boolean isHorizontalOffsetEnabled()
    public synthetic bridge void setHorizontalOffsetEnabled(boolean)
    public synthetic bridge boolean isVerticalOffsetEnabled()
    public synthetic bridge void setVerticalOffsetEnabled(boolean)
    public synthetic bridge int getLeftAndRightOffset()
    public synthetic bridge boolean setLeftAndRightOffset(int)
kotlinx.coroutines.channels.ActorScope$DefaultImpls
androidx.core.app.NotificationCompat$MessagingStyle$Message
androidx.transition.SidePropagation
kotlinx.coroutines.flow.internal.FlowCoroutineKt
androidx.transition.MatrixUtils$1
androidx.appcompat.widget.Toolbar$SavedState:
    public void <init>(android.os.Parcel)
androidx.media.MediaBrowserServiceCompat
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2$1
com.google.android.material.shape.MaterialShapeDrawable:
    public static com.google.android.material.shape.MaterialShapeDrawable createWithElevationOverlay(android.content.Context)
    public void <init>(com.google.android.material.shape.ShapePathModel)
    public void setShapedViewModel(com.google.android.material.shape.ShapePathModel)
    public com.google.android.material.shape.ShapePathModel getShapedViewModel()
    public android.content.res.ColorStateList getStrokeColor()
    public android.content.res.ColorStateList getStrokeTintList()
    public void setStrokeTint(android.content.res.ColorStateList)
    public void setStrokeTint(int)
    public float getStrokeWidth()
    public void setCornerSize(float)
    public void setCornerSize(com.google.android.material.shape.CornerSize)
    public boolean isPointInTransparentRegion(int,int)
    public int getShadowCompatibilityMode()
    public boolean isShadowEnabled()
    public void setShadowEnabled(boolean)
    public boolean isElevationOverlayInitialized()
    public float getInterpolation()
    public void setTranslationZ(float)
    public void setZ(float)
    public int getShadowElevation()
    public void setShadowElevation(int)
    public int getShadowVerticalOffset()
    public void setShadowVerticalOffset(int)
    public int getShadowCompatRotation()
    public void setShadowRadius(int)
    public float getScale()
    public void setScale(float)
    public void setUseTintColorForShadow(boolean)
    public android.graphics.Paint$Style getPaintStyle()
    public void getPathForSize(int,int,android.graphics.Path)
    private static final float SHADOW_RADIUS_MULTIPLIER
    private static final float SHADOW_OFFSET_MULTIPLIER
    public static final int SHADOW_COMPAT_MODE_DEFAULT
    public static final int SHADOW_COMPAT_MODE_NEVER
    public static final int SHADOW_COMPAT_MODE_ALWAYS
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$1
androidx.recyclerview.widget.RecyclerView$ItemAnimator:
    public void setMoveDuration(long)
    public void setAddDuration(long)
    public void setRemoveDuration(long)
    public void setChangeDuration(long)
    public final void dispatchAnimationStarted(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public void onAnimationStarted(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public final boolean isRunning(androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener)
    public static final int FLAG_CHANGED
    public static final int FLAG_REMOVED
    public static final int FLAG_INVALIDATED
    public static final int FLAG_MOVED
    public static final int FLAG_APPEARED_IN_PRE_LAYOUT
kotlin.time.ClockKt
com.google.android.material.tabs.TabLayoutMediator$ViewPagerOnTabSelectedListener
androidx.recyclerview.widget.ItemTouchHelper$Callback$2
androidx.navigation.NavArgs
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$5
androidx.constraintlayout.solver.widgets.Chain:
    void <init>()
    private static final boolean DEBUG
androidx.navigation.common.R$drawable
androidx.core.internal.view.SupportMenu:
    public abstract void setGroupDividerEnabled(boolean)
    public static final int USER_MASK
    public static final int USER_SHIFT
    public static final int CATEGORY_MASK
    public static final int CATEGORY_SHIFT
    public static final int SUPPORTED_MODIFIERS_MASK
    public static final int FLAG_KEEP_OPEN_ON_SUBMENU_OPENED
com.google.android.material.button.MaterialButtonToggleGroup
com.google.android.material.internal.ParcelableSparseArray
androidx.core.util.LruCacheKt$lruCache$3
androidx.databinding.adapters.CalendarViewBindingAdapter$1
com.google.android.material.textfield.TextInputLayout:
    public void setBoxCornerRadiiResources(int,int,int,int)
    public void setBoxCornerRadii(float,float,float,float)
    public boolean isHintEnabled()
    public boolean isErrorEnabled()
    public boolean isCounterEnabled()
    public boolean isHintAnimationEnabled()
    public boolean isStartIconCheckable()
    public boolean isEndIconCheckable()
    public void removeOnEndIconChangedListener(com.google.android.material.textfield.TextInputLayout$OnEndIconChangedListener)
    public void clearOnEndIconChangedListeners()
    public void removeOnEditTextAttachedListener(com.google.android.material.textfield.TextInputLayout$OnEditTextAttachedListener)
    public void clearOnEditTextAttachedListeners()
    public boolean isPasswordVisibilityToggleEnabled()
    public void passwordVisibilityToggleRequested(boolean)
    boolean cutoutIsOpen()
    final boolean isHintExpanded()
    final boolean isHelperTextDisplayed()
    private static final int LABEL_SCALE_ANIMATION_DURATION
    private static final int INVALID_MAX_LENGTH
    private static final java.lang.String LOG_TAG
    public static final int BOX_BACKGROUND_NONE
    public static final int BOX_BACKGROUND_FILLED
    public static final int BOX_BACKGROUND_OUTLINE
    public static final int END_ICON_CUSTOM
    public static final int END_ICON_NONE
    public static final int END_ICON_PASSWORD_TOGGLE
    public static final int END_ICON_CLEAR_TEXT
    public static final int END_ICON_DROPDOWN_MENU
kotlinx.coroutines.flow.FlowKt__TransformKt$unsafeTransform$$inlined$unsafeFlow$4$1
kotlin.io.ConsoleKt$decoder$2
com.google.android.material.datepicker.DateValidatorPointForward:
    public static com.google.android.material.datepicker.DateValidatorPointForward now()
androidx.core.view.LayoutInflaterFactory
kotlin.ExtensionFunctionType
kotlin.Pair:
    public static synthetic kotlin.Pair copy$default(kotlin.Pair,java.lang.Object,java.lang.Object,int,java.lang.Object)
    public final java.lang.Object component1()
    public final java.lang.Object component2()
    public final kotlin.Pair copy(java.lang.Object,java.lang.Object)
androidx.fragment.app.FragmentViewModelLazyKt$viewModels$1
androidx.navigation.fragment.FragmentNavigatorDestinationBuilder
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup:
    public void setSpanIndexCacheEnabled(boolean)
    public void setSpanGroupIndexCacheEnabled(boolean)
    public boolean isSpanIndexCacheEnabled()
    public boolean isSpanGroupIndexCacheEnabled()
kotlin.sequences.FlatteningSequence$iterator$1
kotlinx.coroutines.CancelFutureOnCancel
androidx.core.util.SparseLongArrayKt
kotlinx.coroutines.ThreadContextElement
kotlin.collections.ArraysKt___ArraysJvmKt$asList$3
kotlin.NumbersKt__BigIntegersKt
kotlin.text.StringsKt__IndentKt$prependIndent$1
kotlinx.coroutines.flow.FlowKt__TransformKt$scanReduce$$inlined$unsafeFlow$1$lambda$1$1
android.support.v4.media.session.PlaybackStateCompat$MediaKeyAction
androidx.recyclerview.widget.FastScroller:
    public boolean isDragging()
    boolean isVisible()
    android.graphics.drawable.Drawable getHorizontalTrackDrawable()
    android.graphics.drawable.Drawable getHorizontalThumbDrawable()
    android.graphics.drawable.Drawable getVerticalTrackDrawable()
    android.graphics.drawable.Drawable getVerticalThumbDrawable()
    private static final int STATE_HIDDEN
    private static final int STATE_VISIBLE
    private static final int STATE_DRAGGING
    private static final int DRAG_NONE
    private static final int DRAG_X
    private static final int DRAG_Y
    private static final int ANIMATION_STATE_OUT
    private static final int ANIMATION_STATE_FADING_IN
    private static final int ANIMATION_STATE_IN
    private static final int ANIMATION_STATE_FADING_OUT
    private static final int SHOW_DURATION_MS
    private static final int HIDE_DELAY_AFTER_VISIBLE_MS
    private static final int HIDE_DELAY_AFTER_DRAGGING_MS
    private static final int HIDE_DURATION_MS
    private static final int SCROLLBAR_FULL_OPAQUE
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenBy$1
androidx.databinding.adapters.TextViewBindingAdapter$AfterTextChanged
androidx.navigation.ui.ToolbarOnDestinationChangedListener
androidx.core.R$drawable
kotlinx.coroutines.scheduling.GlobalQueue
androidx.print.PrintHelper$1
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplBase$1
kotlin.SuspendKt
androidx.core.view.InputDeviceCompat
androidx.viewpager.widget.ViewPager$SimpleOnPageChangeListener
kotlin.jvm.functions.Function9
kotlinx.coroutines.scheduling.TaskContext
androidx.navigation.common.R$string
androidx.print.PrintHelper$PrintUriAdapter
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat
com.google.android.material.bottomnavigation.BottomNavigationItemView
androidx.transition.TranslationAnimationCreator$TransitionPositionListener
kotlinx.coroutines.selects.WhileSelectKt$whileSelect$1
com.czluciusdev.diceroller.DiceViewModel:
    public final void setDiceCollection(java.util.Collection)
androidx.core.provider.FontRequest:
    public void <init>(java.lang.String,java.lang.String,java.lang.String,int)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$1
androidx.media.MediaSessionManager$RemoteUserInfo
androidx.core.graphics.TypefaceCompatApi28Impl:
    private static final java.lang.String CREATE_FROM_FAMILIES_WITH_DEFAULT_METHOD
    private static final int RESOLVE_BY_FONT_TABLE
    private static final java.lang.String DEFAULT_FAMILY
kotlinx.coroutines.internal.LockFreeLinkedListNode$makeCondAddOp$1
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span:
    public int findFirstVisibleItemPosition()
    public int findFirstCompletelyVisibleItemPosition()
    public int findLastVisibleItemPosition()
    public int findLastCompletelyVisibleItemPosition()
    int findOneVisibleChild(int,int,boolean)
    static final int INVALID_LINE
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler
android.support.v4.media.MediaBrowserCompat$ItemCallback:
    public void <init>()
    final java.lang.Object mItemCallbackObj
kotlinx.coroutines.selects.WhileSelectKt
kotlin.math.MathKt
androidx.core.content.pm.PermissionInfoCompat$ProtectionFlags
kotlinx.coroutines.internal.MissingMainCoroutineDispatcherFactory
kotlinx.coroutines.internal.Segment
kotlinx.coroutines.flow.ConsumeAsFlow
kotlinx.coroutines.flow.FlowKt__MigrationKt$combineLatest$$inlined$combine$2
androidx.loader.app.LoaderManagerImpl$LoaderInfo:
    void <init>(int,android.os.Bundle,androidx.loader.content.Loader,androidx.loader.content.Loader)
    androidx.loader.content.Loader setCallback(androidx.lifecycle.LifecycleOwner,androidx.loader.app.LoaderManager$LoaderCallbacks)
    boolean isCallbackWaitingForData()
    public void onLoadComplete(androidx.loader.content.Loader,java.lang.Object)
androidx.core.provider.FontsContractCompat$FontRequestCallback$FontRequestFailReason
kotlinx.coroutines.AwaitKt$joinAll$1
kotlinx.coroutines.scheduling.NonBlockingContext
kotlinx.coroutines.flow.FlowKt__DistinctKt$distinctUntilChangedBy$$inlined$distinctUntilChangedBy$FlowKt__DistinctKt$1$2
kotlin.internal.LowPriorityInOverloadResolution
androidx.recyclerview.widget.ItemTouchHelper$5
kotlin.ExceptionsKt
androidx.core.net.ConnectivityManagerCompat$RestrictBackgroundStatus
kotlin.time.DurationUnitKt
androidx.localbroadcastmanager.R
com.google.android.material.R$integer:
    private void <init>()
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB:
    public void refreshVisibility()
androidx.databinding.library.baseAdapters.DataBinderMapperImpl$InnerLayoutIdLookup
androidx.versionedparcelable.VersionedParcelize
com.google.android.material.shape.CornerFamily
kotlin.ranges.ClosedRange
androidx.recyclerview.widget.ChildHelper:
    private static final boolean DEBUG
    private static final java.lang.String TAG
android.support.v4.media.session.PlaybackStateCompatApi21$CustomAction:
    public static java.lang.Object newInstance(java.lang.String,java.lang.CharSequence,int,android.os.Bundle)
    private void <init>()
kotlin.sequences.TransformingSequence
androidx.recyclerview.widget.ThreadUtil$MainThreadCallback
android.support.v4.media.MediaBrowserCompatApi26$SubscriptionCallback
androidx.core.os.HandlerKt$postDelayed$runnable$1
androidx.databinding.adapters.SeekBarBindingAdapter$1
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator:
    void <init>(androidx.core.graphics.PathParser$PathDataNode[])
com.google.android.material.shape.ShapePath$PathQuadOperation
kotlinx.coroutines.flow.FlowKt__TransformKt$scan$$inlined$unsafeFlow$1$1
androidx.lifecycle.ViewModelProvider$NewInstanceFactory:
    static androidx.lifecycle.ViewModelProvider$NewInstanceFactory getInstance()
    private static androidx.lifecycle.ViewModelProvider$NewInstanceFactory sInstance
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams:
    public void <init>(androidx.constraintlayout.widget.ConstraintLayout$LayoutParams)
    public void reset()
    public static final int MATCH_CONSTRAINT
    public static final int PARENT_ID
    public static final int UNSET
    public static final int HORIZONTAL
    public static final int VERTICAL
    public static final int LEFT
    public static final int RIGHT
    public static final int TOP
    public static final int BOTTOM
    public static final int BASELINE
    public static final int START
    public static final int END
    public static final int MATCH_CONSTRAINT_WRAP
    public static final int MATCH_CONSTRAINT_SPREAD
    public static final int MATCH_CONSTRAINT_PERCENT
    public static final int CHAIN_SPREAD
    public static final int CHAIN_SPREAD_INSIDE
    public static final int CHAIN_PACKED
androidx.viewpager2.widget.ViewPager2$3
androidx.navigation.ui.ktx.R$layout
androidx.databinding.adapters.CompoundButtonBindingAdapter
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$count$3
kotlin.jvm.internal.markers.KMutableIterable
androidx.lifecycle.ViewModelProvider:
    public void <init>(androidx.lifecycle.ViewModelStoreOwner)
    public void <init>(androidx.lifecycle.ViewModelStoreOwner,androidx.lifecycle.ViewModelProvider$Factory)
    private static final java.lang.String DEFAULT_KEY
androidx.navigation.ui.NavigationUI$1
androidx.core.transition.TransitionKt$addListener$4
androidx.legacy.app.ActionBarDrawerToggle$DelegateProvider
kotlinx.coroutines.selects.SelectClause2
androidx.databinding.adapters.AbsSeekBarBindingAdapter
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$2
androidx.loader.app.LoaderManagerImpl:
    private androidx.loader.content.Loader createAndInstallLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks,androidx.loader.content.Loader)
    public androidx.loader.content.Loader initLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks)
    public androidx.loader.content.Loader restartLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks)
    public void destroyLoader(int)
    public androidx.loader.content.Loader getLoader(int)
    public boolean hasRunningLoaders()
    static final java.lang.String TAG
kotlinx.coroutines.flow.FlowKt__TransformKt$unsafeTransform$$inlined$unsafeFlow$1$lambda$1$1
androidx.loader.app.LoaderManager:
    public static void enableDebugLogging(boolean)
    public abstract androidx.loader.content.Loader initLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks)
    public abstract androidx.loader.content.Loader restartLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks)
    public abstract void destroyLoader(int)
    public abstract androidx.loader.content.Loader getLoader(int)
    public boolean hasRunningLoaders()
kotlin.text.CharDirectionality$Companion$directionalityMap$2
androidx.navigation.R
com.google.android.material.shape.TriangleEdgeTreatment
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl:
    public void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
    public boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder)
    public void onCloseSubMenu(androidx.appcompat.view.menu.SubMenuBuilder)
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1
androidx.loader.R$integer
androidx.core.graphics.TypefaceCompatApi26Impl:
    private static final java.lang.String TAG
    private static final java.lang.String FONT_FAMILY_CLASS
    private static final java.lang.String ADD_FONT_FROM_ASSET_MANAGER_METHOD
    private static final java.lang.String ADD_FONT_FROM_BUFFER_METHOD
    private static final java.lang.String CREATE_FROM_FAMILIES_WITH_DEFAULT_METHOD
    private static final java.lang.String FREEZE_METHOD
    private static final java.lang.String ABORT_CREATION_METHOD
    private static final int RESOLVE_BY_FONT_TABLE
androidx.core.view.DragStartHelper$2
kotlin.collections.CollectionsKt__IteratorsKt
androidx.navigation.common.R$id
androidx.recyclerview.widget.OrientationHelper$1:
    public void offsetChild(android.view.View,int)
androidx.fragment.ktx.R$dimen
kotlinx.coroutines.internal.FastServiceLoader
kotlin.UByteArray$Iterator
androidx.databinding.adapters.AutoCompleteTextViewBindingAdapter$1
kotlin.sequences.SequencesKt___SequencesKt$requireNoNulls$1
kotlin.comparisons.ComparisonsKt__ComparisonsKt$nullsFirst$1
org.intellij.lang.annotations.JdkConstants$CursorType
kotlinx.coroutines.sync.Mutex$DefaultImpls
kotlinx.coroutines.channels.ArrayBroadcastChannel$Subscriber
androidx.annotation.RequiresPermission$Write
androidx.core.graphics.drawable.IconCompat:
    public static androidx.core.graphics.drawable.IconCompat createWithResource(android.content.Context,int)
    public static androidx.core.graphics.drawable.IconCompat createWithResource(android.content.res.Resources,java.lang.String,int)
    public static androidx.core.graphics.drawable.IconCompat createWithBitmap(android.graphics.Bitmap)
    public static androidx.core.graphics.drawable.IconCompat createWithAdaptiveBitmap(android.graphics.Bitmap)
    public static androidx.core.graphics.drawable.IconCompat createWithData(byte[],int,int)
    public static androidx.core.graphics.drawable.IconCompat createWithContentUri(java.lang.String)
    public static androidx.core.graphics.drawable.IconCompat createWithContentUri(android.net.Uri)
    private void <init>(int)
    private android.graphics.drawable.Drawable loadDrawableInner(android.content.Context)
    private static android.content.res.Resources getResources(android.content.Context,java.lang.String)
    public static androidx.core.graphics.drawable.IconCompat createFromBundle(android.os.Bundle)
    public static androidx.core.graphics.drawable.IconCompat createFromIcon(android.content.Context,android.graphics.drawable.Icon)
    public static androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)
    public static androidx.core.graphics.drawable.IconCompat createFromIconOrNullIfZeroResId(android.graphics.drawable.Icon)
    private static int getType(android.graphics.drawable.Icon)
    private static android.net.Uri getUri(android.graphics.drawable.Icon)
    static android.graphics.Bitmap createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap,boolean)
    public int getType()
    public android.graphics.Bitmap getBitmap()
    public android.net.Uri getUri()
    public androidx.core.graphics.drawable.IconCompat setTint(int)
    public androidx.core.graphics.drawable.IconCompat setTintList(android.content.res.ColorStateList)
    public androidx.core.graphics.drawable.IconCompat setTintMode(android.graphics.PorterDuff$Mode)
    public android.graphics.drawable.Icon toIcon()
    public void checkResource(android.content.Context)
    public android.graphics.drawable.Drawable loadDrawable(android.content.Context)
    public void addToShortcutIntent(android.content.Intent,android.graphics.drawable.Drawable,android.content.Context)
    public android.os.Bundle toBundle()
    private static final java.lang.String TAG
    public static final int TYPE_UNKNOWN
    private static final float ADAPTIVE_ICON_INSET_FACTOR
    private static final float DEFAULT_VIEW_PORT_SCALE
    private static final float ICON_DIAMETER_FACTOR
    private static final float BLUR_FACTOR
    private static final float KEY_SHADOW_OFFSET_FACTOR
    private static final int KEY_SHADOW_ALPHA
    private static final int AMBIENT_SHADOW_ALPHA
    private static final java.lang.String EXTRA_TYPE
    private static final java.lang.String EXTRA_OBJ
    private static final java.lang.String EXTRA_INT1
    private static final java.lang.String EXTRA_INT2
    private static final java.lang.String EXTRA_TINT_LIST
    private static final java.lang.String EXTRA_TINT_MODE
androidx.legacy.v4.R$drawable
com.google.android.material.bottomnavigation.BottomNavigationMenu
androidx.core.content.res.GradientColorInflaterCompat:
    private void <init>()
    static android.graphics.Shader createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)
    private static final int TILE_MODE_CLAMP
    private static final int TILE_MODE_REPEAT
    private static final int TILE_MODE_MIRROR
androidx.constraintlayout.widget.Group
com.google.android.material.shadow.ShadowDrawableWrapper
androidx.viewpager2.widget.ScrollEventAdapter
kotlin.coroutines.jvm.internal.BaseContinuationImpl
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$5$1
kotlin.sequences.MergingSequence
kotlin.internal.ContractsDsl
androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments:
    public int getGranularity()
    public boolean getExtendSelection()
androidx.databinding.adapters.AdapterViewBindingAdapter
android.support.v4.media.MediaBrowserCompat$MediaBrowserServiceCallbackImpl
androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener
kotlin.sequences.TakeSequence$iterator$1
androidx.customview.view.AbsSavedState:
    protected void <init>(android.os.Parcel)
androidx.print.R
kotlin.io.FilesKt__FileTreeWalkKt
kotlin.sequences.DropSequence$iterator$1
com.czluciusdev.diceroller.DataBinderMapperImpl:
    public int getLayoutId(java.lang.String)
    public java.lang.String convertBrIdToString(int)
    private static final int LAYOUT_DICEFRAGMENT
com.google.android.material.button.MaterialButton$IconGravity
kotlinx.coroutines.selects.SelectBuilderImpl$onTimeout$$inlined$Runnable$1
androidx.transition.Slide$6
kotlinx.coroutines.flow.FlowKt__DistinctKt$distinctUntilChangedBy$$inlined$unsafeFlow$3$lambda$1
androidx.appcompat.app.AppCompatDelegate$NightMode
androidx.core.os.LocaleListPlatformWrapper
kotlinx.coroutines.flow.FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1
androidx.navigation.fragment.R$attr
androidx.cursoradapter.widget.SimpleCursorAdapter
kotlin.io.FileTreeWalk$DirectoryState
android.support.v4.media.MediaBrowserCompatApi21$SubscriptionCallbackProxy
androidx.core.internal.view.SupportMenuItem:
    public abstract boolean requiresActionButton()
    public abstract boolean requiresOverflow()
    public static final int SHOW_AS_ACTION_NEVER
    public static final int SHOW_AS_ACTION_IF_ROOM
    public static final int SHOW_AS_ACTION_ALWAYS
    public static final int SHOW_AS_ACTION_WITH_TEXT
    public static final int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$4
kotlin.text.ScreenFloatValueRegEx
androidx.customview.R$layout
kotlin.coroutines.CombinedContext$Serialized$Companion
androidx.databinding.adapters.ViewBindingAdapter
kotlinx.coroutines.IncompleteStateBox
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$6
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$last$3
androidx.asynclayoutinflater.R$styleable
com.google.android.material.snackbar.BaseTransientBottomBar$9
com.google.android.material.tabs.TabLayout$OnTabSelectedListener
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase
androidx.appcompat.view.menu.MenuItemImpl:
    java.lang.Runnable getCallback()
    public android.view.MenuItem setCallback(java.lang.Runnable)
    public boolean requiresOverflow()
    private static final java.lang.String TAG
    private static final int SHOW_AS_ACTION_MASK
    private static final int CHECKABLE
    private static final int CHECKED
    private static final int EXCLUSIVE
    private static final int HIDDEN
    private static final int ENABLED
    private static final int IS_ACTION
    static final int NO_ICON
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumesAll$1
kotlin.coroutines.RestrictsSuspension
kotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnchecked$$inlined$buildContinuationByInvokeCall$IntrinsicsKt__IntrinsicsJvmKt$2
com.google.android.material.tabs.TabLayoutMediator$TabConfigurationStrategy
androidx.core.graphics.RegionKt$iterator$1
androidx.transition.GhostViewHolder
androidx.recyclerview.widget.SortedList$Callback
androidx.fragment.app.FragmentManager$BackStackEntry
androidx.drawerlayout.R
androidx.vectordrawable.R$drawable
androidx.core.view.DragStartHelper
androidx.navigation.fragment.ktx.R$attr
kotlinx.coroutines.CoroutineName$Key
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$5
androidx.swiperefreshlayout.R
kotlinx.coroutines.internal.OpDescriptor
kotlinx.coroutines.flow.FlowKt__MigrationKt$combine$$inlined$combine$1$1
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$1
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi23
androidx.versionedparcelable.VersionedParcel:
    private void writeCollection(java.util.Collection,int)
    private void writeCollection(java.util.Collection)
    private int getType(java.lang.Object)
    private void writeSerializable(java.io.Serializable)
    private int readExceptionCode()
    private java.lang.Exception readException(int,java.lang.String)
    protected static java.lang.Throwable getRootCause(java.lang.Throwable)
    private java.lang.Exception createException(int,java.lang.String)
    private java.util.Collection readCollection(java.util.Collection)
    protected abstract void writeByteArray(byte[],int,int)
    protected abstract void writeLong(long)
    protected abstract void writeFloat(float)
    protected abstract void writeDouble(double)
    protected abstract void writeStrongBinder(android.os.IBinder)
    protected abstract void writeStrongInterface(android.os.IInterface)
    protected abstract void writeBundle(android.os.Bundle)
    protected abstract long readLong()
    protected abstract float readFloat()
    protected abstract double readDouble()
    protected abstract android.os.IBinder readStrongBinder()
    protected abstract android.os.Bundle readBundle()
    public void writeStrongInterface(android.os.IInterface,int)
    public void writeBundle(android.os.Bundle,int)
    public void writeByteArray(byte[],int,int,int)
    public void writeLong(long,int)
    public void writeFloat(float,int)
    public void writeDouble(double,int)
    public void writeStrongBinder(android.os.IBinder,int)
    public long readLong(long,int)
    public float readFloat(float,int)
    public double readDouble(double,int)
    public android.os.IBinder readStrongBinder(android.os.IBinder,int)
    public android.os.Bundle readBundle(android.os.Bundle,int)
    public void writeByte(byte,int)
    public void writeSize(android.util.Size,int)
    public void writeSizeF(android.util.SizeF,int)
    public void writeSparseBooleanArray(android.util.SparseBooleanArray,int)
    public void writeBooleanArray(boolean[],int)
    protected void writeBooleanArray(boolean[])
    public boolean[] readBooleanArray(boolean[],int)
    protected boolean[] readBooleanArray()
    public void writeCharArray(char[],int)
    public char[] readCharArray(char[],int)
    public void writeIntArray(int[],int)
    protected void writeIntArray(int[])
    public int[] readIntArray(int[],int)
    protected int[] readIntArray()
    public void writeLongArray(long[],int)
    protected void writeLongArray(long[])
    public long[] readLongArray(long[],int)
    protected long[] readLongArray()
    public void writeFloatArray(float[],int)
    protected void writeFloatArray(float[])
    public float[] readFloatArray(float[],int)
    protected float[] readFloatArray()
    public void writeDoubleArray(double[],int)
    protected void writeDoubleArray(double[])
    public double[] readDoubleArray(double[],int)
    protected double[] readDoubleArray()
    public void writeSet(java.util.Set,int)
    public void writeList(java.util.List,int)
    public void writeMap(java.util.Map,int)
    public void writeArray(java.lang.Object[],int)
    protected void writeArray(java.lang.Object[])
    public void writeSerializable(java.io.Serializable,int)
    public void writeException(java.lang.Exception,int)
    protected void writeNoException()
    public java.lang.Exception readException(java.lang.Exception,int)
    public byte readByte(byte,int)
    public android.util.Size readSize(android.util.Size,int)
    public android.util.SizeF readSizeF(android.util.SizeF,int)
    public android.util.SparseBooleanArray readSparseBooleanArray(android.util.SparseBooleanArray,int)
    public java.util.Set readSet(java.util.Set,int)
    public java.util.List readList(java.util.List,int)
    public java.util.Map readMap(java.util.Map,int)
    public java.lang.Object[] readArray(java.lang.Object[],int)
    protected java.lang.Object[] readArray(java.lang.Object[])
    protected java.io.Serializable readSerializable()
    private static final java.lang.String TAG
    private static final int EX_SECURITY
    private static final int EX_BAD_PARCELABLE
    private static final int EX_ILLEGAL_ARGUMENT
    private static final int EX_NULL_POINTER
    private static final int EX_ILLEGAL_STATE
    private static final int EX_NETWORK_MAIN_THREAD
    private static final int EX_UNSUPPORTED_OPERATION
    private static final int EX_PARCELABLE
    private static final int TYPE_VERSIONED_PARCELABLE
    private static final int TYPE_PARCELABLE
    private static final int TYPE_SERIALIZABLE
    private static final int TYPE_STRING
    private static final int TYPE_BINDER
    private static final int TYPE_INTEGER
    private static final int TYPE_FLOAT
androidx.transition.ChangeTransform$1
androidx.core.text.TextDirectionHeuristicCompat:
    public abstract boolean isRtl(char[],int,int)
kotlinx.coroutines.flow.FlowKt__MergeKt$map$$inlined$unsafeTransform$2$1
androidx.media.MediaBrowserServiceCompat$BrowserRoot
androidx.core.app.SharedElementCallback:
    public void <init>()
    private static android.graphics.Bitmap createDrawableBitmap(android.graphics.drawable.Drawable)
    public void onRejectSharedElements(java.util.List)
    public android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)
    public android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable)
    public void onSharedElementsArrived(java.util.List,java.util.List,androidx.core.app.SharedElementCallback$OnSharedElementsReadyListener)
    private android.graphics.Matrix mTempMatrix
    private static final int MAX_IMAGE_SIZE
    private static final java.lang.String BUNDLE_SNAPSHOT_BITMAP
    private static final java.lang.String BUNDLE_SNAPSHOT_IMAGE_SCALETYPE
    private static final java.lang.String BUNDLE_SNAPSHOT_IMAGE_MATRIX
androidx.core.graphics.drawable.IconCompat$IconType
kotlinx.coroutines.channels.TickerMode
androidx.navigation.ktx.R
androidx.databinding.BindingMethods
androidx.core.transition.TransitionKt$doOnCancel$$inlined$addListener$1
kotlin.io.AccessDeniedException
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$4$lambda$2
androidx.recyclerview.widget.SortedListAdapterCallback
com.czluciusdev.diceroller.MainActivity:
    public android.view.View _$_findCachedViewById(int)
    public void _$_clearFindViewByIdCache()
    private java.util.HashMap _$_findViewCache
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$first$3
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1
androidx.transition.Styleable$ArcMotion
androidx.swiperefreshlayout.R$id
androidx.activity.ktx.R$attr
kotlinx.coroutines.channels.AbstractChannel$onReceiveOrClosed$1
kotlin.collections.EmptySet
android.support.v4.media.MediaMetadataCompatApi21:
    public static java.util.Set keySet(java.lang.Object)
    public static android.graphics.Bitmap getBitmap(java.lang.Object,java.lang.String)
    public static long getLong(java.lang.Object,java.lang.String)
    public static java.lang.Object getRating(java.lang.Object,java.lang.String)
    public static java.lang.CharSequence getText(java.lang.Object,java.lang.String)
    public static java.lang.Object createFromParcel(android.os.Parcel)
    private void <init>()
androidx.viewpager2.widget.ViewPager2$ScrollState
com.google.android.material.shape.AbsoluteCornerSize:
    public float getCornerSize()
kotlinx.coroutines.internal.ExceptionsConstuctorKt$safeCtor$1
androidx.transition.ViewUtilsApi21:
    public void setAnimationMatrix(android.view.View,android.graphics.Matrix)
kotlin.jvm.internal.ArrayLongIterator
androidx.transition.R$drawable
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$find$1
androidx.databinding.library.baseAdapters.R$styleable
androidx.transition.Styleable$ChangeTransform
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$indexOf$1
com.google.android.material.snackbar.Snackbar
kotlin.UByte$Companion
com.google.android.material.R$color:
    private void <init>()
kotlin.sequences.TransformingIndexedSequence
androidx.databinding.InverseBindingAdapter
androidx.core.util.LruCacheKt
androidx.navigation.ktx.R$integer
androidx.navigation.NavGraphKt
androidx.core.view.PointerIconCompat
androidx.legacy.v4.R$string
androidx.databinding.adapters.ViewGroupBindingAdapter$2
androidx.appcompat.view.SupportMenuInflater$MenuState:
    private static final int defaultGroupId
    private static final int defaultItemId
    private static final int defaultItemCategory
    private static final int defaultItemOrder
    private static final int defaultItemCheckable
    private static final boolean defaultItemChecked
    private static final boolean defaultItemVisible
    private static final boolean defaultItemEnabled
com.czluciusdev.diceroller.R
kotlin.reflect.KParameter$DefaultImpls
kotlin.collections.CollectionsKt
androidx.annotation.ColorInt
androidx.recyclerview.widget.GridLayoutManager$LayoutParams:
    public void <init>(androidx.recyclerview.widget.RecyclerView$LayoutParams)
    public static final int INVALID_SPAN_ID
kotlinx.coroutines.flow.AbstractFlow
kotlin.OptionalExpectation
androidx.transition.Styleable$Fade
kotlinx.coroutines.internal.ProbesSupportKt
androidx.legacy.v4.R$layout
kotlin.jvm.functions.Function21
androidx.appcompat.view.menu.StandardMenuPopup:
    public android.os.Parcelable onSaveInstanceState()
    public void onRestoreInstanceState(android.os.Parcelable)
androidx.viewpager.widget.ViewPager$ItemInfo
kotlinx.coroutines.internal.LockFreeTaskQueueKt
androidx.viewpager.widget.ViewPager$1
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$associate$1
androidx.lifecycle.LifecycleCoroutineScopeImpl:
    public void <init>(androidx.lifecycle.Lifecycle,kotlin.coroutines.CoroutineContext)
    public final void register()
androidx.media.VolumeProviderCompat$Callback
androidx.core.app.ActivityOptionsCompat:
    public static androidx.core.app.ActivityOptionsCompat makeCustomAnimation(android.content.Context,int,int)
    public static androidx.core.app.ActivityOptionsCompat makeScaleUpAnimation(android.view.View,int,int,int,int)
    public static androidx.core.app.ActivityOptionsCompat makeClipRevealAnimation(android.view.View,int,int,int,int)
    public static androidx.core.app.ActivityOptionsCompat makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int)
    public static androidx.core.app.ActivityOptionsCompat makeSceneTransitionAnimation(android.app.Activity,android.view.View,java.lang.String)
    public static varargs androidx.core.app.ActivityOptionsCompat makeSceneTransitionAnimation(android.app.Activity,androidx.core.util.Pair[])
    public static androidx.core.app.ActivityOptionsCompat makeTaskLaunchBehind()
    public static androidx.core.app.ActivityOptionsCompat makeBasic()
    protected void <init>()
    public androidx.core.app.ActivityOptionsCompat setLaunchBounds(android.graphics.Rect)
    public android.graphics.Rect getLaunchBounds()
    public void update(androidx.core.app.ActivityOptionsCompat)
    public void requestUsageTimeReport(android.app.PendingIntent)
    public static final java.lang.String EXTRA_USAGE_TIME_REPORT
    public static final java.lang.String EXTRA_USAGE_TIME_REPORT_PACKAGES
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6$1
androidx.cardview.R$style
androidx.fragment.ktx.R
androidx.fragment.ktx.R$id
androidx.core.transition.TransitionKt$doOnStart$$inlined$addListener$1
androidx.navigation.common.R$layout
androidx.transition.RectEvaluator:
    void <init>(android.graphics.Rect)
androidx.recyclerview.widget.AsyncListUtil$1
com.google.android.material.circularreveal.CircularRevealLinearLayout
kotlin.sequences.FilteringSequence$iterator$1
com.google.android.material.shape.ShapePath:
    public void <init>(float,float)
    public void quadToPoint(float,float,float,float)
    private static final float ANGLE_UP
    protected static final float ANGLE_LEFT
kotlinx.coroutines.DefaultExecutor
kotlin.io.FilePathComponents
androidx.databinding.DataBindingUtil:
    private void <init>()
    public static void setDefaultComponent(androidx.databinding.DataBindingComponent)
    public static androidx.databinding.DataBindingComponent getDefaultComponent()
    public static androidx.databinding.ViewDataBinding bind(android.view.View)
    public static androidx.databinding.ViewDataBinding bind(android.view.View,androidx.databinding.DataBindingComponent)
    public static androidx.databinding.ViewDataBinding findBinding(android.view.View)
    public static androidx.databinding.ViewDataBinding getBinding(android.view.View)
    public static androidx.databinding.ViewDataBinding setContentView(android.app.Activity,int)
    public static androidx.databinding.ViewDataBinding setContentView(android.app.Activity,int,androidx.databinding.DataBindingComponent)
    public static java.lang.String convertBrIdToString(int)
kotlinx.coroutines.internal.SystemPropsKt__SystemProps_commonKt
androidx.core.text.PrecomputedTextCompat:
    public static androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)
    private void <init>(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,int[])
    private void <init>(android.text.PrecomputedText,androidx.core.text.PrecomputedTextCompat$Params)
    public static java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor)
    public int getParagraphCount()
    public int getParagraphStart(int)
    public int getParagraphEnd(int)
    private final int[] mParagraphEnds
    private static final char LINE_FEED
kotlin.text.Regex$findAll$1
kotlinx.coroutines.channels.LazyActorCoroutine
androidx.appcompat.app.ActionBar$TabListener
kotlin.contracts.Returns
com.google.android.material.internal.ParcelableSparseBooleanArray$1
kotlinx.coroutines.SchedulerTaskKt
kotlinx.coroutines.InternalCoroutinesApi
androidx.media.MediaBrowserServiceCompatApi26$ResultWrapper
androidx.media.MediaBrowserServiceCompatApi26$ServiceCompatProxy
com.google.android.material.snackbar.BaseTransientBottomBar$12
com.google.android.material.button.MaterialButtonToggleGroup$CheckedStateTracker
kotlinx.coroutines.flow.FlowKt__MigrationKt$combine$$inlined$unsafeFlow$3$lambda$2
kotlin.jvm.JvmDefault
androidx.databinding.adapters.SpinnerBindingAdapter
kotlinx.coroutines.flow.FlowKt__DistinctKt$distinctUntilChanged$$inlined$distinctUntilChangedBy$FlowKt__DistinctKt$1
androidx.appcompat.widget.AbsActionBarView:
    public void animateToVisibility(int)
    public boolean showOverflowMenu()
    public void postShowOverflowMenu()
    public boolean hideOverflowMenu()
    public boolean isOverflowMenuShowing()
    public boolean isOverflowMenuShowPending()
    public boolean isOverflowReserved()
    public boolean canShowOverflowMenu()
    public void dismissPopupMenus()
    private static final int FADE_DURATION
kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1
androidx.drawerlayout.R$style
androidx.core.app.NotificationCompat$StreamType
androidx.databinding.MapChangeRegistry$1
com.google.android.material.R$drawable:
    private void <init>()
androidx.navigation.ActivityNavigator$Extras$Builder
androidx.core.view.LayoutInflaterCompat:
    private void <init>()
    public static void setFactory(android.view.LayoutInflater,androidx.core.view.LayoutInflaterFactory)
    public static androidx.core.view.LayoutInflaterFactory getFactory(android.view.LayoutInflater)
    private static final java.lang.String TAG
kotlinx.coroutines.flow.FlowKt__MergeKt$map$$inlined$unsafeTransform$2
androidx.appcompat.widget.ActivityChooserView$2
androidx.core.view.MotionEventCompat:
    public static int getActionMasked(android.view.MotionEvent)
    public static int getActionIndex(android.view.MotionEvent)
    public static int findPointerIndex(android.view.MotionEvent,int)
    public static int getPointerId(android.view.MotionEvent,int)
    public static float getX(android.view.MotionEvent,int)
    public static float getY(android.view.MotionEvent,int)
    public static int getPointerCount(android.view.MotionEvent)
    public static int getSource(android.view.MotionEvent)
    public static float getAxisValue(android.view.MotionEvent,int)
    public static float getAxisValue(android.view.MotionEvent,int,int)
    public static int getButtonState(android.view.MotionEvent)
    private void <init>()
    public static final int ACTION_MASK
    public static final int ACTION_POINTER_DOWN
    public static final int ACTION_POINTER_UP
    public static final int ACTION_HOVER_MOVE
    public static final int ACTION_SCROLL
    public static final int ACTION_POINTER_INDEX_MASK
    public static final int ACTION_POINTER_INDEX_SHIFT
    public static final int ACTION_HOVER_ENTER
    public static final int ACTION_HOVER_EXIT
    public static final int AXIS_X
    public static final int AXIS_Y
    public static final int AXIS_PRESSURE
    public static final int AXIS_SIZE
    public static final int AXIS_TOUCH_MAJOR
    public static final int AXIS_TOUCH_MINOR
    public static final int AXIS_TOOL_MAJOR
    public static final int AXIS_TOOL_MINOR
    public static final int AXIS_ORIENTATION
    public static final int AXIS_VSCROLL
    public static final int AXIS_HSCROLL
    public static final int AXIS_Z
    public static final int AXIS_RX
    public static final int AXIS_RY
    public static final int AXIS_RZ
    public static final int AXIS_HAT_X
    public static final int AXIS_HAT_Y
    public static final int AXIS_LTRIGGER
    public static final int AXIS_RTRIGGER
    public static final int AXIS_THROTTLE
    public static final int AXIS_RUDDER
    public static final int AXIS_WHEEL
    public static final int AXIS_GAS
    public static final int AXIS_BRAKE
    public static final int AXIS_DISTANCE
    public static final int AXIS_TILT
    public static final int AXIS_SCROLL
    public static final int AXIS_RELATIVE_X
    public static final int AXIS_RELATIVE_Y
    public static final int AXIS_GENERIC_1
    public static final int AXIS_GENERIC_2
    public static final int AXIS_GENERIC_3
    public static final int AXIS_GENERIC_4
    public static final int AXIS_GENERIC_5
    public static final int AXIS_GENERIC_6
    public static final int AXIS_GENERIC_7
    public static final int AXIS_GENERIC_8
    public static final int AXIS_GENERIC_9
    public static final int AXIS_GENERIC_10
    public static final int AXIS_GENERIC_11
    public static final int AXIS_GENERIC_12
    public static final int AXIS_GENERIC_13
    public static final int AXIS_GENERIC_14
    public static final int AXIS_GENERIC_15
    public static final int AXIS_GENERIC_16
    public static final int BUTTON_PRIMARY
androidx.core.app.JobIntentService$CompatJobEngine
androidx.core.view.NestedScrollingChildHelper:
    public void onDetachedFromWindow()
    public void onStopNestedScroll(android.view.View)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$map$1
androidx.databinding.ListChangeRegistry$1
androidx.core.view.ViewGroupKt$iterator$1
androidx.vectordrawable.animated.R$id
androidx.core.view.DragAndDropPermissionsCompat
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$MediaServiceConnection$1
androidx.transition.Styleable$PatternPathMotion
com.google.android.material.internal.CollapsingTextHelper:
    public void setCollapsedTextSize(float)
    public int getExpandedTextGravity()
    public int getCollapsedTextGravity()
    public void setExpandedTextAppearance(int)
    public void setExpandedTypeface(android.graphics.Typeface)
    public android.graphics.Typeface getCollapsedTypeface()
    public android.graphics.Typeface getExpandedTypeface()
    public float getCollapsedTextSize()
    public float getExpandedTextSize()
    public java.lang.CharSequence getText()
    public android.content.res.ColorStateList getExpandedTextColor()
    private static final boolean DEBUG_DRAW
androidx.legacy.v4.R$styleable
androidx.customview.R$dimen
androidx.navigation.ui.ktx.R$string
androidx.core.provider.FontsContractCompat$4$5
androidx.asynclayoutinflater.R$style
androidx.databinding.adapters.SeekBarBindingAdapter$OnProgressChanged
androidx.appcompat.widget.AppCompatRadioButton:
    public void <init>(android.content.Context)
androidx.core.content.ContextCompat$LegacyServiceMapHolder
kotlinx.coroutines.InvokeOnCompletion
androidx.drawerlayout.R$attr
android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener
kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$$inlined$collect$1$1
androidx.navigation.ui.AppBarConfiguration$Builder:
    public void <init>(android.view.Menu)
    public varargs void <init>(int[])
    public void <init>(java.util.Set)
    public androidx.navigation.ui.AppBarConfiguration$Builder setDrawerLayout(androidx.drawerlayout.widget.DrawerLayout)
    public androidx.navigation.ui.AppBarConfiguration$Builder setFallbackOnNavigateUpListener(androidx.navigation.ui.AppBarConfiguration$OnNavigateUpListener)
androidx.vectordrawable.R
androidx.appcompat.app.AppCompatDelegateImpl:
    void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback)
    void <init>(android.content.Context,android.app.Activity,androidx.appcompat.app.AppCompatCallback)
    public void setSupportActionBar(androidx.appcompat.widget.Toolbar)
    public boolean hasWindowFeature(int)
    public void setHandleNativeActionModesEnabled(boolean)
    android.view.ViewGroup getSubDecor()
    public void setLocalNightMode(int)
    private static final boolean DEBUG
    static final java.lang.String EXCEPTION_HANDLER_MESSAGE_SUFFIX
com.google.android.material.snackbar.BaseTransientBottomBar$BehaviorDelegate:
    public void setBaseTransientBottomBar(com.google.android.material.snackbar.BaseTransientBottomBar)
androidx.viewpager2.widget.MarginPageTransformer
androidx.activity.R$attr
androidx.databinding.ListChangeRegistry$ListChanges
androidx.recyclerview.R$dimen:
    private void <init>()
com.google.android.material.floatingactionbutton.FloatingActionButton$ShadowDelegateImpl:
    public float getRadius()
com.google.android.material.circularreveal.CircularRevealRelativeLayout
kotlin.io.FileTreeWalk$FileTreeWalkIterator$WhenMappings
androidx.databinding.adapters.AutoCompleteTextViewBindingAdapter$IsValid
kotlinx.coroutines.scheduling.WorkQueue$pollExternal$1
androidx.annotation.Size
androidx.cursoradapter.widget.SimpleCursorAdapter$CursorToStringConverter
androidx.constraintlayout.solver.widgets.ConstraintTableLayout$VerticalSlice
kotlin.coroutines.experimental.ContinuationInterceptor$DefaultImpls
androidx.navigation.fragment.ktx.R$drawable
androidx.coordinatorlayout.R$string
androidx.legacy.coreui.R$layout
com.google.android.material.animation.MatrixEvaluator:
    public synthetic bridge java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)
com.google.android.material.snackbar.BaseTransientBottomBar
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$2
kotlinx.coroutines.internal.LockFreeTaskQueueCore
kotlin.io.FileWalkDirection
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$dropWhile$1
kotlin.annotation.Target
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$filterNot$1
com.google.android.material.tabs.TabLayout$ViewPagerOnTabSelectedListener
com.google.android.material.datepicker.RangeDateSelector
kotlin.coroutines.CoroutineContext$Element:
    public abstract java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
    public abstract kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
androidx.vectordrawable.animated.R$drawable
android.support.v4.media.session.MediaControllerCompatApi24
kotlinx.coroutines.JobSupport$children$1
kotlin.coroutines.ContinuationInterceptor$DefaultImpls
androidx.databinding.adapters.SwitchBindingAdapter
kotlin.jvm.Transient
kotlinx.coroutines.flow.FlowKt__TransformKt$scanReduce$$inlined$unsafeFlow$1$lambda$1
androidx.media.MediaBrowserServiceCompatApi26$MediaBrowserServiceAdaptor
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase
androidx.viewpager2.widget.CompositeOnPageChangeCallback
androidx.annotation.StringDef
androidx.core.graphics.TypefaceCompatUtil:
    private void <init>()
    private static final java.lang.String TAG
    private static final java.lang.String CACHE_FILE_PREFIX
androidx.lifecycle.ViewModelProviderKt
androidx.navigation.ui.ToolbarKt
androidx.appcompat.app.ResourcesFlusher:
    private void <init>()
    private static final java.lang.String TAG
kotlin.sequences.DropTakeSequence
androidx.databinding.library.R
androidx.transition.ImageViewUtils
androidx.recyclerview.widget.DiffUtil$ItemCallback
androidx.versionedparcelable.ParcelUtils
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$mapIndexedNotNullTo$1
androidx.appcompat.app.AlertController$ButtonHandler:
    private static final int MSG_DISMISS_DIALOG
kotlin.reflect.KType$DefaultImpls
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$$inlined$Runnable$1
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$4
kotlin.text.CharsKt:
    private void <init>()
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenDescending$1
androidx.recyclerview.widget.MessageThreadUtil$MessageQueue
androidx.asynclayoutinflater.view.AsyncLayoutInflater$1
androidx.navigation.ui.R$bool
androidx.lifecycle.ViewModelProviders
kotlin.ranges.ClosedFloatRange
kotlin.time.ExperimentalTime
androidx.core.view.accessibility.AccessibilityEventCompat:
    private void <init>()
    public static int getRecordCount(android.view.accessibility.AccessibilityEvent)
    public static void appendRecord(android.view.accessibility.AccessibilityEvent,androidx.core.view.accessibility.AccessibilityRecordCompat)
    public static androidx.core.view.accessibility.AccessibilityRecordCompat getRecord(android.view.accessibility.AccessibilityEvent,int)
    public static androidx.core.view.accessibility.AccessibilityRecordCompat asRecord(android.view.accessibility.AccessibilityEvent)
    public static void setMovementGranularity(android.view.accessibility.AccessibilityEvent,int)
    public static int getMovementGranularity(android.view.accessibility.AccessibilityEvent)
    public static void setAction(android.view.accessibility.AccessibilityEvent,int)
    public static int getAction(android.view.accessibility.AccessibilityEvent)
    public static final int TYPE_VIEW_HOVER_ENTER
    public static final int TYPE_VIEW_HOVER_EXIT
    public static final int TYPE_TOUCH_EXPLORATION_GESTURE_START
    public static final int TYPE_TOUCH_EXPLORATION_GESTURE_END
    public static final int TYPE_WINDOW_CONTENT_CHANGED
    public static final int TYPE_VIEW_SCROLLED
    public static final int TYPE_VIEW_TEXT_SELECTION_CHANGED
    public static final int TYPE_ANNOUNCEMENT
    public static final int TYPE_VIEW_ACCESSIBILITY_FOCUSED
    public static final int TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED
    public static final int TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY
    public static final int TYPE_GESTURE_DETECTION_START
    public static final int TYPE_GESTURE_DETECTION_END
    public static final int TYPE_TOUCH_INTERACTION_START
    public static final int TYPE_TOUCH_INTERACTION_END
    public static final int TYPE_WINDOWS_CHANGED
    public static final int TYPE_VIEW_CONTEXT_CLICKED
    public static final int TYPE_ASSIST_READING_CONTEXT
    public static final int CONTENT_CHANGE_TYPE_UNDEFINED
    public static final int CONTENT_CHANGE_TYPE_SUBTREE
    public static final int CONTENT_CHANGE_TYPE_TEXT
    public static final int CONTENT_CHANGE_TYPE_CONTENT_DESCRIPTION
    public static final int CONTENT_CHANGE_TYPE_PANE_TITLE
    public static final int CONTENT_CHANGE_TYPE_PANE_APPEARED
    public static final int CONTENT_CHANGE_TYPE_PANE_DISAPPEARED
    public static final int TYPES_ALL_MASK
kotlin.io.TextStreamsKt
kotlin.text.StringsKt__IndentKt:
    public static final java.lang.String trimMargin(java.lang.String,java.lang.String)
    public static synthetic java.lang.String trimMargin$default(java.lang.String,java.lang.String,int,java.lang.Object)
    public static final java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String)
    public static synthetic java.lang.String replaceIndentByMargin$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
    public static final java.lang.String trimIndent(java.lang.String)
    public static final java.lang.String replaceIndent(java.lang.String,java.lang.String)
    public static synthetic java.lang.String replaceIndent$default(java.lang.String,java.lang.String,int,java.lang.Object)
    public static final java.lang.String prependIndent(java.lang.String,java.lang.String)
    public static synthetic java.lang.String prependIndent$default(java.lang.String,java.lang.String,int,java.lang.Object)
    private static final int indentWidth$StringsKt__IndentKt(java.lang.String)
    private static final kotlin.jvm.functions.Function1 getIndentFunction$StringsKt__IndentKt(java.lang.String)
    private static final java.lang.String reindent$StringsKt__IndentKt(java.util.List,int,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
    public void <init>()
androidx.activity.ktx.R$layout
kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$$inlined$collect$1
kotlinx.coroutines.JobSupport$AwaitContinuation
androidx.navigation.fragment.R$anim
androidx.core.content.res.FontResourcesParserCompat:
    private void <init>()
    private static final int NORMAL_WEIGHT
    private static final int ITALIC
    public static final int FETCH_STRATEGY_BLOCKING
    public static final int FETCH_STRATEGY_ASYNC
    public static final int INFINITE_TIMEOUT_VALUE
    private static final int DEFAULT_TIMEOUT_MILLIS
kotlinx.coroutines.channels.ConflatedBroadcastChannel$onSend$1
kotlinx.coroutines.flow.FlowKt__MigrationKt$combineLatest$$inlined$combine$2$3
kotlinx.coroutines.channels.AbstractSendChannel$SendConflatedDesc
com.google.android.material.datepicker.SingleDateSelector
kotlinx.coroutines.flow.FlowKt__MigrationKt$combine$$inlined$combine$1$3
androidx.fragment.app.FragmentActivity$HostCallbacks:
    public void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
    public void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int)
    public void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)
    public void onStartIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
    public void onRequestPermissionsFromFragment(androidx.fragment.app.Fragment,java.lang.String[],int)
    public boolean onShouldShowRequestPermissionRationale(java.lang.String)
    public boolean onHasWindowAnimations()
    public int onGetWindowAnimations()
kotlinx.coroutines.channels.ReceiveChannel$DefaultImpls
kotlinx.coroutines.channels.ProduceKt$awaitClose$2
androidx.recyclerview.widget.AdapterHelper:
    varargs androidx.recyclerview.widget.AdapterHelper addUpdateOp(androidx.recyclerview.widget.AdapterHelper$UpdateOp[])
    boolean onItemRangeChanged(int,int,java.lang.Object)
    boolean onItemRangeInserted(int,int)
    boolean onItemRangeRemoved(int,int)
    boolean onItemRangeMoved(int,int,int)
    static final int POSITION_TYPE_INVISIBLE
    static final int POSITION_TYPE_NEW_OR_LAID_OUT
    private static final boolean DEBUG
    private static final java.lang.String TAG
androidx.core.view.ViewGroupKt
androidx.core.hardware.display.DisplayManagerCompat
org.intellij.lang.annotations.Flow
androidx.core.app.FrameMetricsAggregator$MetricType
kotlin.UShortArray$Iterator
kotlinx.coroutines.channels.AbstractChannelKt
androidx.core.widget.TextViewCompat:
    private void <init>()
    private static java.lang.reflect.Field retrieveField(java.lang.String)
    private static int retrieveIntFromField(java.lang.reflect.Field,android.widget.TextView)
    public static void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
    public static void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int)
    public static int getMaxLines(android.widget.TextView)
    public static int getMinLines(android.widget.TextView)
    public static void setAutoSizeTextTypeWithDefaults(android.widget.TextView,int)
    public static void setAutoSizeTextTypeUniformWithConfiguration(android.widget.TextView,int,int,int,int)
    public static void setAutoSizeTextTypeUniformWithPresetSizes(android.widget.TextView,int[],int)
    public static int getAutoSizeTextType(android.widget.TextView)
    public static int getAutoSizeStepGranularity(android.widget.TextView)
    public static int getAutoSizeMinTextSize(android.widget.TextView)
    public static int getAutoSizeMaxTextSize(android.widget.TextView)
    public static int[] getAutoSizeTextAvailableSizes(android.widget.TextView)
    public static void setCustomSelectionActionModeCallback(android.widget.TextView,android.view.ActionMode$Callback)
    public static android.content.res.ColorStateList getCompoundDrawableTintList(android.widget.TextView)
    public static android.graphics.PorterDuff$Mode getCompoundDrawableTintMode(android.widget.TextView)
    private static final java.lang.String LOG_TAG
    public static final int AUTO_SIZE_TEXT_TYPE_NONE
    public static final int AUTO_SIZE_TEXT_TYPE_UNIFORM
    private static java.lang.reflect.Field sMaximumField
    private static boolean sMaximumFieldFetched
    private static java.lang.reflect.Field sMaxModeField
    private static boolean sMaxModeFieldFetched
    private static java.lang.reflect.Field sMinimumField
    private static boolean sMinimumFieldFetched
    private static java.lang.reflect.Field sMinModeField
    private static boolean sMinModeFieldFetched
    private static final int LINES
androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback
kotlin.io.FilesKt__UtilsKt$copyRecursively$2
kotlinx.coroutines.internal.LockFreeLinkedListNode$RemoveFirstDesc
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$1
androidx.core.view.ViewKt$doOnDetach$1
androidx.core.graphics.PathParser:
    public static boolean interpolatePathDataNodes(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[],float)
    private void <init>()
    private static final java.lang.String LOGTAG
androidx.core.animation.AnimatorKt$addListener$1
kotlin.sequences.DistinctIterator
kotlin.jvm.internal.markers.KMutableMap
kotlinx.coroutines.CoroutineExceptionHandler$DefaultImpls
android.support.v4.media.MediaBrowserCompat$SubscriptionCallback$StubApi21
com.google.android.material.button.MaterialButtonToggleGroup$OnButtonCheckedListener
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImpl
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback$1
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi28
androidx.core.content.PermissionChecker:
    private void <init>()
    public static int checkCallingPermission(android.content.Context,java.lang.String,java.lang.String)
    public static int checkCallingOrSelfPermission(android.content.Context,java.lang.String)
    public static final int PERMISSION_GRANTED
    public static final int PERMISSION_DENIED
    public static final int PERMISSION_DENIED_APP_OP
kotlinx.coroutines.flow.FlowKt
kotlin.coroutines.experimental.AbstractCoroutineContextElement
androidx.core.ktx.R
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$associateBy$1
androidx.legacy.coreui.R$color
kotlinx.coroutines.ExecutorCoroutineDispatcherBase
androidx.fragment.app.FragmentTabHost$TabInfo
androidx.navigation.fragment.FragmentNavigator$Extras$Builder
androidx.core.view.DragStartHelper$OnDragStartListener
androidx.core.app.NotificationCompatSideChannelService
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumes$1
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$foldIndexed$1
androidx.cardview.widget.CardViewDelegate:
    public abstract void setCardBackground(android.graphics.drawable.Drawable)
androidx.transition.AutoTransition:
    public void <init>(android.content.Context,android.util.AttributeSet)
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager:
    private void unregisterForLayoutCallback(android.view.View)
    void addAccessibilityPane(android.view.View)
    void removeAccessibilityPane(android.view.View)
com.google.android.material.datepicker.RangeDateSelector$3
androidx.loader.content.ModernAsyncTask$InternalHandler
androidx.transition.Transition$EpicenterCallback:
    public abstract android.graphics.Rect onGetEpicenter(androidx.transition.Transition)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$filter$1
kotlinx.coroutines.flow.FlowKt__MergeKt$unsafeTransform$$inlined$unsafeFlow$2$lambda$1
kotlin.jvm.functions.Function16
kotlinx.coroutines.channels.ClosedReceiveChannelException
androidx.navigation.fragment.ktx.R$integer
kotlin.Lazy:
    public abstract boolean isInitialized()
kotlin.sequences.SequencesKt__SequencesKt
androidx.appcompat.view.ActionMode:
    public boolean isUiFocusable()
kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1$1
androidx.core.ktx.R$drawable
androidx.navigation.NavControllerKt
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$groupByTo$1
androidx.recyclerview.widget.AsyncListDiffer$1$1
androidx.core.widget.PopupMenuCompat
androidx.constraintlayout.solver.Pools$SimplePool:
    private boolean isInPool(java.lang.Object)
kotlin.reflect.KTypeProjection$Companion
android.support.v4.media.session.MediaSessionCompat:
    public void <init>(android.content.Context,java.lang.String)
    public void <init>(android.content.Context,java.lang.String,android.content.ComponentName,android.app.PendingIntent)
    public void <init>(android.content.Context,java.lang.String,android.os.Bundle)
    private void <init>(android.content.Context,java.lang.String,android.content.ComponentName,android.app.PendingIntent,android.os.Bundle)
    private void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl)
    public static android.support.v4.media.session.MediaSessionCompat fromMediaSession(android.content.Context,java.lang.Object)
    static android.support.v4.media.session.PlaybackStateCompat getStateWithUpdatedPosition(android.support.v4.media.session.PlaybackStateCompat,android.support.v4.media.MediaMetadataCompat)
    public void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback)
    public void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler)
    public void setSessionActivity(android.app.PendingIntent)
    public void setMediaButtonReceiver(android.app.PendingIntent)
    public void setFlags(int)
    public void setPlaybackToLocal(int)
    public void setPlaybackToRemote(androidx.media.VolumeProviderCompat)
    public void setActive(boolean)
    public boolean isActive()
    public void sendSessionEvent(java.lang.String,android.os.Bundle)
    public void release()
    public android.support.v4.media.session.MediaSessionCompat$Token getSessionToken()
    public android.support.v4.media.session.MediaControllerCompat getController()
    public void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat)
    public void setMetadata(android.support.v4.media.MediaMetadataCompat)
    public void setQueue(java.util.List)
    public void setQueueTitle(java.lang.CharSequence)
    public void setRatingType(int)
    public void setCaptioningEnabled(boolean)
    public void setRepeatMode(int)
    public void setShuffleMode(int)
    public void setExtras(android.os.Bundle)
    public java.lang.Object getMediaSession()
    public java.lang.Object getRemoteControlClient()
    public final androidx.media.MediaSessionManager$RemoteUserInfo getCurrentControllerInfo()
    public java.lang.String getCallingPackage()
    public void addOnActiveChangeListener(android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener)
    public void removeOnActiveChangeListener(android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener)
    private final android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl
    private final android.support.v4.media.session.MediaControllerCompat mController
    private final java.util.ArrayList mActiveListeners
    static final java.lang.String TAG
    public static final int FLAG_HANDLES_MEDIA_BUTTONS
    public static final int FLAG_HANDLES_TRANSPORT_CONTROLS
    public static final int FLAG_HANDLES_QUEUE_COMMANDS
    public static final java.lang.String ACTION_FLAG_AS_INAPPROPRIATE
    public static final java.lang.String ACTION_SKIP_AD
    public static final java.lang.String ACTION_FOLLOW
    public static final java.lang.String ACTION_UNFOLLOW
    public static final java.lang.String ARGUMENT_MEDIA_ATTRIBUTE
    public static final java.lang.String ARGUMENT_MEDIA_ATTRIBUTE_VALUE
    public static final int MEDIA_ATTRIBUTE_ARTIST
    public static final int MEDIA_ATTRIBUTE_ALBUM
    public static final int MEDIA_ATTRIBUTE_PLAYLIST
    public static final java.lang.String ACTION_PLAY_FROM_URI
    public static final java.lang.String ACTION_PREPARE
    public static final java.lang.String ACTION_PREPARE_FROM_MEDIA_ID
    public static final java.lang.String ACTION_PREPARE_FROM_SEARCH
    public static final java.lang.String ACTION_PREPARE_FROM_URI
    public static final java.lang.String ACTION_SET_CAPTIONING_ENABLED
    public static final java.lang.String ACTION_SET_REPEAT_MODE
    public static final java.lang.String ACTION_SET_SHUFFLE_MODE
    public static final java.lang.String ACTION_SET_RATING
    public static final java.lang.String ACTION_ARGUMENT_MEDIA_ID
    public static final java.lang.String ACTION_ARGUMENT_QUERY
    public static final java.lang.String ACTION_ARGUMENT_URI
    public static final java.lang.String ACTION_ARGUMENT_RATING
    public static final java.lang.String ACTION_ARGUMENT_EXTRAS
    public static final java.lang.String ACTION_ARGUMENT_CAPTIONING_ENABLED
    public static final java.lang.String ACTION_ARGUMENT_REPEAT_MODE
    public static final java.lang.String ACTION_ARGUMENT_SHUFFLE_MODE
    public static final java.lang.String KEY_TOKEN
    public static final java.lang.String KEY_EXTRA_BINDER
    public static final java.lang.String KEY_SESSION_TOKEN2_BUNDLE
    private static final int MAX_BITMAP_SIZE_IN_DP
    private static final java.lang.String DATA_CALLING_PACKAGE
    private static final java.lang.String DATA_CALLING_PID
    private static final java.lang.String DATA_CALLING_UID
    private static final java.lang.String DATA_EXTRAS
    static int sMaxBitmapSize
com.google.android.material.shape.RoundedCornerTreatment:
    public void <init>(float)
androidx.media.VolumeProviderCompat$ControlType
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$single$1
kotlin.sequences.IndexingSequence
kotlinx.coroutines.flow.FlowKt__CollectionKt
kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$4
androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment
androidx.drawerlayout.R$styleable
kotlinx.coroutines.CompletedExceptionallyKt
androidx.cursoradapter.widget.SimpleCursorAdapter$ViewBinder
androidx.appcompat.widget.AppCompatImageHelper:
    void setInternalImageTint(android.content.res.ColorStateList)
androidx.navigation.ActivityNavigatorDestinationBuilder
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$indexOfFirst$1
android.support.v4.media.session.IMediaSession:
    public abstract void sendCommand(java.lang.String,android.os.Bundle,android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper)
    public abstract boolean sendMediaButton(android.view.KeyEvent)
    public abstract void unregisterCallbackListener(android.support.v4.media.session.IMediaControllerCallback)
    public abstract boolean isTransportControlEnabled()
    public abstract java.lang.String getPackageName()
    public abstract java.lang.String getTag()
    public abstract android.app.PendingIntent getLaunchPendingIntent()
    public abstract long getFlags()
    public abstract android.support.v4.media.session.ParcelableVolumeInfo getVolumeAttributes()
    public abstract void adjustVolume(int,int,java.lang.String)
    public abstract void setVolumeTo(int,int,java.lang.String)
    public abstract android.support.v4.media.MediaMetadataCompat getMetadata()
    public abstract android.support.v4.media.session.PlaybackStateCompat getPlaybackState()
    public abstract java.util.List getQueue()
    public abstract java.lang.CharSequence getQueueTitle()
    public abstract android.os.Bundle getExtras()
    public abstract int getRatingType()
    public abstract boolean isCaptioningEnabled()
    public abstract int getRepeatMode()
    public abstract boolean isShuffleModeEnabledRemoved()
    public abstract int getShuffleMode()
    public abstract void addQueueItem(android.support.v4.media.MediaDescriptionCompat)
    public abstract void addQueueItemAt(android.support.v4.media.MediaDescriptionCompat,int)
    public abstract void removeQueueItem(android.support.v4.media.MediaDescriptionCompat)
    public abstract void removeQueueItemAt(int)
    public abstract void prepare()
    public abstract void prepareFromMediaId(java.lang.String,android.os.Bundle)
    public abstract void prepareFromSearch(java.lang.String,android.os.Bundle)
    public abstract void prepareFromUri(android.net.Uri,android.os.Bundle)
    public abstract void play()
    public abstract void playFromMediaId(java.lang.String,android.os.Bundle)
    public abstract void playFromSearch(java.lang.String,android.os.Bundle)
    public abstract void playFromUri(android.net.Uri,android.os.Bundle)
    public abstract void skipToQueueItem(long)
    public abstract void pause()
    public abstract void stop()
    public abstract void next()
    public abstract void previous()
    public abstract void fastForward()
    public abstract void rewind()
    public abstract void seekTo(long)
    public abstract void rate(android.support.v4.media.RatingCompat)
    public abstract void rateWithExtras(android.support.v4.media.RatingCompat,android.os.Bundle)
    public abstract void setCaptioningEnabled(boolean)
    public abstract void setRepeatMode(int)
    public abstract void setShuffleModeEnabledRemoved(boolean)
    public abstract void setShuffleMode(int)
    public abstract void sendCustomAction(java.lang.String,android.os.Bundle)
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1
androidx.loader.app.LoaderManager$LoaderCallbacks
kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1
androidx.annotation.InspectableProperty$EnumEntry
androidx.cardview.R$attr
androidx.fragment.app.FragmentController:
    public androidx.loader.app.LoaderManager getSupportLoaderManager()
    public int getActiveFragmentsCount()
    public java.util.List getActiveFragments(java.util.List)
    public void restoreAllState(android.os.Parcelable,java.util.List)
    public void restoreAllState(android.os.Parcelable,androidx.fragment.app.FragmentManagerNonConfig)
    public java.util.List retainNonConfig()
    public androidx.fragment.app.FragmentManagerNonConfig retainNestedNonConfig()
    public void dispatchReallyStop()
    public void dispatchDestroyView()
    public void doLoaderStart()
    public void doLoaderStop(boolean)
    public void doLoaderRetain()
    public void doLoaderDestroy()
    public void reportLoaderStart()
    public androidx.collection.SimpleArrayMap retainLoaderNonConfig()
    public void restoreLoaderNonConfig(androidx.collection.SimpleArrayMap)
    public void dumpLoaders(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
com.google.android.material.internal.ParcelableSparseArray$1
android.support.v4.media.session.MediaSessionCompatApi21
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi26$1
kotlinx.coroutines.selects.SelectBuilderImpl$AtomicSelectOp
androidx.documentfile.provider.DocumentsContractApi19
com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuSeparatorItem
androidx.media.MediaBrowserServiceCompatApi23$MediaBrowserServiceAdaptor
androidx.media.session.MediaButtonReceiver
com.google.android.material.bottomsheet.BottomSheetBehavior:
    public boolean isFitToContents()
    public int getPeekHeight()
    public float getHalfExpandedRatio()
    public boolean getSkipCollapsed()
    public int getSaveFlags()
    public void setBottomSheetCallback(com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback)
    int getPeekHeightMin()
    public void disableShapeAnimations()
    public static final int STATE_DRAGGING
    public static final int STATE_SETTLING
    public static final int STATE_EXPANDED
    public static final int STATE_COLLAPSED
    public static final int STATE_HIDDEN
    public static final int STATE_HALF_EXPANDED
    public static final int PEEK_HEIGHT_AUTO
    public static final int SAVE_PEEK_HEIGHT
    public static final int SAVE_FIT_TO_CONTENTS
    public static final int SAVE_HIDEABLE
    public static final int SAVE_SKIP_COLLAPSED
    public static final int SAVE_ALL
    public static final int SAVE_NONE
    private static final java.lang.String TAG
    private static final float HIDE_THRESHOLD
    private static final float HIDE_FRICTION
    private static final int CORNER_ANIMATION_DURATION
androidx.navigation.ui.ktx.R$interpolator
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$7
androidx.core.text.CharSequenceKt
androidx.media.AudioAttributesImpl:
    public abstract java.lang.Object getAudioAttributes()
    public abstract int getVolumeControlStream()
    public abstract int getLegacyStreamType()
    public abstract int getRawLegacyStreamType()
    public abstract int getContentType()
    public abstract int getUsage()
    public abstract int getFlags()
    public abstract android.os.Bundle toBundle()
kotlin.coroutines.experimental.SafeContinuation$Companion
kotlinx.coroutines.flow.FlowKt__TransformKt$scan$$inlined$unsafeFlow$1$lambda$1$1
androidx.core.util.PatternsCompat
kotlinx.coroutines.channels.ClosedSendChannelException
androidx.constraintlayout.solver.widgets.ChainHead:
    public androidx.constraintlayout.solver.widgets.ConstraintWidget getFirst()
    public androidx.constraintlayout.solver.widgets.ConstraintWidget getFirstVisibleWidget()
    public androidx.constraintlayout.solver.widgets.ConstraintWidget getLast()
    public androidx.constraintlayout.solver.widgets.ConstraintWidget getLastVisibleWidget()
    public androidx.constraintlayout.solver.widgets.ConstraintWidget getHead()
    public androidx.constraintlayout.solver.widgets.ConstraintWidget getFirstMatchConstraintWidget()
    public androidx.constraintlayout.solver.widgets.ConstraintWidget getLastMatchConstraintWidget()
    public float getTotalWeight()
kotlinx.coroutines.JobSupport
androidx.lifecycle.extensions.R$drawable
android.support.v4.media.session.MediaSessionCompat$Callback$StubApi23
kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1
kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$$inlined$unsafeFlow$1$lambda$1$1
kotlin.ranges.ClosedDoubleRange
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$mapNotNullTo$3
kotlin.sequences.USequencesKt___USequencesKt
kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$$inlined$unsafeFlow$1$lambda$1$1
kotlinx.coroutines.flow.FlowKt__MigrationKt$combineLatest$$inlined$combine$1$1
androidx.vectordrawable.R$string
androidx.asynclayoutinflater.R$string
androidx.transition.R$id:
    private void <init>()
kotlinx.coroutines.internal.ExceptionsConstuctorKt$tryCopyException$$inlined$sortedByDescending$1
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory:
    public static final int DIRECTION_LEFT
    public static final int DIRECTION_TOP
    public static final int DIRECTION_RIGHT
    public static final int DIRECTION_BOTTOM
androidx.recyclerview.widget.ListAdapter$1
androidx.viewpager.widget.ViewPager$LayoutParams
kotlinx.coroutines.ThreadLocalEventLoop
androidx.core.content.pm.ShortcutInfoCompatSaver
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi23
kotlinx.coroutines.flow.FlowKt__MergeKt$unsafeTransform$$inlined$unsafeFlow$1$lambda$1
com.google.android.material.button.MaterialButtonToggleGroup$CornerData
kotlinx.coroutines.sync.SemaphoreImpl
kotlin.sequences.SequencesKt___SequencesKt$minus$3$iterator$1
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1$1
kotlinx.coroutines.channels.Channel$DefaultImpls
kotlinx.coroutines.internal.ThreadSafeHeap
androidx.appcompat.widget.ActionBarOverlayLayout:
    public boolean isHideOnContentScrollEnabled()
    public boolean hasIcon()
    public boolean hasLogo()
    public void saveToolbarHierarchyState(android.util.SparseArray)
    public void restoreToolbarHierarchyState(android.util.SparseArray)
    private static final java.lang.String TAG
    private static final int ACTION_BAR_ANIMATE_DELAY
kotlinx.coroutines.AwaitAll$DisposeHandlersOnCancel
androidx.core.app.ShareCompat$IntentReader
androidx.annotation.MainThread
kotlinx.coroutines.internal.ThreadContextKt$updateState$1
kotlinx.coroutines.internal.LockFreeLinkedListNode$AbstractAtomicDesc
androidx.core.app.BundleCompat$BundleCompatBaseImpl:
    private void <init>()
    public static void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder)
    private static final java.lang.String TAG
    private static java.lang.reflect.Method sPutIBinderMethod
    private static boolean sPutIBinderMethodFetched
com.google.android.material.appbar.AppBarLayout$LayoutParams$ScrollFlags
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$filterIndexedTo$3
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10
kotlin.sequences.EmptySequence
kotlin.text.StringsKt__StringNumberConversionsJVMKt:
    private static final java.lang.String toString(byte,int)
    private static final java.lang.String toString(short,int)
    private static final java.lang.String toString(int,int)
    private static final java.lang.String toString(long,int)
    private static final boolean toBoolean(java.lang.String)
    private static final byte toByte(java.lang.String)
    private static final byte toByte(java.lang.String,int)
    private static final short toShort(java.lang.String)
    private static final short toShort(java.lang.String,int)
    private static final int toInt(java.lang.String)
    private static final int toInt(java.lang.String,int)
    private static final long toLong(java.lang.String)
    private static final long toLong(java.lang.String,int)
    private static final float toFloat(java.lang.String)
    private static final double toDouble(java.lang.String)
    public static final java.lang.Float toFloatOrNull(java.lang.String)
    public static final java.lang.Double toDoubleOrNull(java.lang.String)
    private static final java.math.BigInteger toBigInteger(java.lang.String)
    private static final java.math.BigInteger toBigInteger(java.lang.String,int)
    public static final java.math.BigInteger toBigIntegerOrNull(java.lang.String)
    public static final java.math.BigInteger toBigIntegerOrNull(java.lang.String,int)
    private static final java.math.BigDecimal toBigDecimal(java.lang.String)
    private static final java.math.BigDecimal toBigDecimal(java.lang.String,java.math.MathContext)
    public static final java.math.BigDecimal toBigDecimalOrNull(java.lang.String)
    public static final java.math.BigDecimal toBigDecimalOrNull(java.lang.String,java.math.MathContext)
    private static final java.lang.Object screenFloatValue$StringsKt__StringNumberConversionsJVMKt(java.lang.String,kotlin.jvm.functions.Function1)
    public void <init>()
com.google.android.material.ripple.RippleDrawableCompat:
    public com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
androidx.core.text.BidiFormatter$Builder:
    public void <init>(boolean)
    public void <init>(java.util.Locale)
    public androidx.core.text.BidiFormatter$Builder stereoReset(boolean)
    public androidx.core.text.BidiFormatter$Builder setTextDirectionHeuristic(androidx.core.text.TextDirectionHeuristicCompat)
kotlin.jvm.functions.FunctionN
androidx.lifecycle.ViewModelKt
androidx.navigation.fragment.ktx.R$string
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$2$1
kotlin.collections.MapWithDefaultImpl
kotlin.random.RandomKt:
    public static final kotlin.random.Random Random(int)
    public static final kotlin.random.Random Random(long)
    public static final long nextLong(kotlin.random.Random,kotlin.ranges.LongRange)
    public static final void checkRangeBounds(long,long)
    public static final void checkRangeBounds(double,double)
kotlin.jvm.internal.PropertyReference1:
    public void <init>(java.lang.Object)
    public java.lang.Object invoke(java.lang.Object)
    public kotlin.reflect.KProperty1$Getter getGetter()
    public java.lang.Object getDelegate(java.lang.Object)
    public synthetic bridge kotlin.reflect.KProperty$Getter getGetter()
androidx.databinding.adapters.CheckedTextViewBindingAdapter
kotlinx.coroutines.flow.FlowKt__MigrationKt$combine$$inlined$unsafeFlow$1$lambda$2
kotlinx.coroutines.internal.Concurrent_commonKt
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransform$3$1
kotlin.UNumbersKt
androidx.core.telephony.mbms.MbmsHelper
kotlin.sequences.TakeWhileSequence
com.google.android.material.datepicker.SingleDateSelector$2
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$1
com.google.android.material.internal.NavigationMenu
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1
androidx.appcompat.R$interpolator
kotlinx.coroutines.flow.internal.CombineKt$asFairChannel$1$invokeSuspend$$inlined$collect$1
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$lastOrNull$1
com.czluciusdev.diceroller.R$anim
androidx.annotation.NonNull
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$4$1
androidx.drawerlayout.R$color
androidx.databinding.adapters.SearchViewBindingAdapter$OnQueryTextChange
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$elementAtOrElse$1
kotlin.properties.Delegates$observable$1
androidx.core.R$string
androidx.navigation.common.ktx.R$attr
android.support.v4.media.MediaBrowserCompat$MediaItem:
    public static android.support.v4.media.MediaBrowserCompat$MediaItem fromMediaItem(java.lang.Object)
    public static java.util.List fromMediaItemList(java.util.List)
    public void <init>(android.support.v4.media.MediaDescriptionCompat,int)
    public int getFlags()
    public boolean isBrowsable()
    public boolean isPlayable()
    public android.support.v4.media.MediaDescriptionCompat getDescription()
    public java.lang.String getMediaId()
    public static final int FLAG_BROWSABLE
    public static final int FLAG_PLAYABLE
com.google.android.material.bottomnavigation.BottomNavigationPresenter$SavedState$1
androidx.arch.core.executor.DefaultTaskExecutor$1:
    private static final java.lang.String THREAD_NAME_STEM
kotlin.collections.ArraysKt___ArraysKt$withIndex$8
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl:
    public boolean isRtl(char[],int,int)
androidx.core.text.util.LinkifyCompat
androidx.lifecycle.livedata.core.R
androidx.documentfile.provider.DocumentFile
kotlinx.coroutines.NonCancellable
androidx.vectordrawable.animated.R$color
kotlin.jvm.internal.MutablePropertyReference0
kotlin.coroutines.CombinedContext$writeReplace$1
androidx.viewpager2.widget.PageTransformerAdapter
androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment
com.google.android.material.datepicker.PickerFragment:
    abstract com.google.android.material.datepicker.DateSelector getDateSelector()
    boolean removeOnSelectionChangedListener(com.google.android.material.datepicker.OnSelectionChangedListener)
androidx.navigation.ui.ktx.R$style
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat:
    public void <init>(int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand)
    private static final java.lang.String TAG
kotlinx.coroutines.GlobalScope
androidx.fragment.app.FragmentAnim:
    private void <init>()
com.google.android.material.datepicker.SingleDateSelector$1
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$mapTo$3
androidx.core.content.pm.PermissionInfoCompat$Protection
androidx.legacy.coreui.R$attr
kotlinx.coroutines.LazyDeferredCoroutine
kotlinx.coroutines.internal.ThreadContextKt
kotlinx.coroutines.internal.Symbol
kotlin.Experimental
kotlin.io.ConsoleKt
kotlin.coroutines.experimental.CoroutineContext$plus$1
androidx.navigation.fragment.ktx.R$color
androidx.navigation.fragment.FragmentNavigatorExtrasKt
kotlinx.coroutines.channels.AbstractChannel$IdempotentTokenValue
androidx.collection.LongSparseArrayKt$valueIterator$1
androidx.navigation.fragment.R$styleable:
    private void <init>()
androidx.recyclerview.widget.RecyclerView$Adapter:
    public final void notifyItemChanged(int)
    public final void notifyItemChanged(int,java.lang.Object)
    public final void notifyItemRangeChanged(int,int)
    public final void notifyItemRangeChanged(int,int,java.lang.Object)
    public final void notifyItemInserted(int)
    public final void notifyItemMoved(int,int)
    public final void notifyItemRangeInserted(int,int)
    public final void notifyItemRemoved(int)
    public final void notifyItemRangeRemoved(int,int)
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase
kotlin.io.FilesKt__FileReadWriteKt
androidx.annotation.RequiresPermission
androidx.fragment.app.Fragment:
    public static androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String)
    public androidx.lifecycle.LifecycleOwner getViewLifecycleOwner()
    public androidx.lifecycle.LiveData getViewLifecycleOwnerLiveData()
    public final java.lang.String getTag()
    public final android.os.Bundle requireArguments()
    public void setInitialSavedState(androidx.fragment.app.Fragment$SavedState)
    public void setTargetFragment(androidx.fragment.app.Fragment,int)
    public final int getTargetRequestCode()
    public final java.lang.Object requireHost()
    public final java.lang.CharSequence getText(int)
    public final varargs java.lang.String getString(int,java.lang.Object[])
    public final androidx.fragment.app.FragmentManager getFragmentManager()
    public final androidx.fragment.app.FragmentManager requireFragmentManager()
    public final androidx.fragment.app.Fragment requireParentFragment()
    public final boolean isAdded()
    public final boolean isDetached()
    public final boolean isInLayout()
    public final boolean isResumed()
    public final boolean isVisible()
    public final boolean isHidden()
    public final boolean hasOptionsMenu()
    public final boolean isMenuVisible()
    public void setRetainInstance(boolean)
    public void setHasOptionsMenu(boolean)
    public void setMenuVisibility(boolean)
    public void setUserVisibleHint(boolean)
    public boolean getUserVisibleHint()
    public androidx.loader.app.LoaderManager getLoaderManager()
    public void startActivity(android.content.Intent)
    public void startActivity(android.content.Intent,android.os.Bundle)
    public void startActivityForResult(android.content.Intent,int)
    public void startActivityForResult(android.content.Intent,int,android.os.Bundle)
    public void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
    public final void requestPermissions(java.lang.String[],int)
    public boolean shouldShowRequestPermissionRationale(java.lang.String)
    public final android.view.LayoutInflater getLayoutInflater()
    public void registerForContextMenu(android.view.View)
    public void unregisterForContextMenu(android.view.View)
    public void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback)
    public void setExitSharedElementCallback(androidx.core.app.SharedElementCallback)
    public void setEnterTransition(java.lang.Object)
    public void setReturnTransition(java.lang.Object)
    public void setExitTransition(java.lang.Object)
    public void setReenterTransition(java.lang.Object)
    public void setSharedElementEnterTransition(java.lang.Object)
    public void setSharedElementReturnTransition(java.lang.Object)
    public void setAllowEnterTransitionOverlap(boolean)
    public void setAllowReturnTransitionOverlap(boolean)
    public void postponeEnterTransition()
    public final void postponeEnterTransition(long,java.util.concurrent.TimeUnit)
    static final int INITIALIZING
    static final int ATTACHED
    static final int CREATED
    static final int ACTIVITY_CREATED
    static final int STARTED
    static final int RESUMED
kotlinx.coroutines.sync.MutexImpl$TryLockDesc$PrepareOp
kotlin.coroutines.jvm.internal.SuspendFunction
androidx.core.widget.NestedScrollView:
    public boolean dispatchNestedScroll(int,int,int,int,int[],int)
    public boolean isFillViewport()
    public boolean isSmoothScrollingEnabled()
    public final void smoothScrollTo(int,int)
    static final int ANIMATED_SCROLL_GAP
    static final float MAX_SCROLL_FACTOR
    private static final java.lang.String TAG
    private static final int INVALID_POINTER
androidx.fragment.ktx.R$styleable
kotlin.ReplaceWith
androidx.media.MediaSessionManager
android.support.v4.media.RatingCompat$StarStyle
kotlin.LateinitKt
com.google.android.material.shape.ShapePathModel
androidx.activity.OnBackPressedDispatcherKt
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplBase$2
kotlin.coroutines.experimental.migration.ContinuationMigration
androidx.recyclerview.widget.SortedList
android.support.v4.media.session.PlaybackStateCompat$State
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$filterNotNull$1
com.czluciusdev.diceroller.R$plurals
kotlinx.coroutines.flow.FlowKt__MergeKt$flattenConcat$$inlined$unsafeFlow$1$lambda$1
kotlin.io.ByteStreamsKt$iterator$1
androidx.core.ktx.R$string
kotlin.jvm.internal.Ref$LongRef
kotlin.coroutines.jvm.internal.RunSuspend
kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$$inlined$unsafeFlow$1$lambda$1
androidx.appcompat.app.AlertDialog:
    protected void <init>(android.content.Context)
    protected void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener)
    public android.widget.Button getButton(int)
    public void setCustomTitle(android.view.View)
    public void setMessage(java.lang.CharSequence)
    public void setView(android.view.View)
    public void setView(android.view.View,int,int,int,int)
    void setButtonPanelLayoutHint(int)
    public void setButton(int,java.lang.CharSequence,android.os.Message)
    public void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
    public void setButton(int,java.lang.CharSequence,android.graphics.drawable.Drawable,android.content.DialogInterface$OnClickListener)
    public void setIcon(int)
    public void setIcon(android.graphics.drawable.Drawable)
    public void setIconAttribute(int)
    static final int LAYOUT_HINT_NONE
    static final int LAYOUT_HINT_SIDE
androidx.localbroadcastmanager.content.LocalBroadcastManager$ReceiverRecord
androidx.transition.R$layout
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2
com.google.android.material.datepicker.CalendarItemStyle:
    int getLeftInset()
    int getRightInset()
androidx.collection.LruCache:
    public void resize(int)
    public final java.lang.Object remove(java.lang.Object)
    public final void evictAll()
    public final synchronized int size()
    public final synchronized int maxSize()
    public final synchronized int hitCount()
    public final synchronized int missCount()
    public final synchronized int createCount()
    public final synchronized int putCount()
    public final synchronized int evictionCount()
    public final synchronized java.util.Map snapshot()
kotlin.reflect.KMutableProperty2
androidx.navigation.ui.R$id
androidx.customview.R$attr
androidx.documentfile.provider.RawDocumentFile
androidx.swiperefreshlayout.widget.CircleImageView$OvalShadow
androidx.navigation.ui.R$styleable
kotlin.jvm.Strictfp
kotlinx.coroutines.internal.ThreadState
androidx.core.content.ContentResolverCompat
kotlinx.coroutines.flow.FlowKt__MigrationKt$combine$$inlined$unsafeFlow$2
androidx.lifecycle.viewmodel.R
androidx.appcompat.widget.ActivityChooserView$5
androidx.fragment.ktx.R$drawable
androidx.constraintlayout.solver.ArrayLinkedVariables:
    boolean hasAtLeastOnePositiveVariable()
    androidx.constraintlayout.solver.SolverVariable getPivotCandidate()
    int sizeInBytes()
    public void display()
    private static final boolean DEBUG
    private static final int NONE
    private static final boolean FULL_NEW_CHECK
androidx.navigation.common.ktx.R$string
androidx.lifecycle.ReportFragment:
    private static final java.lang.String REPORT_FRAGMENT_TAG
kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl$invoke$3
androidx.lifecycle.extensions.R$styleable
com.google.android.material.snackbar.BaseTransientBottomBar$6
androidx.databinding.adapters.ViewGroupBindingAdapter$1
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$2
androidx.navigation.NavActionBuilder
androidx.navigation.ui.ktx.R$color
androidx.appcompat.resources.R$layout
androidx.navigation.ui.R$dimen
androidx.media.MediaSessionManager$RemoteUserInfoImpl
androidx.databinding.ObservableLong
kotlin.LazyKt__LazyJVMKt:
    public static final kotlin.Lazy lazy(kotlin.LazyThreadSafetyMode,kotlin.jvm.functions.Function0)
    public static final kotlin.Lazy lazy(java.lang.Object,kotlin.jvm.functions.Function0)
    public void <init>()
androidx.navigation.ktx.R$id
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback:
    void <init>(androidx.drawerlayout.widget.DrawerLayout,int)
    private void closeOtherDrawer()
    public void setDragger(androidx.customview.widget.ViewDragHelper)
    public boolean tryCaptureView(android.view.View,int)
    public void onViewDragStateChanged(int)
    public void onViewPositionChanged(android.view.View,int,int,int,int)
    public void onViewCaptured(android.view.View,int)
    public void onViewReleased(android.view.View,float,float)
    public void onEdgeTouched(int,int)
    void peekDrawer()
    public boolean onEdgeLock(int)
    public void onEdgeDragStarted(int,int)
    public int getViewHorizontalDragRange(android.view.View)
    public int clampViewPositionHorizontal(android.view.View,int,int)
    public int clampViewPositionVertical(android.view.View,int,int)
    private final int mAbsGravity
    private androidx.customview.widget.ViewDragHelper mDragger
    private final java.lang.Runnable mPeekRunnable
    final synthetic androidx.drawerlayout.widget.DrawerLayout this$0
androidx.fragment.app.FragmentViewModelLazyKt$viewModels$2
androidx.lifecycle.LifecycleService
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$mapIndexedTo$3
kotlin.random.XorWowRandom
kotlin.collections.ArraysKt___ArraysKt$groupingBy$1
kotlin.jvm.internal.InlineMarker
androidx.activity.R$drawable
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$4
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenComparator$1
androidx.core.graphics.PaintKt
androidx.recyclerview.widget.ListAdapter
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1
androidx.databinding.adapters.ViewGroupBindingAdapter$OnChildViewAdded
androidx.viewpager2.adapter.FragmentStateAdapter$1
kotlin.jvm.internal.markers.KMutableListIterator
androidx.lifecycle.SavedStateViewModelFactory:
    public void <init>(android.app.Application,androidx.savedstate.SavedStateRegistryOwner)
com.google.android.material.circularreveal.CircularRevealHelper$Delegate
androidx.navigation.fragment.DialogFragmentNavigator$Destination:
    public void <init>(androidx.navigation.NavigatorProvider)
kotlin.coroutines.experimental.migration.CoroutinesMigrationKt
androidx.navigation.ui.ktx.R$bool
kotlin.ParameterName
com.czluciusdev.diceroller.R$attr
androidx.navigation.ActionOnlyNavDirections
kotlin.collections.CollectionsKt__IteratorsJVMKt$iterator$1
androidx.core.view.ViewParentCompat:
    private void <init>()
    public static boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int)
    public static void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int)
    public static void onStopNestedScroll(android.view.ViewParent,android.view.View)
    public static void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int)
    public static void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int,int)
    public static void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[])
    public static void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int)
    private static int[] getTempNestedScrollConsumed()
    private static final java.lang.String TAG
    private static int[] sTempNestedScrollConsumed
kotlin.contracts.ContractBuilder$DefaultImpls
com.czluciusdev.diceroller.DiceImage:
    public android.view.View _$_findCachedViewById(int)
    public void _$_clearFindViewByIdCache()
    private java.util.HashMap _$_findViewCache
androidx.activity.R$styleable
androidx.databinding.adapters.Converters
kotlinx.coroutines.flow.FlowKt__MigrationKt$combine$$inlined$unsafeFlow$2$lambda$2
com.google.android.material.snackbar.BaseTransientBottomBar$BaseCallback
com.google.android.material.badge.BadgeDrawable
kotlin.jvm.functions.Function4
androidx.core.widget.PopupWindowCompat:
    private void <init>()
    public static boolean getOverlapAnchor(android.widget.PopupWindow)
    public static int getWindowLayoutType(android.widget.PopupWindow)
    private static final java.lang.String TAG
    private static java.lang.reflect.Method sGetWindowLayoutTypeMethod
    private static boolean sGetWindowLayoutTypeMethodAttempted
androidx.core.content.pm.PermissionInfoCompat
androidx.databinding.adapters.SearchViewBindingAdapter$OnQueryTextSubmit
kotlin.io.SerializableKt
androidx.core.view.ViewCompat$ScrollIndicators
kotlinx.coroutines.flow.FlowKt__DistinctKt$distinctUntilChangedBy$$inlined$distinctUntilChangedBy$FlowKt__DistinctKt$1$2$1
androidx.core.view.NestedScrollingParentHelper:
    public void onStopNestedScroll(android.view.View)
kotlin.jvm.internal.ByteSpreadBuilder
androidx.transition.Slide$CalculateSlide
androidx.core.view.accessibility.AccessibilityWindowInfoCompat
com.google.android.material.bottomnavigation.BottomNavigationItemView$1
androidx.viewpager2.widget.ViewPager2$LinearLayoutManagerImpl
kotlinx.coroutines.channels.AbstractChannel$ReceiveSelect
androidx.constraintlayout.solver.widgets.ConstraintTableLayout
androidx.core.location.LocationManagerCompat
androidx.appcompat.widget.PopupMenu
androidx.appcompat.resources.R$integer
com.google.android.material.textfield.TextInputLayout$BoxBackgroundMode
kotlinx.coroutines.flow.FlowKt__MergeKt$map$$inlined$unsafeTransform$1
androidx.appcompat.view.menu.CascadingMenuPopup:
    public android.os.Parcelable onSaveInstanceState()
    public void onRestoreInstanceState(android.os.Parcelable)
    static final int HORIZ_POSITION_LEFT
    static final int HORIZ_POSITION_RIGHT
    static final int SUBMENU_TIMEOUT_MS
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$fold$1
kotlin.text.Typography
kotlinx.coroutines.ExceptionsKt
kotlin.ULongArray
androidx.constraintlayout.widget.ConstraintSet:
    private void createHorizontalChain(int,int,int,int,int[],float[],int,int,int)
    private androidx.constraintlayout.widget.ConstraintSet$Constraint get(int)
    private java.lang.String sideToString(int)
    public androidx.constraintlayout.widget.ConstraintSet$Constraint getParameters(int)
    public void clone(android.content.Context,int)
    public void clone(androidx.constraintlayout.widget.ConstraintSet)
    public void clone(androidx.constraintlayout.widget.ConstraintLayout)
    public void applyTo(androidx.constraintlayout.widget.ConstraintLayout)
    public void center(int,int,int,int,int,int,int,float)
    public void centerHorizontally(int,int,int,int,int,int,int,float)
    public void centerHorizontallyRtl(int,int,int,int,int,int,int,float)
    public void centerVertically(int,int,int,int,int,int,int,float)
    public void createVerticalChain(int,int,int,int,int[],float[],int)
    public void createHorizontalChain(int,int,int,int,int[],float[],int)
    public void createHorizontalChainRtl(int,int,int,int,int[],float[],int)
    public void connect(int,int,int,int,int)
    public void connect(int,int,int,int)
    public void centerHorizontally(int,int)
    public void centerHorizontallyRtl(int,int)
    public void centerVertically(int,int)
    public void clear(int)
    public void clear(int,int)
    public void setMargin(int,int,int)
    public void setGoneMargin(int,int,int)
    public void setHorizontalBias(int,float)
    public void setVerticalBias(int,float)
    public void setDimensionRatio(int,java.lang.String)
    public void setVisibility(int,int)
    public void setAlpha(int,float)
    public boolean getApplyElevation(int)
    public void setApplyElevation(int,boolean)
    public void setElevation(int,float)
    public void setRotation(int,float)
    public void setRotationX(int,float)
    public void setRotationY(int,float)
    public void setScaleX(int,float)
    public void setScaleY(int,float)
    public void setTransformPivotX(int,float)
    public void setTransformPivotY(int,float)
    public void setTransformPivot(int,float,float)
    public void setTranslationX(int,float)
    public void setTranslationY(int,float)
    public void setTranslation(int,float,float)
    public void setTranslationZ(int,float)
    public void constrainHeight(int,int)
    public void constrainWidth(int,int)
    public void constrainCircle(int,int,int,float)
    public void constrainMaxHeight(int,int)
    public void constrainMaxWidth(int,int)
    public void constrainMinHeight(int,int)
    public void constrainMinWidth(int,int)
    public void constrainPercentWidth(int,float)
    public void constrainPercentHeight(int,float)
    public void constrainDefaultHeight(int,int)
    public void constrainDefaultWidth(int,int)
    public void setHorizontalWeight(int,float)
    public void setVerticalWeight(int,float)
    public void setHorizontalChainStyle(int,int)
    public void setVerticalChainStyle(int,int)
    public void addToHorizontalChain(int,int,int)
    public void addToHorizontalChainRTL(int,int,int)
    public void addToVerticalChain(int,int,int)
    public void removeFromVerticalChain(int)
    public void removeFromHorizontalChain(int)
    public void create(int,int)
    public varargs void createBarrier(int,int,int[])
    public void setGuidelineBegin(int,int)
    public void setGuidelineEnd(int,int)
    public void setGuidelinePercent(int,float)
    public void setBarrierType(int,int)
    private static final java.lang.String TAG
    public static final int UNSET
    public static final int MATCH_CONSTRAINT
    public static final int WRAP_CONTENT
    public static final int MATCH_CONSTRAINT_WRAP
    public static final int MATCH_CONSTRAINT_SPREAD
    public static final int PARENT_ID
    public static final int HORIZONTAL
    public static final int VERTICAL
    public static final int HORIZONTAL_GUIDELINE
    public static final int VERTICAL_GUIDELINE
    public static final int VISIBLE
    public static final int INVISIBLE
    public static final int GONE
    public static final int LEFT
    public static final int RIGHT
    public static final int TOP
    public static final int BOTTOM
    public static final int BASELINE
    public static final int START
    public static final int END
    public static final int CHAIN_SPREAD
    public static final int CHAIN_SPREAD_INSIDE
    public static final int CHAIN_PACKED
    private static final boolean DEBUG
    private static final int BARRIER_TYPE
    private static final int BASELINE_TO_BASELINE
    private static final int BOTTOM_MARGIN
    private static final int BOTTOM_TO_BOTTOM
    private static final int BOTTOM_TO_TOP
    private static final int DIMENSION_RATIO
    private static final int EDITOR_ABSOLUTE_X
    private static final int EDITOR_ABSOLUTE_Y
    private static final int END_MARGIN
    private static final int END_TO_END
    private static final int END_TO_START
    private static final int GONE_BOTTOM_MARGIN
    private static final int GONE_END_MARGIN
    private static final int GONE_LEFT_MARGIN
    private static final int GONE_RIGHT_MARGIN
    private static final int GONE_START_MARGIN
    private static final int GONE_TOP_MARGIN
    private static final int GUIDE_BEGIN
    private static final int GUIDE_END
    private static final int GUIDE_PERCENT
    private static final int HORIZONTAL_BIAS
    private static final int LAYOUT_HEIGHT
    private static final int LAYOUT_VISIBILITY
    private static final int LAYOUT_WIDTH
    private static final int LEFT_MARGIN
    private static final int LEFT_TO_LEFT
    private static final int LEFT_TO_RIGHT
    private static final int ORIENTATION
    private static final int RIGHT_MARGIN
    private static final int RIGHT_TO_LEFT
    private static final int RIGHT_TO_RIGHT
    private static final int START_MARGIN
    private static final int START_TO_END
    private static final int START_TO_START
    private static final int TOP_MARGIN
    private static final int TOP_TO_BOTTOM
    private static final int TOP_TO_TOP
    private static final int VERTICAL_BIAS
    private static final int VIEW_ID
    private static final int HORIZONTAL_WEIGHT
    private static final int VERTICAL_WEIGHT
    private static final int HORIZONTAL_STYLE
    private static final int VERTICAL_STYLE
    private static final int ALPHA
    private static final int ELEVATION
    private static final int ROTATION_X
    private static final int ROTATION_Y
    private static final int SCALE_X
    private static final int SCALE_Y
    private static final int TRANSFORM_PIVOT_X
    private static final int TRANSFORM_PIVOT_Y
    private static final int TRANSLATION_X
    private static final int TRANSLATION_Y
    private static final int TRANSLATION_Z
    private static final int WIDTH_DEFAULT
    private static final int HEIGHT_DEFAULT
    private static final int WIDTH_MAX
    private static final int HEIGHT_MAX
    private static final int WIDTH_MIN
    private static final int HEIGHT_MIN
    private static final int ROTATION
    private static final int CIRCLE
    private static final int CIRCLE_RADIUS
    private static final int CIRCLE_ANGLE
    private static final int WIDTH_PERCENT
    private static final int HEIGHT_PERCENT
    private static final int CHAIN_USE_RTL
    private static final int BARRIER_DIRECTION
    private static final int CONSTRAINT_REFERENCED_IDS
    private static final int BARRIER_ALLOWS_GONE_WIDGETS
    private static final int UNUSED
androidx.core.provider.FontsContractCompat$4$6
androidx.appcompat.content.res.AppCompatResources:
    private void <init>()
    private static final java.lang.String LOG_TAG
androidx.core.graphics.ImageDecoderKt
kotlinx.coroutines.sync.MutexImpl$UnlockOp
androidx.activity.R$color
kotlinx.android.parcel.TypeParceler
kotlin.jvm.functions.Function20
androidx.annotation.RequiresApi
kotlinx.android.parcel.RawValue
kotlinx.coroutines.InvokeOnCancelling
androidx.fragment.app.FragmentLayoutInflaterFactory:
    private static final java.lang.String TAG
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$$inlined$unsafeFlow$1$lambda$1
androidx.core.graphics.PathKt
androidx.databinding.adapters.SearchViewBindingAdapter$OnSuggestionClick
kotlin.jvm.internal.LocalVariableReference
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$2
androidx.core.app.NotificationCompat$DecoratedCustomViewStyle
androidx.transition.R$dimen
androidx.viewpager2.widget.ViewPager2$Orientation
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combine$1$3
com.czluciusdev.dice_roller.DataBindingInfo
androidx.viewbinding.ViewBinding
androidx.viewpager.R$color
androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout
kotlin.internal.AccessibleLateinitPropertyLiteral
kotlin.jvm.internal.ShortSpreadBuilder
androidx.recyclerview.widget.AsyncListUtil$2
androidx.recyclerview.widget.AsyncDifferConfig$Builder
androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams:
    public void <init>(android.view.ViewGroup$MarginLayoutParams)
android.support.v4.media.MediaBrowserCompat$SubscriptionCallback
kotlinx.coroutines.flow.FlowKt__MigrationKt$combine$$inlined$combine$1$2
kotlinx.coroutines.flow.FlowKt__TransformKt$unsafeTransform$$inlined$unsafeFlow$2
kotlinx.coroutines.CommonPool
kotlinx.coroutines.channels.ProduceKt$awaitClose$1
androidx.fragment.app.FragmentTransactionKt
androidx.appcompat.view.menu.MenuView$ItemView:
    public abstract void setTitle(java.lang.CharSequence)
    public abstract void setEnabled(boolean)
    public abstract void setCheckable(boolean)
    public abstract void setChecked(boolean)
    public abstract void setShortcut(boolean,char)
    public abstract void setIcon(android.graphics.drawable.Drawable)
    public abstract boolean showsIcon()
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi24
androidx.transition.ChangeTransform$2
androidx.core.view.ViewCompat$2
androidx.core.graphics.drawable.ColorDrawableKt
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$2
androidx.loader.content.ModernAsyncTask$AsyncTaskResult
kotlin.collections.AbstractMap$keys$1$iterator$1
kotlinx.coroutines.flow.FlowKt__TransformKt$unsafeTransform$$inlined$unsafeFlow$1$lambda$1
kotlin.jvm.internal.BooleanCompanionObject
androidx.databinding.ObservableBoolean$1
androidx.navigation.fragment.R$drawable
androidx.lifecycle.AbstractSavedStateViewModelFactory
androidx.transition.GhostView
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2$1
kotlinx.coroutines.CommonPool$createPlainPool$1
androidx.core.text.HtmlKt
com.google.android.material.internal.ScrimInsetsFrameLayout$1
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback
kotlinx.coroutines.channels.ProduceKt$awaitClose$4$1
androidx.lifecycle.Lifecycling$1:
    void <init>(androidx.lifecycle.LifecycleEventObserver)
androidx.constraintlayout.solver.widgets.ConstraintTableLayout$HorizontalSlice
com.google.android.material.snackbar.BaseTransientBottomBar$11
kotlinx.coroutines.channels.BroadcastChannel$DefaultImpls
kotlin.sequences.SequencesKt__SequencesKt$generateSequence$2
androidx.core.ktx.R$styleable
androidx.core.content.ContextCompat$MainHandlerExecutor
androidx.core.graphics.drawable.IconKt
androidx.core.view.accessibility.AccessibilityViewCommand$SetTextArguments:
    public java.lang.CharSequence getText()
androidx.fragment.app.FragmentTransaction$Op:
    void <init>(int,androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State)
kotlinx.coroutines.flow.internal.ChannelFlow$collect$2
androidx.core.view.ViewConfigurationCompat:
    public static int getScaledPagingTouchSlop(android.view.ViewConfiguration)
    public static boolean hasPermanentMenuKey(android.view.ViewConfiguration)
    private void <init>()
    private static final java.lang.String TAG
kotlin.reflect.KType
androidx.constraintlayout.widget.R$attr
androidx.core.util.SparseIntArrayKt$keyIterator$1
androidx.databinding.ObservableDouble
kotlin.UIntArrayKt
kotlinx.coroutines.flow.FlowKt__ErrorsKt$onErrorCollect$2
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1
androidx.databinding.library.R$color
kotlinx.coroutines.channels.Send
androidx.transition.Slide$1
androidx.legacy.coreutils.R$drawable
androidx.annotation.DimenRes
androidx.fragment.R$layout
androidx.core.app.NotificationCompat$MessagingStyle
androidx.appcompat.app.ActionBar$LayoutParams:
    public void <init>(int,int,int)
    public void <init>(int)
kotlin.coroutines.experimental.migration.ExperimentalContextMigration
kotlin.native.concurrent.SharedImmutable
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory$EdgeDirection
androidx.loader.R$drawable
androidx.databinding.ObservableArrayList
androidx.navigation.ui.NavigationUI$4
androidx.constraintlayout.solver.widgets.ConstraintWidget:
    public void <init>(int,int,int,int)
    public void <init>(int,int)
    public int getMaxHeight()
    public int getMaxWidth()
    public boolean isRoot()
    public boolean isRootContainer()
    public boolean isInsideConstraintLayout()
    public boolean hasAncestor(androidx.constraintlayout.solver.widgets.ConstraintWidget)
    public androidx.constraintlayout.solver.widgets.WidgetContainer getRootWidgetContainer()
    public boolean isWidthWrapContent()
    public boolean isHeightWrapContent()
    public java.lang.String getType()
    public void setType(java.lang.String)
    public void setDebugSolverName(androidx.constraintlayout.solver.LinearSystem,java.lang.String)
    int getInternalDrawX()
    int getInternalDrawY()
    public int getInternalDrawRight()
    public int getInternalDrawBottom()
    public int getOptimizerWrapWidth()
    public int getOptimizerWrapHeight()
    public int getDrawWidth()
    public int getDrawHeight()
    public int getDrawBottom()
    public int getDrawRight()
    public int getMinWidth()
    public int getMinHeight()
    public int getLeft()
    public int getTop()
    public float getHorizontalBiasPercent()
    public float getVerticalBiasPercent()
    public void setGoneMargin(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,int)
    public void forceUpdateDrawPosition()
    public void setDrawOrigin(int,int)
    public void setDrawX(int)
    public void setDrawY(int)
    public void setDrawWidth(int)
    public void setDrawHeight(int)
    public void setLength(int,int)
    public void setDimensionRatio(float,int)
    public float getDimensionRatio()
    public int getDimensionRatioSide()
    public void setDimension(int,int)
    public void setContainerItemSkip(int)
    public int getContainerItemSkip()
    public int getHorizontalChainStyle()
    public int getVerticalChainStyle()
    public void connectedTo(androidx.constraintlayout.solver.widgets.ConstraintWidget)
    public void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.widgets.ConstraintAnchor,int,int)
    public void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.widgets.ConstraintAnchor,int)
    public void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.widgets.ConstraintAnchor,int,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength,int)
    public void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,int)
    public void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type)
    public void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,int,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength)
    public void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,int,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength,int)
    public void resetAllConstraints()
    public void resetAnchor(androidx.constraintlayout.solver.widgets.ConstraintAnchor)
    public void resetAnchors(int)
    public void disconnectWidget(androidx.constraintlayout.solver.widgets.ConstraintWidget)
    public void disconnectUnlockedWidget(androidx.constraintlayout.solver.widgets.ConstraintWidget)
    public androidx.constraintlayout.solver.widgets.ConstraintWidget getHorizontalChainControlWidget()
    public androidx.constraintlayout.solver.widgets.ConstraintWidget getVerticalChainControlWidget()
    int mDistToTop
    int mDistToLeft
    int mDistToRight
    int mDistToBottom
    boolean mLeftHasCentered
    boolean mRightHasCentered
    boolean mTopHasCentered
    boolean mBottomHasCentered
    private static final boolean AUTOTAG_CENTER
    protected static final int SOLVER
    protected static final int DIRECT
    public static final int MATCH_CONSTRAINT_SPREAD
    public static final int MATCH_CONSTRAINT_WRAP
    public static final int MATCH_CONSTRAINT_PERCENT
    public static final int MATCH_CONSTRAINT_RATIO
    public static final int MATCH_CONSTRAINT_RATIO_RESOLVED
    public static final int UNKNOWN
    public static final int HORIZONTAL
    public static final int VERTICAL
    public static final int VISIBLE
    public static final int INVISIBLE
    public static final int GONE
    public static final int CHAIN_SPREAD
    public static final int CHAIN_SPREAD_INSIDE
    public static final int CHAIN_PACKED
    private static final int WRAP
    protected static final int ANCHOR_LEFT
    protected static final int ANCHOR_RIGHT
    protected static final int ANCHOR_TOP
    protected static final int ANCHOR_BOTTOM
    protected static final int ANCHOR_BASELINE
    static final int DIMENSION_HORIZONTAL
    static final int DIMENSION_VERTICAL
androidx.navigation.ViewKt
androidx.recyclerview.widget.SnapHelper:
    static final float MILLISECONDS_PER_INCH
com.google.android.material.animation.AnimationUtils:
    public void <init>()
    public static int lerp(int,int,float)
kotlin.io.FileTreeWalk$WalkState
com.google.android.material.expandable.ExpandableWidgetHelper:
    public boolean setExpanded(boolean)
kotlin.coroutines.experimental.migration.ExperimentalContextMigration$Key
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer:
    public void <init>(int,int,int,int)
    public void <init>(int,int)
    public void fillMetrics(androidx.constraintlayout.solver.Metrics)
    public java.lang.String getType()
    public void setPadding(int,int,int,int)
    public void resetGraph()
    public java.util.ArrayList getVerticalGuidelines()
    public java.util.ArrayList getHorizontalGuidelines()
    public androidx.constraintlayout.solver.LinearSystem getSystem()
    public java.util.List getWidgetGroups()
    private static final boolean USE_SNAPSHOT
    private static final int MAX_ITERATIONS
    private static final boolean DEBUG
    private static final boolean DEBUG_LAYOUT
    static final boolean DEBUG_GRAPH
android.support.v4.media.MediaBrowserCompatApi26
kotlin.jvm.internal.Intrinsics:
    public static java.lang.String stringPlus(java.lang.String,java.lang.Object)
    public static void checkNotNull(java.lang.Object)
    public static void checkNotNull(java.lang.Object,java.lang.String)
    public static void throwNpe(java.lang.String)
    public static void throwJavaNpe()
    public static void throwJavaNpe(java.lang.String)
    public static void throwAssert()
    public static void throwAssert(java.lang.String)
    public static void throwIllegalArgument()
    public static void throwIllegalArgument(java.lang.String)
    public static void throwIllegalState()
    public static void throwIllegalState(java.lang.String)
    public static void checkNotNullExpressionValue(java.lang.Object,java.lang.String)
    public static void checkReturnedValueIsNotNull(java.lang.Object,java.lang.String,java.lang.String)
    public static void checkReturnedValueIsNotNull(java.lang.Object,java.lang.String)
    public static void checkFieldIsNotNull(java.lang.Object,java.lang.String,java.lang.String)
    public static void checkFieldIsNotNull(java.lang.Object,java.lang.String)
    public static void checkNotNullParameter(java.lang.Object,java.lang.String)
    public static int compare(long,long)
    public static int compare(int,int)
    public static boolean areEqual(java.lang.Double,java.lang.Double)
    public static boolean areEqual(java.lang.Double,double)
    public static boolean areEqual(double,java.lang.Double)
    public static boolean areEqual(java.lang.Float,java.lang.Float)
    public static boolean areEqual(java.lang.Float,float)
    public static boolean areEqual(float,java.lang.Float)
    public static void throwUndefinedForReified()
    public static void throwUndefinedForReified(java.lang.String)
    public static void reifiedOperationMarker(int,java.lang.String)
    public static void reifiedOperationMarker(int,java.lang.String,java.lang.String)
    public static void needClassReification()
    public static void needClassReification(java.lang.String)
    public static void checkHasClass(java.lang.String)
    public static void checkHasClass(java.lang.String,java.lang.String)
androidx.fragment.app.ViewKt
kotlinx.coroutines.Empty
kotlin.random.AbstractPlatformRandom:
    public int nextInt(int)
    public long nextLong()
    public boolean nextBoolean()
    public double nextDouble()
    public float nextFloat()
    public byte[] nextBytes(byte[])
kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3
androidx.slidingpanelayout.widget.SlidingPaneLayout$DisableLayerRunnable
kotlinx.coroutines.flow.FlowKt__MergeKt
kotlinx.coroutines.ResumeOnCompletion
androidx.activity.ktx.R$color
androidx.appcompat.view.menu.SubMenuBuilder:
    public void setShortcutsVisible(boolean)
androidx.legacy.v4.R$id
com.google.android.material.internal.ManufacturerUtils
kotlinx.android.parcel.WriteWith
kotlinx.coroutines.channels.ConflatedBroadcastChannel$Closed
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combine$3$1
kotlin.jvm.internal.IntCompanionObject
androidx.navigation.Navigation$1
kotlinx.coroutines.flow.FlowKt__DistinctKt$distinctUntilChangedBy$$inlined$unsafeFlow$2$1
com.google.android.material.circularreveal.CircularRevealCompat:
    private void <init>()
    public static android.animation.Animator createCircularReveal(com.google.android.material.circularreveal.CircularRevealWidget,float,float,float,float)
androidx.annotation.RequiresPermission$Read
com.google.android.material.R$style:
    private void <init>()
androidx.versionedparcelable.CustomVersionedParcelable:
    public void onPreParceling(boolean)
    public void onPostParceling()
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$minBy$1
kotlin.text.StringsKt__StringBuilderJVMKt:
    private static final void set(java.lang.StringBuilder,int,char)
    public static final java.lang.StringBuilder clear(java.lang.StringBuilder)
    public static final java.lang.Appendable appendln(java.lang.Appendable)
    private static final java.lang.Appendable appendln(java.lang.Appendable,java.lang.CharSequence)
    private static final java.lang.Appendable appendln(java.lang.Appendable,char)
    public static final java.lang.StringBuilder appendln(java.lang.StringBuilder)
    private static final java.lang.StringBuilder appendln(java.lang.StringBuilder,java.lang.StringBuffer)
    private static final java.lang.StringBuilder appendln(java.lang.StringBuilder,java.lang.CharSequence)
    private static final java.lang.StringBuilder appendln(java.lang.StringBuilder,java.lang.String)
    private static final java.lang.StringBuilder appendln(java.lang.StringBuilder,java.lang.Object)
    private static final java.lang.StringBuilder appendln(java.lang.StringBuilder,java.lang.StringBuilder)
    private static final java.lang.StringBuilder appendln(java.lang.StringBuilder,char[])
    private static final java.lang.StringBuilder appendln(java.lang.StringBuilder,char)
    private static final java.lang.StringBuilder appendln(java.lang.StringBuilder,boolean)
    private static final java.lang.StringBuilder appendln(java.lang.StringBuilder,int)
    private static final java.lang.StringBuilder appendln(java.lang.StringBuilder,short)
    private static final java.lang.StringBuilder appendln(java.lang.StringBuilder,byte)
    private static final java.lang.StringBuilder appendln(java.lang.StringBuilder,long)
    private static final java.lang.StringBuilder appendln(java.lang.StringBuilder,float)
    private static final java.lang.StringBuilder appendln(java.lang.StringBuilder,double)
    public void <init>()
kotlin.time.FormatToDecimalsKt
kotlin.collections.SetsKt___SetsKt
kotlinx.coroutines.flow.FlowKt__DistinctKt$distinctUntilChangedBy$$inlined$unsafeFlow$1$lambda$1$1
androidx.appcompat.widget.ShareActionProvider$OnShareTargetSelectedListener
kotlinx.coroutines.flow.FlowKt__TransformKt$unsafeTransform$$inlined$unsafeFlow$7$lambda$1$1
kotlinx.coroutines.internal.SystemPropsKt
kotlin.jvm.internal.MagicApiIntrinsics
androidx.cursoradapter.widget.CursorAdapter:
    public void <init>(android.content.Context,android.database.Cursor)
    public void <init>(android.content.Context,android.database.Cursor,int)
    protected void init(android.content.Context,android.database.Cursor,boolean)
    public boolean hasStableIds()
    public android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)
    public android.widget.FilterQueryProvider getFilterQueryProvider()
    public void setFilterQueryProvider(android.widget.FilterQueryProvider)
    protected android.widget.FilterQueryProvider mFilterQueryProvider
    public static final int FLAG_AUTO_REQUERY
    public static final int FLAG_REGISTER_CONTENT_OBSERVER
androidx.appcompat.resources.R$color
com.google.android.material.navigation.NavigationView$2
androidx.cardview.R$color
kotlin.collections.AbstractList$SubList
androidx.navigation.ui.AppBarConfigurationKt$AppBarConfiguration$1
kotlinx.coroutines.BuildersKt
kotlinx.coroutines.CancelledContinuation
kotlinx.coroutines.internal.MainDispatchersKt
androidx.databinding.library.BuildConfig
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$1
androidx.appcompat.widget.ActivityChooserModel$OnChooseActivityListener
kotlin.jvm.internal.FunctionImpl
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$3
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$2$1
kotlin.NumbersKt__NumbersJVMKt
androidx.lifecycle.extensions.R
androidx.activity.ktx.R$style
androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject
kotlin.jvm.PurelyImplements
android.support.v4.media.MediaMetadataCompat:
    void <init>(android.os.Bundle)
    public boolean containsKey(java.lang.String)
    public java.lang.CharSequence getText(java.lang.String)
    public java.lang.String getString(java.lang.String)
    public long getLong(java.lang.String)
    public android.support.v4.media.RatingCompat getRating(java.lang.String)
    public android.graphics.Bitmap getBitmap(java.lang.String)
    public android.support.v4.media.MediaDescriptionCompat getDescription()
    public int size()
    public java.util.Set keySet()
    public android.os.Bundle getBundle()
    public java.lang.Object getMediaMetadata()
    private android.support.v4.media.MediaDescriptionCompat mDescription
    private static final java.lang.String TAG
    public static final java.lang.String METADATA_KEY_TITLE
    public static final java.lang.String METADATA_KEY_ARTIST
    public static final java.lang.String METADATA_KEY_DURATION
    public static final java.lang.String METADATA_KEY_ALBUM
    public static final java.lang.String METADATA_KEY_AUTHOR
    public static final java.lang.String METADATA_KEY_WRITER
    public static final java.lang.String METADATA_KEY_COMPOSER
    public static final java.lang.String METADATA_KEY_COMPILATION
    public static final java.lang.String METADATA_KEY_DATE
    public static final java.lang.String METADATA_KEY_YEAR
    public static final java.lang.String METADATA_KEY_GENRE
    public static final java.lang.String METADATA_KEY_TRACK_NUMBER
    public static final java.lang.String METADATA_KEY_NUM_TRACKS
    public static final java.lang.String METADATA_KEY_DISC_NUMBER
    public static final java.lang.String METADATA_KEY_ALBUM_ARTIST
    public static final java.lang.String METADATA_KEY_ART
    public static final java.lang.String METADATA_KEY_ART_URI
    public static final java.lang.String METADATA_KEY_ALBUM_ART
    public static final java.lang.String METADATA_KEY_ALBUM_ART_URI
    public static final java.lang.String METADATA_KEY_USER_RATING
    public static final java.lang.String METADATA_KEY_RATING
    public static final java.lang.String METADATA_KEY_DISPLAY_TITLE
    public static final java.lang.String METADATA_KEY_DISPLAY_SUBTITLE
    public static final java.lang.String METADATA_KEY_DISPLAY_DESCRIPTION
    public static final java.lang.String METADATA_KEY_DISPLAY_ICON
    public static final java.lang.String METADATA_KEY_DISPLAY_ICON_URI
    public static final java.lang.String METADATA_KEY_MEDIA_ID
    public static final java.lang.String METADATA_KEY_MEDIA_URI
    public static final java.lang.String METADATA_KEY_BT_FOLDER_TYPE
    public static final java.lang.String METADATA_KEY_ADVERTISEMENT
    public static final java.lang.String METADATA_KEY_DOWNLOAD_STATUS
    static final int METADATA_TYPE_LONG
    static final int METADATA_TYPE_TEXT
    static final int METADATA_TYPE_BITMAP
    static final int METADATA_TYPE_RATING
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1
kotlin.sequences.SequencesKt__SequenceBuilderKt$buildSequence$$inlined$Sequence$1
androidx.recyclerview.widget.AsyncListUtil
kotlin.ranges.CharRange
kotlin.collections.ArraysUtilJVM
androidx.navigation.ActivityNavigator$Extras:
    void <init>(int,androidx.core.app.ActivityOptionsCompat)
kotlinx.coroutines.flow.FlowKt__TransformKt$unsafeTransform$$inlined$unsafeFlow$7$1
kotlin.sequences.ConstrainedOnceSequence
androidx.databinding.ViewDataBinding:
    public static int getBuildSdkInt()
    protected static void executeBindingsOn(androidx.databinding.ViewDataBinding)
    protected static androidx.databinding.ViewDataBinding bind(java.lang.Object,android.view.View,int)
    protected static boolean parse(java.lang.String,boolean)
    protected static byte parse(java.lang.String,byte)
    protected static short parse(java.lang.String,short)
    protected static int parse(java.lang.String,int)
    protected static long parse(java.lang.String,long)
    protected static float parse(java.lang.String,float)
    protected static double parse(java.lang.String,double)
    protected static char parse(java.lang.String,char)
    protected static int getColorFromResource(android.view.View,int)
    protected static android.content.res.ColorStateList getColorStateListFromResource(android.view.View,int)
    protected static android.graphics.drawable.Drawable getDrawableFromResource(android.view.View,int)
    protected static java.lang.Object getFromArray(java.lang.Object[],int)
    protected static void setTo(java.lang.Object[],int,java.lang.Object)
    protected static boolean getFromArray(boolean[],int)
    protected static void setTo(boolean[],int,boolean)
    protected static byte getFromArray(byte[],int)
    protected static void setTo(byte[],int,byte)
    protected static short getFromArray(short[],int)
    protected static void setTo(short[],int,short)
    protected static char getFromArray(char[],int)
    protected static void setTo(char[],int,char)
    protected static int getFromArray(int[],int)
    protected static void setTo(int[],int,int)
    protected static long getFromArray(long[],int)
    protected static void setTo(long[],int,long)
    protected static float getFromArray(float[],int)
    protected static void setTo(float[],int,float)
    protected static double getFromArray(double[],int)
    protected static void setTo(double[],int,double)
    protected static java.lang.Object getFromList(java.util.List,int)
    protected static void setTo(java.util.List,int,java.lang.Object)
    protected static java.lang.Object getFromList(android.util.SparseArray,int)
    protected static void setTo(android.util.SparseArray,int,java.lang.Object)
    protected static java.lang.Object getFromList(android.util.LongSparseArray,int)
    protected static void setTo(android.util.LongSparseArray,int,java.lang.Object)
    protected static java.lang.Object getFromList(androidx.collection.LongSparseArray,int)
    protected static void setTo(androidx.collection.LongSparseArray,int,java.lang.Object)
    protected static boolean getFromList(android.util.SparseBooleanArray,int)
    protected static void setTo(android.util.SparseBooleanArray,int,boolean)
    protected static int getFromList(android.util.SparseIntArray,int)
    protected static void setTo(android.util.SparseIntArray,int,int)
    protected static long getFromList(android.util.SparseLongArray,int)
    protected static void setTo(android.util.SparseLongArray,int,long)
    protected static java.lang.Object getFrom(java.util.Map,java.lang.Object)
    protected static void setTo(java.util.Map,java.lang.Object,java.lang.Object)
    protected static void setBindingInverseListener(androidx.databinding.ViewDataBinding,androidx.databinding.InverseBindingListener,androidx.databinding.ViewDataBinding$PropertyChangedInverseListener)
    protected static int safeUnbox(java.lang.Integer)
    protected static long safeUnbox(java.lang.Long)
    protected static short safeUnbox(java.lang.Short)
    protected static byte safeUnbox(java.lang.Byte)
    protected static char safeUnbox(java.lang.Character)
    protected static double safeUnbox(java.lang.Double)
    protected static float safeUnbox(java.lang.Float)
    protected static boolean safeUnbox(java.lang.Boolean)
    protected static java.lang.Object[] mapBindings(androidx.databinding.DataBindingComponent,android.view.View[],int,androidx.databinding.ViewDataBinding$IncludedLayouts,android.util.SparseIntArray)
    protected static androidx.databinding.ViewDataBinding inflateInternal(android.view.LayoutInflater,int,android.view.ViewGroup,boolean,java.lang.Object)
    protected void setRootTag(android.view.View[])
    public abstract boolean setVariable(int,java.lang.Object)
    public androidx.lifecycle.LifecycleOwner getLifecycleOwner()
    public void addOnRebindCallback(androidx.databinding.OnRebindCallback)
    public void removeOnRebindCallback(androidx.databinding.OnRebindCallback)
    void forceExecuteBindings()
    public abstract void invalidateAll()
    public void unbind()
    protected java.lang.Object getObservedField(int)
    protected boolean updateRegistration(int,androidx.databinding.Observable)
    protected boolean updateRegistration(int,androidx.databinding.ObservableList)
    protected boolean updateRegistration(int,androidx.databinding.ObservableMap)
    protected void ensureBindingComponentIsNotNull(java.lang.Class)
    protected void setContainedBinding(androidx.databinding.ViewDataBinding)
    private static final int REBIND
    private static final int HALTED
    private static final int REBOUND
    public static final java.lang.String BINDING_TAG_PREFIX
kotlin.DeprecationLevel
androidx.recyclerview.widget.DefaultItemAnimator:
    private static final boolean DEBUG
kotlinx.coroutines.InvokeOnCancel
androidx.core.view.ScaleGestureDetectorCompat
androidx.core.view.ViewGroupCompat:
    private void <init>()
    public static boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
    public static void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean)
    public static int getLayoutMode(android.view.ViewGroup)
    public static void setLayoutMode(android.view.ViewGroup,int)
    public static void setTransitionGroup(android.view.ViewGroup,boolean)
    public static int getNestedScrollAxes(android.view.ViewGroup)
    public static final int LAYOUT_MODE_CLIP_BOUNDS
    public static final int LAYOUT_MODE_OPTICAL_BOUNDS
androidx.core.app.NotificationCompat$CarExtender
kotlinx.coroutines.EventLoopImplBase$DelayedResumeTask
androidx.asynclayoutinflater.R$integer
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion
kotlin.text.MatchGroup
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$6
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat:
    private static final float PRECISION
    public static final int MAX_NUM_POINTS
    public static final double EPSILON
kotlinx.coroutines.sync.Semaphore
kotlin.text.Regex$Serialized
android.support.v4.app.INotificationSideChannel
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$3
androidx.lifecycle.LifecycleController$observer$1:
    void <init>(androidx.lifecycle.LifecycleController,kotlinx.coroutines.Job)
kotlin.StandardKt__SynchronizedKt
kotlin.jvm.internal.markers.KMutableMap$Entry
androidx.collection.CircularArray
kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1
androidx.navigation.PopUpToBuilder
androidx.viewpager2.R$id
androidx.transition.ChangeImageTransform
androidx.databinding.ObservableInt$1
androidx.loader.R$color
androidx.databinding.ObservableInt
androidx.lifecycle.ProcessLifecycleOwner:
    public static androidx.lifecycle.LifecycleOwner get()
    static final long TIMEOUT_MS
kotlin.sequences.SequencesKt___SequencesKt$onEach$1
androidx.core.animation.AnimatorKt$addListener$2
kotlin.collections.Grouping
kotlinx.coroutines.flow.FlowKt__MergeKt$flattenConcat$$inlined$unsafeFlow$1$lambda$1$1
kotlinx.coroutines.flow.FlowKt__DistinctKt$distinctUntilChangedBy$$inlined$unsafeFlow$2$lambda$1$1
androidx.viewbinding.R
kotlin.text.CharDirectionality
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combine$3
androidx.lifecycle.extensions.R$attr
androidx.savedstate.R
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEachIndexed$1
androidx.annotation.GuardedBy
kotlin.jvm.KotlinReflectionNotSupportedError
kotlin.ranges.ULongProgressionIterator
kotlinx.coroutines.CoroutineDispatcher
androidx.core.R$integer
androidx.databinding.library.R$dimen
kotlinx.coroutines.flow.FlowKt__LimitKt$drop$$inlined$unsafeFlow$1
kotlinx.coroutines.Job$DefaultImpls:
    public static synthetic void cancel(kotlinx.coroutines.Job)
    public static synthetic boolean cancel$default(kotlinx.coroutines.Job,java.lang.Throwable,int,java.lang.Object)
    public static synthetic kotlinx.coroutines.DisposableHandle invokeOnCompletion$default(kotlinx.coroutines.Job,boolean,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object)
    public static kotlinx.coroutines.Job plus(kotlinx.coroutines.Job,kotlinx.coroutines.Job)
    public static kotlin.coroutines.CoroutineContext plus(kotlinx.coroutines.Job,kotlin.coroutines.CoroutineContext)
    public static java.lang.Object fold(kotlinx.coroutines.Job,java.lang.Object,kotlin.jvm.functions.Function2)
    public static kotlin.coroutines.CoroutineContext$Element get(kotlinx.coroutines.Job,kotlin.coroutines.CoroutineContext$Key)
    public static kotlin.coroutines.CoroutineContext minusKey(kotlinx.coroutines.Job,kotlin.coroutines.CoroutineContext$Key)
kotlin.jvm.JvmSuppressWildcards
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$6
kotlin.coroutines.experimental.ContinuationInterceptor$Key
androidx.recyclerview.widget.RecyclerView$RecycledViewPool:
    public void setMaxRecycledViews(int,int)
    public int getRecycledViewCount(int)
    int size()
    private static final int DEFAULT_MAX_SCRAP
androidx.databinding.library.baseAdapters.BR
kotlinx.coroutines.EventLoopImplBase
kotlinx.coroutines.sync.SemaphoreKt
kotlin.sequences.SequencesKt___SequencesKt
androidx.vectordrawable.animated.R$dimen
androidx.core.graphics.BlendModeColorFilterCompat
kotlin.sequences.SequencesKt___SequencesKt$groupingBy$1
androidx.databinding.ViewStubProxy
kotlinx.coroutines.sync.Mutex
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action:
    public void <init>(int,int,int)
    public int getDx()
    public void setDx(int)
    public int getDy()
    public void setDy(int)
    public int getDuration()
    public void setDuration(int)
    public android.view.animation.Interpolator getInterpolator()
    public void setInterpolator(android.view.animation.Interpolator)
    public static final int UNDEFINED_DURATION
androidx.databinding.ObservableDouble$1
com.czluciusdev.diceroller.BuildConfig
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1
kotlin.text.MatchNamedGroupCollection
androidx.databinding.library.R$string
androidx.core.animation.AnimatorKt
kotlin.jvm.functions.Function15
android.support.v4.media.MediaBrowserCompatApi21$MediaItem
androidx.lifecycle.extensions.R$anim
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$filterNotNullTo$3
kotlinx.coroutines.channels.AbstractSendChannel$enqueueSend$$inlined$addLastIfPrevAndIf$1
com.google.android.material.circularreveal.CircularRevealGridLayout
androidx.recyclerview.widget.AdapterHelper$UpdateOp:
    static final int ADD
    static final int REMOVE
    static final int UPDATE
    static final int MOVE
    static final int POOL_SIZE
androidx.core.app.ShareCompat
androidx.core.content.SharedPreferencesCompat$EditorCompat
androidx.appcompat.view.WindowCallbackWrapper:
    public void onContentChanged()
kotlinx.coroutines.internal.MainDispatcherLoader
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$9
org.intellij.lang.annotations.Pattern
androidx.slidingpanelayout.widget.SlidingPaneLayout$LayoutParams
androidx.lifecycle.MethodCallsLogger:
    public boolean approveCall(java.lang.String,int)
androidx.appcompat.widget.PopupMenu$1
androidx.legacy.coreui.R
com.czluciusdev.diceroller.R$integer
kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$3
androidx.annotation.TransitionRes
androidx.appcompat.widget.ListPopupWindow:
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    private static boolean isConfirmKey(int)
    public int getPromptPosition()
    public void setForceIgnoreOutsideTouch(boolean)
    public void setDropDownAlwaysVisible(boolean)
    public boolean isDropDownAlwaysVisible()
    public void setSoftInputMode(int)
    public int getSoftInputMode()
    public void setListSelector(android.graphics.drawable.Drawable)
    public int getAnimationStyle()
    public android.graphics.Rect getEpicenterBounds()
    public int getHeight()
    public void setHeight(int)
    public void setWindowLayoutType(int)
    public void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)
    public void setPromptView(android.view.View)
    public void postShow()
    public int getInputMethodMode()
    public boolean performItemClick(int)
    public java.lang.Object getSelectedItem()
    public int getSelectedItemPosition()
    public long getSelectedItemId()
    public android.view.View getSelectedView()
    void setListItemExpandMax(int)
    public boolean onKeyDown(int,android.view.KeyEvent)
    public boolean onKeyUp(int,android.view.KeyEvent)
    public boolean onKeyPreIme(int,android.view.KeyEvent)
    public android.view.View$OnTouchListener createDragToOpenListener(android.view.View)
    private static final java.lang.String TAG
    private static final boolean DEBUG
    static final int EXPAND_LIST_TIMEOUT
    public static final int POSITION_PROMPT_ABOVE
    public static final int POSITION_PROMPT_BELOW
    public static final int MATCH_PARENT
    public static final int WRAP_CONTENT
    public static final int INPUT_METHOD_FROM_FOCUSABLE
    public static final int INPUT_METHOD_NEEDED
    public static final int INPUT_METHOD_NOT_NEEDED
androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord
androidx.core.app.ComponentActivity$ExtraData
kotlin.sequences.Sequence
androidx.appcompat.view.menu.ActionMenuItem:
    public androidx.appcompat.view.menu.ActionMenuItem setExclusiveCheckable(boolean)
    public boolean invoke()
    public boolean requiresActionButton()
    public boolean requiresOverflow()
    private static final int NO_ICON
    private static final int CHECKABLE
    private static final int CHECKED
    private static final int EXCLUSIVE
    private static final int HIDDEN
    private static final int ENABLED
kotlinx.coroutines.android.HandlerContext$invokeOnTimeout$1
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState
androidx.databinding.adapters.RatingBarBindingAdapter
androidx.core.util.LongSparseArrayKt$keyIterator$1
kotlinx.coroutines.flow.FlowKt__TransformKt$unsafeTransform$$inlined$unsafeFlow$3$lambda$1$1
kotlinx.coroutines.flow.internal.CombineKt$asFairChannel$1
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams:
    public void <init>(androidx.recyclerview.widget.RecyclerView$LayoutParams)
    public void setFullSpan(boolean)
    public static final int INVALID_SPAN_ID
androidx.lifecycle.LifecycleCoroutineScope$launchWhenStarted$1
androidx.lifecycle.extensions.R$id
kotlinx.coroutines.internal.ThreadLocalElement
kotlin.io.TerminateException
com.czluciusdev.diceroller.R$mipmap
kotlin.comparisons.UComparisonsKt___UComparisonsKt
android.support.v4.media.MediaBrowserCompatApi21$SubscriptionCallback
androidx.annotation.PluralsRes
androidx.recyclerview.widget.DiffUtil
kotlin.reflect.KProperty2
kotlinx.coroutines.channels.ArrayChannel
androidx.core.animation.AnimatorKt$doOnPause$$inlined$addPauseListener$1
androidx.transition.CircularPropagation
kotlinx.coroutines.scheduling.TimeSource
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3$1
kotlinx.coroutines.EventLoopKt
com.google.android.material.datepicker.RangeDateSelector$2
androidx.recyclerview.widget.ListUpdateCallback
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$1
androidx.vectordrawable.animated.R$style
kotlinx.coroutines.selects.SelectBuilder
com.google.android.material.shape.EdgeTreatment:
    public void getEdgePath(float,float,com.google.android.material.shape.ShapePath)
kotlin.io.FilesKt
kotlin.jvm.internal.LongCompanionObject
com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter
com.google.android.material.bottomnavigation.BottomNavigationView$SavedState
androidx.navigation.ui.ktx.R
androidx.fragment.app.DialogFragment:
    public void setStyle(int,int)
    public int show(androidx.fragment.app.FragmentTransaction,java.lang.String)
    public void showNow(androidx.fragment.app.FragmentManager,java.lang.String)
    public void setCancelable(boolean)
    public boolean isCancelable()
    public void setShowsDialog(boolean)
    public boolean getShowsDialog()
    public static final int STYLE_NORMAL
    public static final int STYLE_NO_TITLE
    public static final int STYLE_NO_FRAME
    public static final int STYLE_NO_INPUT
    private static final java.lang.String SAVED_DIALOG_STATE_TAG
    private static final java.lang.String SAVED_STYLE
    private static final java.lang.String SAVED_THEME
    private static final java.lang.String SAVED_CANCELABLE
    private static final java.lang.String SAVED_SHOWS_DIALOG
    private static final java.lang.String SAVED_BACK_STACK_ID
androidx.viewpager2.adapter.FragmentStateAdapter$3
androidx.appcompat.R$styleable:
    private void <init>()
kotlinx.coroutines.channels.ArrayBroadcastChannel
androidx.appcompat.app.AlertController:
    public void setButtonPanelLayoutHint(int)
    public android.widget.Button getButton(int)
androidx.recyclerview.widget.AsyncListDiffer$1$2
androidx.slidingpanelayout.R$styleable
kotlinx.coroutines.CancellableContinuation$DefaultImpls
androidx.lifecycle.extensions.R$string
androidx.databinding.adapters.ImageViewBindingAdapter
kotlin.collections.MutableMapWithDefault
androidx.media.MediaBrowserServiceCompat$ConnectionRecord
androidx.core.view.DisplayCutoutCompat
android.support.v4.media.MediaBrowserCompat$SearchCallback:
    public void <init>()
kotlin.collections.CollectionsKt___CollectionsKt
androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat:
    private void <init>()
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$maxBy$1
androidx.appcompat.widget.ActivityChooserModel$DefaultSorter
com.czluciusdev.diceroller.DataBinderMapperImpl$InnerLayoutIdLookup
kotlinx.coroutines.flow.FlowKt__BuildersKt$flowViaChannel$1
kotlin.jvm.internal.MutablePropertyReference0Impl
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$1
kotlin.collections.EmptyList
kotlin.random.PlatformRandom
org.intellij.lang.annotations.Subst
androidx.recyclerview.widget.TileList
kotlin.text.Regex$Companion
androidx.core.widget.TintableCompoundButton:
    public abstract android.graphics.PorterDuff$Mode getSupportButtonTintMode()
kotlin.jvm.internal.PropertyReference0
kotlin.collections.ReversedListReadOnly
com.google.android.material.snackbar.SnackbarManager:
    private void showNextSnackbarLocked()
    private boolean isNextSnackbarLocked(com.google.android.material.snackbar.SnackbarManager$Callback)
    public void show(int,com.google.android.material.snackbar.SnackbarManager$Callback)
    public void dismiss(com.google.android.material.snackbar.SnackbarManager$Callback,int)
    public void onDismissed(com.google.android.material.snackbar.SnackbarManager$Callback)
    public void onShown(com.google.android.material.snackbar.SnackbarManager$Callback)
    public boolean isCurrent(com.google.android.material.snackbar.SnackbarManager$Callback)
    public boolean isCurrentOrNext(com.google.android.material.snackbar.SnackbarManager$Callback)
    static final int MSG_TIMEOUT
    private static final int SHORT_DURATION_MS
    private static final int LONG_DURATION_MS
kotlin.collections.CollectionsKt__MutableCollectionsJVMKt
kotlinx.coroutines.flow.internal.UndispatchedContextCollector$emitRef$1
com.google.android.material.floatingactionbutton.FloatingActionButton$Size
kotlin.text.MatcherMatchResult$groups$1
androidx.asynclayoutinflater.view.AsyncLayoutInflater$InflateRequest
androidx.lifecycle.livedata.core.ktx.R
kotlinx.coroutines.flow.FlowKt__MigrationKt$combineLatest$$inlined$combine$1$2
androidx.localbroadcastmanager.content.LocalBroadcastManager$BroadcastRecord
kotlin.collections.ArraysKt___ArraysKt$withIndex$7
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt
androidx.core.app.RemoteInput$EditChoicesBeforeSending
androidx.transition.Transition$MatchOrder
kotlinx.coroutines.android.HandlerDispatcher
androidx.navigation.ui.NavigationUI:
    private void <init>()
    public static boolean onNavDestinationSelected(android.view.MenuItem,androidx.navigation.NavController)
    public static boolean navigateUp(androidx.navigation.NavController,androidx.drawerlayout.widget.DrawerLayout)
    public static boolean navigateUp(androidx.navigation.NavController,androidx.navigation.ui.AppBarConfiguration)
    public static void setupActionBarWithNavController(androidx.appcompat.app.AppCompatActivity,androidx.navigation.NavController,androidx.drawerlayout.widget.DrawerLayout)
    public static void setupWithNavController(androidx.appcompat.widget.Toolbar,androidx.navigation.NavController)
    public static void setupWithNavController(androidx.appcompat.widget.Toolbar,androidx.navigation.NavController,androidx.drawerlayout.widget.DrawerLayout)
    public static void setupWithNavController(androidx.appcompat.widget.Toolbar,androidx.navigation.NavController,androidx.navigation.ui.AppBarConfiguration)
    public static void setupWithNavController(com.google.android.material.appbar.CollapsingToolbarLayout,androidx.appcompat.widget.Toolbar,androidx.navigation.NavController)
    public static void setupWithNavController(com.google.android.material.appbar.CollapsingToolbarLayout,androidx.appcompat.widget.Toolbar,androidx.navigation.NavController,androidx.drawerlayout.widget.DrawerLayout)
    public static void setupWithNavController(com.google.android.material.appbar.CollapsingToolbarLayout,androidx.appcompat.widget.Toolbar,androidx.navigation.NavController,androidx.navigation.ui.AppBarConfiguration)
    public static void setupWithNavController(com.google.android.material.navigation.NavigationView,androidx.navigation.NavController)
    static com.google.android.material.bottomsheet.BottomSheetBehavior findBottomSheetBehavior(android.view.View)
    public static void setupWithNavController(com.google.android.material.bottomnavigation.BottomNavigationView,androidx.navigation.NavController)
    static boolean matchDestination(androidx.navigation.NavDestination,int)
androidx.viewpager.widget.PagerTitleStrip
androidx.core.hardware.fingerprint.FingerprintManagerCompat$1
com.google.android.material.behavior.SwipeDismissBehavior:
    public void setListener(com.google.android.material.behavior.SwipeDismissBehavior$OnDismissListener)
    public void setDragDismissDistance(float)
    public void setSensitivity(float)
    public int getDragState()
    public static final int STATE_IDLE
    public static final int STATE_DRAGGING
    public static final int STATE_SETTLING
    public static final int SWIPE_DIRECTION_START_TO_END
    public static final int SWIPE_DIRECTION_END_TO_START
    public static final int SWIPE_DIRECTION_ANY
    private static final float DEFAULT_DRAG_DISMISS_THRESHOLD
    private static final float DEFAULT_ALPHA_START_DISTANCE
    private static final float DEFAULT_ALPHA_END_DISTANCE
androidx.core.graphics.PathUtils
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$associateByTo$1
android.support.v4.media.session.MediaSessionCompat$QueueItem:
    public void <init>(android.support.v4.media.MediaDescriptionCompat,long)
    public android.support.v4.media.MediaDescriptionCompat getDescription()
    public long getQueueId()
    public java.lang.Object getQueueItem()
    public static final int UNKNOWN_ID
com.google.android.material.button.MaterialButtonToggleGroup$1
androidx.databinding.library.R$styleable
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$count$1
kotlin.NumbersKt__NumbersKt
kotlin.Triple
androidx.appcompat.view.menu.MenuBuilder:
    private void dispatchSaveInstanceState(android.os.Bundle)
    private void dispatchRestoreInstanceState(android.os.Bundle)
    public void savePresenterStates(android.os.Bundle)
    public void restorePresenterStates(android.os.Bundle)
    public void removeItemAt(int)
    public void clearAll()
    public void setShortcutsVisible(boolean)
    public void setCurrentMenuInfo(android.view.ContextMenu$ContextMenuInfo)
    public void setOptionalIconsVisible(boolean)
    private android.util.SparseArray mFrozenViewStates
    private static final java.lang.String TAG
    private static final java.lang.String PRESENTER_KEY
    private static final java.lang.String ACTION_VIEW_STATES_KEY
    private static final java.lang.String EXPANDED_ACTION_VIEW_ID
kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$$inlined$unsafeFlow$1
androidx.transition.R$attr
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2
androidx.recyclerview.widget.RecyclerView$AdapterDataObservable:
    public void notifyItemRangeChanged(int,int)
    public void notifyItemRangeChanged(int,int,java.lang.Object)
    public void notifyItemRangeInserted(int,int)
    public void notifyItemRangeRemoved(int,int)
    public void notifyItemMoved(int,int)
kotlin.collections.AbstractList
android.support.v4.media.session.MediaSessionCompat$Callback$StubApi21
androidx.viewpager2.widget.ViewPager2$1
androidx.recyclerview.widget.RecyclerView$ViewCacheExtension:
    public void <init>()
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$sumBy$1
kotlin.collections.AbstractMutableSet
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat:
    public static androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean)
    public int getColumnCount()
    public int getRowCount()
    public boolean isHierarchical()
    public int getSelectionMode()
    public static final int SELECTION_MODE_NONE
    public static final int SELECTION_MODE_SINGLE
    public static final int SELECTION_MODE_MULTIPLE
org.jetbrains.annotations.Nls
androidx.appcompat.widget.ThemeUtils:
    public static android.content.res.ColorStateList createDisabledStateList(int,int)
    private void <init>()
androidx.appcompat.resources.R
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3
androidx.databinding.library.R$style
androidx.appcompat.app.ActionBarDrawerToggle$Delegate:
    public abstract void setActionBarDescription(int)
    public abstract android.graphics.drawable.Drawable getThemeUpIndicator()
    public abstract boolean isNavigationVisible()
android.support.v4.media.session.PlaybackStateCompat$CustomAction$Builder
androidx.appcompat.widget.ButtonBarLayout:
    private static final int PEEK_BUTTON_DP
androidx.appcompat.widget.RtlSpacingHelper:
    public static final int UNDEFINED
com.google.android.material.behavior.SwipeDismissBehavior$1:
    private static final int INVALID_POINTER_ID
androidx.recyclerview.widget.LinearLayoutManager$LayoutState:
    void log()
    static final java.lang.String TAG
    static final int LAYOUT_START
    static final int LAYOUT_END
    static final int INVALID_LAYOUT
    static final int ITEM_DIRECTION_HEAD
    static final int ITEM_DIRECTION_TAIL
    static final int SCROLLING_OFFSET_NaN
kotlinx.coroutines.internal.SegmentQueue
androidx.print.PrintHelper$PrintBitmapAdapter
kotlin.jvm.internal.MutablePropertyReference1Impl
kotlin.sequences.SequencesKt___SequencesKt$minus$2$iterator$1
kotlinx.coroutines.JobCancellingNode
kotlinx.coroutines.flow.FlowKt__CountKt$count$$inlined$collect$1
kotlin.io.FilesKt__FileReadWriteKt$readLines$1
kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$1
androidx.core.view.ActionProvider:
    public android.content.Context getContext()
    public void refreshVisibility()
    public void subUiVisibilityChanged(boolean)
    private static final java.lang.String TAG
com.google.android.material.floatingactionbutton.AnimatorTracker
kotlin.annotation.Retention
com.google.android.material.shape.InterpolateOnScrollPositionChangeHelper$1
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl:
    void removeOnShowAnimationListener(android.animation.Animator$AnimatorListener)
    public void removeOnHideAnimationListener(android.animation.Animator$AnimatorListener)
    void removeTransformationCallback(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalTransformationCallback)
    static final long ELEVATION_ANIM_DURATION
    static final long ELEVATION_ANIM_DELAY
    static final int ANIM_STATE_NONE
    static final int ANIM_STATE_HIDING
    static final int ANIM_STATE_SHOWING
    static final float SHADOW_MULTIPLIER
    private static final float HIDE_OPACITY
    private static final float HIDE_SCALE
    private static final float HIDE_ICON_SCALE
    private static final float SHOW_OPACITY
    private static final float SHOW_SCALE
    private static final float SHOW_ICON_SCALE
androidx.media.MediaBrowserServiceCompat$ConnectionRecord$1
kotlin.reflect.KProperty:
    public abstract boolean isLateinit()
    public abstract boolean isConst()
    public abstract kotlin.reflect.KProperty$Getter getGetter()
kotlin.text.CharCategory$Companion$categoryMap$2
com.google.android.material.shape.InterpolateOnScrollPositionChangeHelper
org.intellij.lang.annotations.RegExp
kotlin.native.concurrent.ThreadLocal
kotlinx.coroutines.channels.ProducerScope
androidx.versionedparcelable.R
kotlin.text.Regex
androidx.core.app.NotificationManagerCompat
androidx.vectordrawable.animated.R
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$filterIndexedTo$1
androidx.core.view.ViewKt$postOnAnimationDelayed$runnable$1
androidx.core.app.RemoteInput$Source
kotlin.sequences.MergingSequence$iterator$1
androidx.appcompat.app.NavItemSelectedListener
androidx.core.transition.TransitionKt$doOnPause$$inlined$addListener$1
androidx.core.app.NotificationManagerCompat$CancelTask
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransform$1
kotlinx.coroutines.android.HandlerDispatcherKt$postFrameCallback$1
androidx.databinding.BindingAdapter
kotlin.jvm.internal.MutablePropertyReference1
androidx.appcompat.widget.ActivityChooserView$4
androidx.collection.ArraySet:
    public void <init>(androidx.collection.ArraySet)
    public void <init>(java.util.Collection)
    public void addAll(androidx.collection.ArraySet)
    public boolean removeAll(androidx.collection.ArraySet)
    private static final boolean DEBUG
    private static final java.lang.String TAG
    private static final int BASE_SIZE
    private static final int CACHE_SIZE
androidx.coordinatorlayout.R
androidx.core.util.LruCacheKt$lruCache$1
androidx.core.os.OperationCanceledException
com.google.android.material.datepicker.UtcDates:
    private void <init>()
    static java.text.SimpleDateFormat getTextInputFormat()
    static java.lang.String getTextInputHint(android.content.res.Resources,java.text.SimpleDateFormat)
    static java.text.SimpleDateFormat getSimpleFormat(java.lang.String)
    static android.icu.text.DateFormat getYearAbbrMonthDayFormat(java.util.Locale)
    static android.icu.text.DateFormat getAbbrMonthDayFormat(java.util.Locale)
    static java.text.DateFormat getMediumFormat()
    static java.text.DateFormat getMediumFormat(java.util.Locale)
    static java.text.DateFormat getMediumNoYear()
    static java.text.DateFormat getMediumNoYear(java.util.Locale)
    static java.text.DateFormat getFullFormat()
    private static java.lang.String removeYearFromDateFormatPattern(java.lang.String)
    private static int findCharactersInDateFormatPattern(java.lang.String,java.lang.String,int,int)
    static final java.lang.String UTC
kotlinx.coroutines.flow.FlowKt__TransformKt$unsafeTransform$$inlined$unsafeFlow$2$lambda$1
android.support.v4.media.ParceledListSliceAdapterApi21
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$1
androidx.savedstate.SavedStateRegistry:
    public void unregisterSavedStateProvider(java.lang.String)
    public boolean isRestored()
    private static final java.lang.String SAVED_COMPONENTS_KEY
androidx.activity.ktx.R$styleable
androidx.core.os.HandlerKt$postAtTime$runnable$1
androidx.vectordrawable.animated.R$styleable
kotlinx.coroutines.flow.FlowKt__TransformKt
kotlin.internal.RequireKotlinVersionKind
com.google.android.material.resources.MaterialResources:
    private void <init>()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$8
androidx.slidingpanelayout.widget.SlidingPaneLayout$DragHelperCallback
androidx.recyclerview.R$style
androidx.databinding.adapters.TableLayoutBindingAdapter
kotlin.jvm.internal.markers.KMutableIterator
kotlin.collections.SlidingWindowKt$windowedIterator$1
kotlinx.coroutines.flow.FlowKt__DistinctKt$distinctUntilChangedBy$$inlined$unsafeFlow$1$lambda$1
kotlin.collections.ArraysKt___ArraysJvmKt$asList$1
kotlinx.coroutines.internal.LockFreeLinkedListNode
kotlin.text.StringsKt__StringsKt$iterator$1
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$1
kotlin.StandardKt
com.czluciusdev.diceroller.AboutFragment:
    private final void launchWebPage()
    public static final synthetic void access$launchWebPage(com.czluciusdev.diceroller.AboutFragment)
    public android.view.View _$_findCachedViewById(int)
androidx.navigation.ui.BottomNavigationViewKt
androidx.core.app.NotificationCompat$GroupAlertBehavior
androidx.viewpager2.adapter.FragmentStateAdapter$2:
    void <init>(androidx.viewpager2.adapter.FragmentStateAdapter,androidx.viewpager2.adapter.FragmentViewHolder)
androidx.appcompat.widget.AppCompatSpinner:
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,int)
    private static final int MAX_ITEMS_MEASURED
    private static final java.lang.String TAG
    private static final int MODE_DIALOG
    private static final int MODE_DROPDOWN
    private static final int MODE_THEME
androidx.activity.R$style
kotlin.jvm.JvmSynthetic
android.support.v4.media.session.MediaSessionCompat$Callback
kotlin.reflect.KMutableProperty1
kotlin.properties.Delegates
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$3
com.google.android.material.expandable.ExpandableTransformationWidget:
    public abstract int getExpandedComponentIdHint()
    public abstract void setExpandedComponentIdHint(int)
kotlin.io.ConstantsKt
androidx.transition.ChangeTransform$3
androidx.media.app.NotificationCompat$MediaStyle
androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListenerWrapper
kotlin.LazyKt:
    private void <init>()
androidx.core.content.res.ColorStateListInflaterCompat:
    private void <init>()
kotlin.time.Duration$Companion
kotlin.collections.ShortIterator
org.intellij.lang.annotations.JdkConstants$TreeSelectionMode
androidx.navigation.common.ktx.R$color
kotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$buildContinuationByInvokeCall$continuation$1
kotlinx.coroutines.flow.FlowKt__MigrationKt$combine$$inlined$unsafeFlow$3
kotlinx.coroutines.flow.internal.ChannelFlowOperatorImpl
kotlin.PreconditionsKt
androidx.slidingpanelayout.R$layout
androidx.databinding.library.baseAdapters.R$style
androidx.transition.FragmentTransitionSupport$4:
    public android.graphics.Rect onGetEpicenter(androidx.transition.Transition)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$elementAt$1
kotlinx.coroutines.flow.FlowKt__MigrationKt$combine$$inlined$unsafeFlow$3$1
kotlin.coroutines.CombinedContext:
    private final java.lang.Object writeReplace()
    public kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
kotlin._Assertions
androidx.appcompat.widget.ScrollingTabContainerView:
    public void <init>(android.content.Context)
    private androidx.appcompat.widget.LinearLayoutCompat createTabLayout()
    public void animateToVisibility(int)
    public void addTab(androidx.appcompat.app.ActionBar$Tab,boolean)
    public void addTab(androidx.appcompat.app.ActionBar$Tab,int,boolean)
    public void updateTab(int)
    public void removeTabAt(int)
    public void removeAllTabs()
    protected android.view.ViewPropertyAnimator mVisibilityAnim
    protected final androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener mVisAnimListener
    private static final java.lang.String TAG
    private static final int FADE_DURATION
androidx.navigation.R$layout
androidx.lifecycle.ViewModelStores
androidx.drawerlayout.widget.DrawerLayout$SimpleDrawerListener
androidx.core.database.DatabaseUtilsCompat
com.google.android.material.snackbar.BaseTransientBottomBar$7
com.google.android.material.appbar.AppBarLayout$Behavior:
    public synthetic bridge void setDragCallback(com.google.android.material.appbar.AppBarLayout$BaseBehavior$BaseDragCallback)
    public synthetic bridge boolean isHorizontalOffsetEnabled()
    public synthetic bridge void setHorizontalOffsetEnabled(boolean)
    public synthetic bridge boolean isVerticalOffsetEnabled()
    public synthetic bridge void setVerticalOffsetEnabled(boolean)
    public synthetic bridge int getLeftAndRightOffset()
    public synthetic bridge boolean setLeftAndRightOffset(int)
com.google.android.material.appbar.ViewUtilsLollipop:
    void <init>()
    static void setBoundsViewOutlineProvider(android.view.View)
    static void setStateListAnimatorFromAttrs(android.view.View,android.util.AttributeSet,int,int)
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$1
androidx.core.app.NotificationCompat$1
kotlinx.coroutines.flow.internal.CombineKt$asChannel$1
androidx.asynclayoutinflater.R$id
androidx.viewpager2.adapter.FragmentViewHolder:
    private void <init>(android.widget.FrameLayout)
    static androidx.viewpager2.adapter.FragmentViewHolder create(android.view.ViewGroup)
kotlin.coroutines.ContinuationKt$Continuation$1
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2
kotlinx.coroutines.DispatchedContinuation
kotlin.SynchronizedLazyImpl:
    private final java.lang.Object writeReplace()
androidx.appcompat.view.menu.ListMenuPresenter:
    int getItemIndexOffset()
    public void setItemIndexOffset(int)
    public void saveHierarchyState(android.os.Bundle)
    public void restoreHierarchyState(android.os.Bundle)
    public void setId(int)
    public int getId()
    public android.os.Parcelable onSaveInstanceState()
    public void onRestoreInstanceState(android.os.Parcelable)
    private int mId
    private static final java.lang.String TAG
    public static final java.lang.String VIEWS_TAG
com.google.android.material.bottomsheet.BottomSheetBehavior$SaveFlags
androidx.recyclerview.widget.GridLayoutManager:
    public void <init>(android.content.Context,int)
    public void setSpanSizeLookup(androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup)
    public androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup getSpanSizeLookup()
    public void setUsingSpansToEstimateScrollbarDimensions(boolean)
    public boolean isUsingSpansToEstimateScrollbarDimensions()
    private static final boolean DEBUG
    private static final java.lang.String TAG
    public static final int DEFAULT_SPAN_COUNT
com.google.android.material.appbar.AppBarLayout$Behavior$DragCallback
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7$1
androidx.core.ktx.R$style
androidx.navigation.ui.NavigationUI$3
androidx.annotation.AnimRes
androidx.annotation.XmlRes
kotlinx.coroutines.Dispatchers
kotlin.jvm.internal.Ref$ShortRef
androidx.navigation.fragment.ktx.R$style
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$$inlined$unsafeFlow$1$lambda$1$1
kotlin.text.Regex$Serialized$Companion
android.support.v4.media.MediaMetadataCompat$LongKey
androidx.appcompat.R
kotlinx.coroutines.flow.FlowCollector
kotlinx.coroutines.selects.SelectBuilderImpl$DisposeNode
androidx.core.util.SparseIntArrayKt
androidx.activity.OnBackPressedDispatcher:
    public void <init>()
    public void addCallback(androidx.activity.OnBackPressedCallback)
    public boolean hasEnabledCallbacks()
kotlin.ranges.URangesKt
androidx.annotation.IntDef
androidx.documentfile.provider.SingleDocumentFile
kotlinx.coroutines.flow.FlowKt__TransformKt$unsafeTransform$$inlined$unsafeFlow$3
kotlin.ranges.LongRange
androidx.recyclerview.R$layout
kotlin.annotation.AnnotationRetention
android.support.v4.media.session.MediaSessionCompatApi21$QueueItem:
    public static java.lang.Object createItem(java.lang.Object,long)
    private void <init>()
androidx.activity.ktx.R$drawable
androidx.databinding.ViewDataBinding$ObservableReference:
    public abstract androidx.databinding.ViewDataBinding$WeakListener getListener()
androidx.core.view.KeyEventDispatcher:
    private void <init>()
androidx.viewpager2.R$color
kotlin.collections.MapsKt
android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo:
    public static int getPlaybackType(java.lang.Object)
    public static int getVolumeControl(java.lang.Object)
    public static int getMaxVolume(java.lang.Object)
    public static int getCurrentVolume(java.lang.Object)
    private void <init>()
    private static final int FLAG_SCO
    private static final int STREAM_BLUETOOTH_SCO
    private static final int STREAM_SYSTEM_ENFORCED
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$1
androidx.databinding.adapters.CompoundButtonBindingAdapter$1
androidx.appcompat.view.menu.ActionMenuItemView:
    public void setShortcut(boolean,char)
    public boolean showsIcon()
    private static final java.lang.String TAG
    private static final int MAX_ICON_SIZE
androidx.core.content.res.TypedArrayUtils:
    public static boolean getBoolean(android.content.res.TypedArray,int,int,boolean)
    public static android.graphics.drawable.Drawable getDrawable(android.content.res.TypedArray,int,int)
    public static int getInt(android.content.res.TypedArray,int,int,int)
    public static int getResourceId(android.content.res.TypedArray,int,int,int)
    public static java.lang.String getString(android.content.res.TypedArray,int,int)
    public static java.lang.CharSequence getText(android.content.res.TypedArray,int,int)
    public static java.lang.CharSequence[] getTextArray(android.content.res.TypedArray,int,int)
    public static int getAttr(android.content.Context,int,int)
    private void <init>()
    private static final java.lang.String NAMESPACE
kotlin.NumbersKt__BigDecimalsKt
kotlinx.coroutines.EventLoopImplBase$DelayedRunnableTask
kotlin.UInt$Companion
com.google.android.material.R$plurals
androidx.transition.TransitionInflater
com.czluciusdev.diceroller.R$layout
kotlin.jvm.functions.Function3
com.google.android.material.R$string:
    private void <init>()
androidx.recyclerview.widget.DiffUtil$Range
com.google.android.material.snackbar.BaseTransientBottomBar$10
androidx.core.util.SparseLongArrayKt$valueIterator$1
androidx.core.content.pm.ShortcutManagerCompat
androidx.fragment.app.FragmentContainerView:
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
kotlinx.coroutines.selects.SelectInstance
androidx.coordinatorlayout.R$dimen
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combine$2
kotlinx.coroutines.BlockingCoroutine
androidx.navigation.NavDestinationBuilder
androidx.databinding.BindingConversion
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState:
    private static final long REVERSED_BIT
    private static final long REVERSIBLE_FLAG_BIT
androidx.core.widget.ScrollerCompat
androidx.core.provider.FontsContractCompat$4$7
androidx.navigation.ActivityNavArgsLazyKt
kotlin.text.MatchResult$Destructured
androidx.core.view.MenuKt$iterator$1
androidx.media.VolumeProviderCompatApi21
androidx.core.app.ActivityCompat$RequestPermissionsRequestCodeValidator
androidx.media.app.NotificationCompat
com.google.android.material.switchmaterial.SwitchMaterial
kotlinx.coroutines.Delay
kotlinx.coroutines.test.TestCoroutineContext
androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl:
    public android.graphics.drawable.Drawable getThemeUpIndicator()
    public boolean isNavigationVisible()
    public void setActionBarDescription(int)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$toMap$2
androidx.media.MediaBrowserServiceCompat$ServiceCallbacks
androidx.navigation.ui.ktx.R$animator
kotlinx.coroutines.flow.internal.SafeCollector$checkContext$result$1
androidx.appcompat.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener
android.support.v4.media.session.IMediaSession$Stub:
    public void <init>()
    public android.os.IBinder asBinder()
    public boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
    private static final java.lang.String DESCRIPTOR
    static final int TRANSACTION_sendCommand
    static final int TRANSACTION_sendMediaButton
    static final int TRANSACTION_registerCallbackListener
    static final int TRANSACTION_unregisterCallbackListener
    static final int TRANSACTION_isTransportControlEnabled
    static final int TRANSACTION_getPackageName
    static final int TRANSACTION_getTag
    static final int TRANSACTION_getLaunchPendingIntent
    static final int TRANSACTION_getFlags
    static final int TRANSACTION_getVolumeAttributes
    static final int TRANSACTION_adjustVolume
    static final int TRANSACTION_setVolumeTo
    static final int TRANSACTION_getMetadata
    static final int TRANSACTION_getPlaybackState
    static final int TRANSACTION_getQueue
    static final int TRANSACTION_getQueueTitle
    static final int TRANSACTION_getExtras
    static final int TRANSACTION_getRatingType
    static final int TRANSACTION_isCaptioningEnabled
    static final int TRANSACTION_getRepeatMode
    static final int TRANSACTION_isShuffleModeEnabledRemoved
    static final int TRANSACTION_getShuffleMode
    static final int TRANSACTION_addQueueItem
    static final int TRANSACTION_addQueueItemAt
    static final int TRANSACTION_removeQueueItem
    static final int TRANSACTION_removeQueueItemAt
    static final int TRANSACTION_prepare
    static final int TRANSACTION_prepareFromMediaId
    static final int TRANSACTION_prepareFromSearch
    static final int TRANSACTION_prepareFromUri
    static final int TRANSACTION_play
    static final int TRANSACTION_playFromMediaId
    static final int TRANSACTION_playFromSearch
    static final int TRANSACTION_playFromUri
    static final int TRANSACTION_skipToQueueItem
    static final int TRANSACTION_pause
    static final int TRANSACTION_stop
    static final int TRANSACTION_next
    static final int TRANSACTION_previous
    static final int TRANSACTION_fastForward
    static final int TRANSACTION_rewind
    static final int TRANSACTION_seekTo
    static final int TRANSACTION_rate
    static final int TRANSACTION_rateWithExtras
    static final int TRANSACTION_setCaptioningEnabled
    static final int TRANSACTION_setRepeatMode
    static final int TRANSACTION_setShuffleModeEnabledRemoved
    static final int TRANSACTION_setShuffleMode
    static final int TRANSACTION_sendCustomAction
kotlinx.coroutines.channels.ChannelIterator
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplBase$3
kotlinx.coroutines.flow.FlowKt__EmittersKt$invokeSafely$1
kotlin.collections.CollectionsKt___CollectionsKt$elementAt$1
androidx.viewpager.widget.PagerAdapter
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$7
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$last$1
kotlin.collections.ArrayAsCollection
androidx.fragment.ktx.R$integer
androidx.appcompat.widget.ToolbarWidgetWrapper:
    private void ensureSpinner()
    public java.lang.CharSequence getSubtitle()
    public boolean hasIcon()
    public boolean hasLogo()
    public boolean hasEmbeddedTabs()
    public boolean isTitleTruncated()
    public void setNavigationMode(int)
    public void setDropdownParams(android.widget.SpinnerAdapter,android.widget.AdapterView$OnItemSelectedListener)
    public void setDropdownSelectedPosition(int)
    public int getDropdownSelectedPosition()
    public int getDropdownItemCount()
    public android.view.View getCustomView()
    public void animateToVisibility(int)
    public void setNavigationIcon(int)
    public void setDefaultNavigationIcon(android.graphics.drawable.Drawable)
    public void saveHierarchyState(android.util.SparseArray)
    public void restoreHierarchyState(android.util.SparseArray)
    public void setBackgroundDrawable(android.graphics.drawable.Drawable)
    public int getHeight()
    public int getVisibility()
    public void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback)
    public android.view.Menu getMenu()
    private android.widget.Spinner mSpinner
    private static final java.lang.String TAG
    private static final int AFFECTS_LOGO_MASK
    private static final long DEFAULT_FADE_DURATION_MS
kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1
kotlin.properties.Delegates$vetoable$1
kotlinx.android.parcel.Parceler
androidx.databinding.adapters.TimePickerBindingAdapter
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi23
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collect$1
androidx.databinding.library.baseAdapters.R$id
androidx.navigation.fragment.DialogFragmentNavigatorDestinationBuilderKt
androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate:
    void <init>()
    public void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
com.google.android.material.datepicker.MaterialTextInputPicker:
    public com.google.android.material.datepicker.DateSelector getDateSelector()
    private static final java.lang.String DATE_SELECTOR_KEY
    private static final java.lang.String CALENDAR_CONSTRAINTS_KEY
androidx.navigation.fragment.NavHostFragment:
    public static androidx.navigation.fragment.NavHostFragment create(int)
    public static androidx.navigation.fragment.NavHostFragment create(int,android.os.Bundle)
    private static final java.lang.String KEY_GRAPH_ID
    private static final java.lang.String KEY_START_DESTINATION_ARGS
    private static final java.lang.String KEY_NAV_CONTROLLER_STATE
    private static final java.lang.String KEY_DEFAULT_NAV_HOST
androidx.databinding.adapters.SearchViewBindingAdapter$OnSuggestionSelect
kotlinx.android.parcel.IgnoredOnParcel
kotlin.internal.Exact
androidx.constraintlayout.solver.SolverVariable$1
com.czluciusdev.diceroller.R$dimen
kotlinx.coroutines.flow.FlowKt__EmittersKt
kotlin.jvm.internal.TypeIntrinsics
androidx.navigation.ActivityNavigatorExtrasKt
kotlinx.coroutines.CoroutineId
androidx.viewpager2.widget.ViewPager2$SavedState$1
androidx.viewpager2.widget.ViewPager2
androidx.databinding.library.baseAdapters.R$drawable
androidx.drawerlayout.R$layout
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Placeholder
kotlin.io.FileTreeWalk
androidx.appcompat.resources.R$styleable:
    private void <init>()
kotlinx.coroutines.flow.internal.SendingCollector
kotlinx.coroutines.flow.FlowKt__DistinctKt$distinctUntilChangedBy$$inlined$unsafeFlow$1
kotlinx.coroutines.internal.ConcurrentKt
androidx.core.provider.FontsContractCompat$Columns
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsKt
com.google.android.material.circularreveal.cardview.CircularRevealCardView:
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void actualDraw(android.graphics.Canvas)
    public boolean actualIsOpaque()
kotlinx.coroutines.flow.FlowKt__MergeKt$unsafeTransform$$inlined$unsafeFlow$2$lambda$1$1
androidx.loader.content.Loader:
    public void <init>(android.content.Context)
    public void deliverResult(java.lang.Object)
    public void deliverCancellation()
    public android.content.Context getContext()
    public int getId()
    public void registerListener(int,androidx.loader.content.Loader$OnLoadCompleteListener)
    public void registerOnLoadCanceledListener(androidx.loader.content.Loader$OnLoadCanceledListener)
    public void unregisterOnLoadCanceledListener(androidx.loader.content.Loader$OnLoadCanceledListener)
    public boolean isStarted()
    public boolean isAbandoned()
    public boolean isReset()
    protected void onStartLoading()
    protected boolean onCancelLoad()
    public void forceLoad()
    protected void onForceLoad()
    protected void onStopLoading()
    protected void onAbandon()
    protected void onReset()
    public boolean takeContentChanged()
    public void commitContentChanged()
    public void rollbackContentChanged()
    public void onContentChanged()
    public java.lang.String toString()
    int mId
    androidx.loader.content.Loader$OnLoadCompleteListener mListener
    androidx.loader.content.Loader$OnLoadCanceledListener mOnLoadCanceledListener
    android.content.Context mContext
    boolean mStarted
    boolean mAbandoned
    boolean mReset
    boolean mContentChanged
    boolean mProcessingChange
kotlin.collections.AbstractList$Companion
kotlin.collections.CollectionsKt__MutableCollectionsKt
androidx.core.text.LocaleKt
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$2
kotlin.reflect.KFunction
com.google.android.material.bottomsheet.BottomSheetDialog:
    public void <init>(android.content.Context)
    protected void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener)
    public void setDismissWithAnimation(boolean)
kotlin.collections.SetsKt
androidx.lifecycle.ClassesInfoCache:
    private static final int CALL_TYPE_NO_ARG
    private static final int CALL_TYPE_PROVIDER
    private static final int CALL_TYPE_PROVIDER_WITH_EVENT
androidx.constraintlayout.widget.ConstraintLayout:
    public void fillMetrics(androidx.constraintlayout.solver.Metrics)
    static final boolean ALLOWS_EMBEDDED
    private static final boolean CACHE_MEASURED_DIMENSION
    public static final java.lang.String VERSION
    private static final java.lang.String TAG
    private static final boolean USE_CONSTRAINTS_HELPER
    private static final boolean DEBUG
    public static final int DESIGN_INFO_ID
kotlin.reflect.KMutableProperty2$Setter
kotlin.Function
kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$$inlined$unsafeFlow$1$lambda$1
kotlinx.coroutines.channels.AbstractSendChannel$SendBufferedDesc
kotlinx.coroutines.flow.FlowKt__MigrationKt$combine$$inlined$combine$3$1
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$1$lambda$1
androidx.transition.ChangeImageTransform$1
androidx.drawerlayout.widget.DrawerLayout$LayoutParams:
    public void <init>(int,int,int)
    private static final int FLAG_IS_OPENED
    private static final int FLAG_IS_OPENING
    private static final int FLAG_IS_CLOSING
kotlinx.coroutines.CancellableContinuationImplKt
kotlin.jvm.internal.Ref$CharRef
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$mapNotNullTo$1
kotlinx.coroutines.flow.FlowKt__MigrationKt$combineLatest$$inlined$combine$1$3
androidx.print.PrintHelper
androidx.activity.R$id
kotlinx.coroutines.ResumeModeKt
androidx.appcompat.widget.ActivityChooserView$Callbacks
androidx.core.util.SparseIntArrayKt$valueIterator$1
androidx.lifecycle.PausingDispatcherKt
kotlin.reflect.KProperty$Getter
kotlin.collections.AbstractIterator$WhenMappings
androidx.documentfile.provider.TreeDocumentFile
org.intellij.lang.annotations.JdkConstants$CalendarMonth
androidx.core.view.MarginLayoutParamsCompat:
    public static void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int)
    public static void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int)
    public static boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams)
    public static int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams)
    public static void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
    public static void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
    private void <init>()
androidx.navigation.NavOptionsBuilder
androidx.databinding.ViewDataBinding$WeakListListener:
    public void onChanged(androidx.databinding.ObservableList)
    public void onItemRangeChanged(androidx.databinding.ObservableList,int,int)
    public void onItemRangeInserted(androidx.databinding.ObservableList,int,int)
    public void onItemRangeMoved(androidx.databinding.ObservableList,int,int,int)
    public void onItemRangeRemoved(androidx.databinding.ObservableList,int,int)
kotlinx.coroutines.ResumeAwaitOnCompletion
kotlin.jvm.internal.ArrayShortIterator
kotlin.collections.CollectionsKt___CollectionsKt$groupingBy$1
androidx.core.graphics.BlendModeCompat
kotlin.sequences.SequencesKt__SequencesKt$flatten$2
kotlinx.coroutines.flow.Flow
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$8
androidx.media.MediaSessionManagerImplApi28
kotlin.jvm.Synchronized
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat:
    public static androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat create(android.content.Context,int)
    private static boolean unregisterPlatformCallback(android.graphics.drawable.AnimatedVectorDrawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
    private static void registerPlatformCallback(android.graphics.drawable.AnimatedVectorDrawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
    private void removeAnimatorSetListener()
    public static void registerAnimationCallback(android.graphics.drawable.Drawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
    public static boolean unregisterAnimationCallback(android.graphics.drawable.Drawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
    public static void clearAnimationCallbacks(android.graphics.drawable.Drawable)
    public void registerAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
    public boolean unregisterAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
    public void clearAnimationCallbacks()
    androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState mCachedConstantStateDelegate
    private static final java.lang.String LOGTAG
    private static final java.lang.String ANIMATED_VECTOR
    private static final java.lang.String TARGET
    private static final boolean DBG_ANIMATION_VECTOR_DRAWABLE
androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask
androidx.localbroadcastmanager.content.LocalBroadcastManager
androidx.core.graphics.ColorKt
kotlin.sequences.TransformingIndexedSequence$iterator$1
com.google.android.material.animation.AnimatorSetCompat:
    public void <init>()
androidx.databinding.library.baseAdapters.R$bool
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$3
kotlin.LazyKt$WhenMappings
com.google.android.material.R$interpolator
androidx.navigation.Navigation$2
androidx.annotation.IntRange
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation
androidx.navigation.ui.NavigationUI$6
kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl$onTimeout$1
kotlinx.coroutines.flow.FlowKt__TransformKt$unsafeTransform$$inlined$unsafeFlow$3$lambda$1
androidx.core.text.BidiFormatter$DirectionalityEstimator:
    private static final int DIR_TYPE_CACHE_SIZE
org.jetbrains.annotations.TestOnly
kotlin.collections.AbstractMap$keys$1
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$elementAtOrNull$1
kotlin.jvm.internal.MutablePropertyReference2Impl
com.google.android.material.resources.MaterialAttributes:
    public void <init>()
    public static boolean resolveBooleanOrThrow(android.content.Context,int,java.lang.String)
    public static int resolveMinimumAccessibleTouchTarget(android.content.Context)
    public static int resolveDimension(android.content.Context,int,int)
androidx.databinding.MapChangeRegistry
kotlin.time.ClockMark
kotlinx.android.extensions.LayoutContainer
androidx.collection.LruCacheKt$lruCache$3
androidx.collection.ArrayMapKt
com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuViewAccessibilityDelegate
kotlin.collections.FloatIterator
com.google.android.material.shape.ShapeAppearanceModel:
    public com.google.android.material.shape.ShapeAppearanceModel withCornerSize(com.google.android.material.shape.CornerSize)
kotlinx.coroutines.flow.FlowKt__ContextKt$flowWith$$inlined$unsafeFlow$1$lambda$1
kotlinx.coroutines.flow.FlowKt__CollectKt$launchIn$1
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$2
com.google.android.material.R$styleable:
    private void <init>()
androidx.recyclerview.widget.MessageThreadUtil$2$1
kotlinx.coroutines.internal.ScopesKt
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$distinctBy$1
androidx.appcompat.app.ToolbarActionBar$MenuBuilderCallback
kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1$lambda$1$1
com.google.android.material.datepicker.RangeDateSelector$1
com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuItem
kotlin.io.ByteStreamsKt
kotlin.comparisons.UComparisonsKt
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt
kotlin.collections.ArraysKt___ArraysKt$withIndex$2
androidx.lifecycle.ViewModelProviders$DefaultFactory
kotlin.collections.CollectionsKt__IteratorsJVMKt
androidx.navigation.fragment.R$integer
kotlin.jvm.functions.Function14
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$2$2$1
kotlin.io.TextStreamsKt$readLines$1
androidx.core.widget.ListViewCompat:
    public static boolean canScrollList(android.widget.ListView,int)
    private void <init>()
kotlinx.coroutines.flow.internal.UndispatchedContextCollector
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer:
    void <init>(androidx.viewpager2.adapter.FragmentStateAdapter)
    private androidx.viewpager2.widget.ViewPager2 inferViewPager(androidx.recyclerview.widget.RecyclerView)
    void register(androidx.recyclerview.widget.RecyclerView)
    void unregister(androidx.recyclerview.widget.RecyclerView)
    private androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback mPageChangeCallback
    private androidx.recyclerview.widget.RecyclerView$AdapterDataObserver mDataObserver
    private androidx.lifecycle.LifecycleEventObserver mLifecycleObserver
    private androidx.viewpager2.widget.ViewPager2 mViewPager
    private long mPrimaryItemId
    final synthetic androidx.viewpager2.adapter.FragmentStateAdapter this$0
androidx.transition.Styleable$TransitionSet
androidx.viewpager2.adapter.StatefulAdapter
androidx.core.R$dimen
kotlinx.coroutines.TimeoutKt
androidx.core.view.ViewCompat$FocusRealDirection
kotlin.coroutines.experimental.migration.ContextMigration$Key
androidx.navigation.ActivityNavArgsLazyKt$navArgs$1
kotlin.io.LinesSequence$iterator$1
androidx.core.app.JobIntentService$GenericWorkItem
androidx.transition.ViewOverlayApi14$OverlayViewGroup:
    protected android.view.ViewParent invalidateChildInParentFast(int,int,android.graphics.Rect)
kotlinx.coroutines.channels.RendezvousChannel
kotlinx.coroutines.channels.AbstractChannel$Itr
com.google.android.material.dialog.MaterialDialogs
kotlinx.coroutines.channels.AbstractChannel$enqueueReceive$$inlined$addLastIfPrevAndIf$1
kotlin.comparisons.ComparisonsKt___ComparisonsKt
org.intellij.lang.annotations.JdkConstants$TitledBorderTitlePosition
androidx.transition.ArcMotion
androidx.databinding.adapters.AbsListViewBindingAdapter
androidx.documentfile.R
androidx.coordinatorlayout.R$attr:
    private void <init>()
org.jetbrains.annotations.Nullable
kotlin.text.StringsKt__StringsKt$splitToSequence$1
androidx.databinding.ViewDataBinding$PropertyChangedInverseListener
kotlin.coroutines.jvm.internal.CompletedContinuation
kotlinx.coroutines.scheduling.WorkQueueKt
androidx.appcompat.R$layout:
    private void <init>()
androidx.media.MediaBrowserServiceCompatApi23
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring
androidx.core.animation.AnimatorKt$addPauseListener$listener$1
androidx.navigation.fragment.R
androidx.appcompat.widget.AppCompatSeekBarHelper:
    android.graphics.drawable.Drawable getTickMark()
    void setTickMarkTintList(android.content.res.ColorStateList)
    android.content.res.ColorStateList getTickMarkTintList()
    void setTickMarkTintMode(android.graphics.PorterDuff$Mode)
    android.graphics.PorterDuff$Mode getTickMarkTintMode()
kotlinx.coroutines.android.HandlerContext
kotlin.ExceptionsKt__ExceptionsKt
kotlin.ranges.RangesKt___RangesKt:
    private static final int random(kotlin.ranges.IntRange)
    private static final long random(kotlin.ranges.LongRange)
    private static final char random(kotlin.ranges.CharRange)
    public static final long random(kotlin.ranges.LongRange,kotlin.random.Random)
    public static final char random(kotlin.ranges.CharRange,kotlin.random.Random)
    private static final boolean contains(kotlin.ranges.IntRange,java.lang.Integer)
    private static final boolean contains(kotlin.ranges.LongRange,java.lang.Long)
    private static final boolean contains(kotlin.ranges.CharRange,java.lang.Character)
    public static final boolean intRangeContains(kotlin.ranges.ClosedRange,byte)
    public static final boolean longRangeContains(kotlin.ranges.ClosedRange,byte)
    public static final boolean shortRangeContains(kotlin.ranges.ClosedRange,byte)
    public static final boolean doubleRangeContains(kotlin.ranges.ClosedRange,byte)
    public static final boolean floatRangeContains(kotlin.ranges.ClosedRange,byte)
    public static final boolean intRangeContains(kotlin.ranges.ClosedRange,double)
    public static final boolean longRangeContains(kotlin.ranges.ClosedRange,double)
    public static final boolean byteRangeContains(kotlin.ranges.ClosedRange,double)
    public static final boolean shortRangeContains(kotlin.ranges.ClosedRange,double)
    public static final boolean floatRangeContains(kotlin.ranges.ClosedRange,double)
    public static final boolean intRangeContains(kotlin.ranges.ClosedRange,float)
    public static final boolean longRangeContains(kotlin.ranges.ClosedRange,float)
    public static final boolean byteRangeContains(kotlin.ranges.ClosedRange,float)
    public static final boolean shortRangeContains(kotlin.ranges.ClosedRange,float)
    public static final boolean doubleRangeContains(kotlin.ranges.ClosedRange,float)
    public static final boolean longRangeContains(kotlin.ranges.ClosedRange,int)
    public static final boolean byteRangeContains(kotlin.ranges.ClosedRange,int)
    public static final boolean shortRangeContains(kotlin.ranges.ClosedRange,int)
    public static final boolean doubleRangeContains(kotlin.ranges.ClosedRange,int)
    public static final boolean floatRangeContains(kotlin.ranges.ClosedRange,int)
    public static final boolean intRangeContains(kotlin.ranges.ClosedRange,long)
    public static final boolean byteRangeContains(kotlin.ranges.ClosedRange,long)
    public static final boolean shortRangeContains(kotlin.ranges.ClosedRange,long)
    public static final boolean doubleRangeContains(kotlin.ranges.ClosedRange,long)
    public static final boolean floatRangeContains(kotlin.ranges.ClosedRange,long)
    public static final boolean intRangeContains(kotlin.ranges.ClosedRange,short)
    public static final boolean longRangeContains(kotlin.ranges.ClosedRange,short)
    public static final boolean byteRangeContains(kotlin.ranges.ClosedRange,short)
    public static final boolean doubleRangeContains(kotlin.ranges.ClosedRange,short)
    public static final boolean floatRangeContains(kotlin.ranges.ClosedRange,short)
    public static final kotlin.ranges.IntProgression downTo(int,byte)
    public static final kotlin.ranges.LongProgression downTo(long,byte)
    public static final kotlin.ranges.IntProgression downTo(byte,byte)
    public static final kotlin.ranges.IntProgression downTo(short,byte)
    public static final kotlin.ranges.CharProgression downTo(char,char)
    public static final kotlin.ranges.IntProgression downTo(int,int)
    public static final kotlin.ranges.LongProgression downTo(long,int)
    public static final kotlin.ranges.IntProgression downTo(byte,int)
    public static final kotlin.ranges.IntProgression downTo(short,int)
    public static final kotlin.ranges.LongProgression downTo(int,long)
    public static final kotlin.ranges.LongProgression downTo(long,long)
    public static final kotlin.ranges.LongProgression downTo(byte,long)
    public static final kotlin.ranges.LongProgression downTo(short,long)
    public static final kotlin.ranges.IntProgression downTo(int,short)
    public static final kotlin.ranges.LongProgression downTo(long,short)
    public static final kotlin.ranges.IntProgression downTo(byte,short)
    public static final kotlin.ranges.IntProgression downTo(short,short)
    public static final kotlin.ranges.IntProgression reversed(kotlin.ranges.IntProgression)
    public static final kotlin.ranges.LongProgression reversed(kotlin.ranges.LongProgression)
    public static final kotlin.ranges.CharProgression reversed(kotlin.ranges.CharProgression)
    public static final kotlin.ranges.IntProgression step(kotlin.ranges.IntProgression,int)
    public static final kotlin.ranges.LongProgression step(kotlin.ranges.LongProgression,long)
    public static final kotlin.ranges.CharProgression step(kotlin.ranges.CharProgression,int)
    public static final java.lang.Byte toByteExactOrNull(int)
    public static final java.lang.Byte toByteExactOrNull(long)
    public static final java.lang.Byte toByteExactOrNull(short)
    public static final java.lang.Byte toByteExactOrNull(double)
    public static final java.lang.Byte toByteExactOrNull(float)
    public static final java.lang.Integer toIntExactOrNull(long)
    public static final java.lang.Integer toIntExactOrNull(double)
    public static final java.lang.Integer toIntExactOrNull(float)
    public static final java.lang.Long toLongExactOrNull(double)
    public static final java.lang.Long toLongExactOrNull(float)
    public static final java.lang.Short toShortExactOrNull(int)
    public static final java.lang.Short toShortExactOrNull(long)
    public static final java.lang.Short toShortExactOrNull(double)
    public static final java.lang.Short toShortExactOrNull(float)
    public static final kotlin.ranges.IntRange until(int,byte)
    public static final kotlin.ranges.LongRange until(long,byte)
    public static final kotlin.ranges.IntRange until(byte,byte)
    public static final kotlin.ranges.IntRange until(short,byte)
    public static final kotlin.ranges.CharRange until(char,char)
    public static final kotlin.ranges.IntRange until(int,int)
    public static final kotlin.ranges.LongRange until(long,int)
    public static final kotlin.ranges.IntRange until(byte,int)
    public static final kotlin.ranges.IntRange until(short,int)
    public static final kotlin.ranges.LongRange until(int,long)
    public static final kotlin.ranges.LongRange until(long,long)
    public static final kotlin.ranges.LongRange until(byte,long)
    public static final kotlin.ranges.LongRange until(short,long)
    public static final kotlin.ranges.IntRange until(int,short)
    public static final kotlin.ranges.LongRange until(long,short)
    public static final kotlin.ranges.IntRange until(byte,short)
    public static final kotlin.ranges.IntRange until(short,short)
    public static final java.lang.Comparable coerceAtLeast(java.lang.Comparable,java.lang.Comparable)
    public static final byte coerceAtLeast(byte,byte)
    public static final short coerceAtLeast(short,short)
    public static final long coerceAtLeast(long,long)
    public static final float coerceAtLeast(float,float)
    public static final double coerceAtLeast(double,double)
    public static final java.lang.Comparable coerceAtMost(java.lang.Comparable,java.lang.Comparable)
    public static final byte coerceAtMost(byte,byte)
    public static final short coerceAtMost(short,short)
    public static final int coerceAtMost(int,int)
    public static final long coerceAtMost(long,long)
    public static final float coerceAtMost(float,float)
    public static final double coerceAtMost(double,double)
    public static final java.lang.Comparable coerceIn(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable)
    public static final byte coerceIn(byte,byte,byte)
    public static final short coerceIn(short,short,short)
    public static final int coerceIn(int,int,int)
    public static final long coerceIn(long,long,long)
    public static final float coerceIn(float,float,float)
    public static final double coerceIn(double,double,double)
    public static final java.lang.Comparable coerceIn(java.lang.Comparable,kotlin.ranges.ClosedFloatingPointRange)
    public static final java.lang.Comparable coerceIn(java.lang.Comparable,kotlin.ranges.ClosedRange)
    public static final int coerceIn(int,kotlin.ranges.ClosedRange)
    public static final long coerceIn(long,kotlin.ranges.ClosedRange)
    public void <init>()
com.google.android.material.navigation.NavigationView$1
androidx.fragment.app.FragmentViewModelLazyKt$activityViewModels$2
android.support.v4.media.session.MediaSessionCompat$Callback$CallbackHandler
kotlin.WasExperimental
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$5
com.google.android.material.navigation.NavigationView$SavedState
androidx.annotation.DrawableRes
kotlin.collections.ArraysKt:
    private void <init>()
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$2
androidx.fragment.app.FragmentManagerKt
kotlinx.coroutines.channels.BroadcastKt
kotlinx.coroutines.flow.FlowKt__ChannelsKt
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$1
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$1
kotlin.text.MatcherMatchResult$groupValues$1
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2
androidx.recyclerview.widget.ItemTouchHelper$ViewDropHandler
androidx.media.R$string
kotlinx.coroutines.flow.FlowKt__ChannelsKt$asFlow$$inlined$unsafeFlow$1
kotlinx.coroutines.flow.internal.CombineKt
androidx.media.MediaBrowserCompatUtils
kotlin.collections.ArraysKt___ArraysJvmKt$asList$7
kotlinx.coroutines.test.TestCoroutineContext$Dispatcher
androidx.lifecycle.DispatchQueue:
    private final boolean canRun()
    private final void enqueue(java.lang.Runnable)
    public void <init>()
    public static final synthetic void access$enqueue(androidx.lifecycle.DispatchQueue,java.lang.Runnable)
    public final void finish()
    public final void drainQueue()
    public final void runOrEnqueue(java.lang.Runnable)
    private boolean paused
    private boolean finished
    private boolean isDraining
    private final java.util.Queue queue
kotlin.reflect.KAnnotatedElement
androidx.databinding.ObservableShort$1
androidx.viewpager2.adapter.FragmentStateAdapter$4
kotlinx.coroutines.sync.MutexImpl$TryLockDesc
androidx.recyclerview.widget.ItemTouchHelper$2
com.google.android.material.textfield.IndicatorViewController:
    private boolean isCaptionStateHelperText(int)
    boolean errorIsDisplayed()
    boolean helperTextIsDisplayed()
    boolean helperTextShouldBeShown()
    android.content.res.ColorStateList getHelperTextViewColors()
    private static final int CAPTION_TRANSLATE_Y_ANIMATION_DURATION
    private static final int CAPTION_OPACITY_FADE_ANIMATION_DURATION
    static final int ERROR_INDEX
    static final int HELPER_INDEX
    static final int COUNTER_INDEX
    private static final int CAPTION_STATE_NONE
    private static final int CAPTION_STATE_ERROR
    private static final int CAPTION_STATE_HELPER_TEXT
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2$1
kotlinx.coroutines.flow.FlowKt__MigrationKt$delayEach$1
kotlin.ranges.URangesKt___URangesKt
kotlinx.coroutines.JobKt__JobKt:
    public static final kotlinx.coroutines.CompletableJob Job(kotlinx.coroutines.Job)
    public static synthetic kotlinx.coroutines.CompletableJob Job$default(kotlinx.coroutines.Job,int,java.lang.Object)
    public static final synthetic kotlinx.coroutines.Job Job(kotlinx.coroutines.Job)
    public static synthetic kotlinx.coroutines.Job Job$default(kotlinx.coroutines.Job,int,java.lang.Object)
    public static final kotlinx.coroutines.DisposableHandle DisposableHandle(kotlin.jvm.functions.Function0)
    public static final kotlinx.coroutines.DisposableHandle disposeOnCompletion(kotlinx.coroutines.Job,kotlinx.coroutines.DisposableHandle)
    public static final java.lang.Object cancelAndJoin(kotlinx.coroutines.Job,kotlin.coroutines.Continuation)
    public static final void cancelChildren(kotlinx.coroutines.Job,java.util.concurrent.CancellationException)
    public static synthetic void cancelChildren$default(kotlinx.coroutines.Job,java.util.concurrent.CancellationException,int,java.lang.Object)
    public static final synthetic void cancelChildren(kotlinx.coroutines.Job)
    public static final synthetic void cancelChildren(kotlinx.coroutines.Job,java.lang.Throwable)
    public static synthetic void cancelChildren$default(kotlinx.coroutines.Job,java.lang.Throwable,int,java.lang.Object)
    public static final boolean isActive(kotlin.coroutines.CoroutineContext)
    public static final synthetic void cancel(kotlin.coroutines.CoroutineContext)
    public static final void ensureActive(kotlinx.coroutines.Job)
    public static final void ensureActive(kotlin.coroutines.CoroutineContext)
    public static final void cancel(kotlinx.coroutines.Job,java.lang.String,java.lang.Throwable)
    public static synthetic void cancel$default(kotlinx.coroutines.Job,java.lang.String,java.lang.Throwable,int,java.lang.Object)
    public static final synthetic boolean cancel(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
    public static synthetic boolean cancel$default(kotlin.coroutines.CoroutineContext,java.lang.Throwable,int,java.lang.Object)
    public static final void cancelChildren(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException)
    public static synthetic void cancelChildren$default(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException,int,java.lang.Object)
    public static final synthetic void cancelChildren(kotlin.coroutines.CoroutineContext)
    public static final synthetic void cancelChildren(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
    public static synthetic void cancelChildren$default(kotlin.coroutines.CoroutineContext,java.lang.Throwable,int,java.lang.Object)
com.google.android.material.internal.ParcelableSparseBooleanArray
com.google.android.material.internal.NavigationMenuItemView:
    public void recycle()
    public void setShortcut(boolean,char)
    public boolean showsIcon()
androidx.navigation.Navigation:
    private void <init>()
    public static android.view.View$OnClickListener createNavigateOnClickListener(int)
    public static android.view.View$OnClickListener createNavigateOnClickListener(int,android.os.Bundle)
    public static android.view.View$OnClickListener createNavigateOnClickListener(androidx.navigation.NavDirections)
kotlinx.coroutines.flow.internal.SafeCollectorKt$unsafeFlow$1
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$$inlined$collect$1$lambda$1
androidx.appcompat.widget.PopupMenu$2
kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$1
androidx.transition.MatrixUtils
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$partition$1
androidx.lifecycle.MutableLiveData:
    public void <init>(java.lang.Object)
    public void postValue(java.lang.Object)
kotlinx.coroutines.flow.internal.SafeCollectorKt$unsafeFlow$1$collect$1
androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener
kotlin.jvm.JvmWildcard
androidx.navigation.NavGraphBuilderKt
androidx.databinding.ObservableArrayMap
androidx.databinding.adapters.ObservableListAdapter$1
androidx.viewpager2.widget.CompositePageTransformer
androidx.core.content.res.FontResourcesParserCompat$FetchStrategy
com.czluciusdev.diceroller.R$navigation
kotlin.collections.AbstractList$IteratorImpl
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImpl
kotlin.comparisons.NaturalOrderComparator
androidx.annotation.LongDef
com.google.android.material.R$anim
kotlinx.coroutines.flow.internal.ChannelFlow
kotlin.collections.AbstractMutableList
androidx.databinding.adapters.AbsSpinnerBindingAdapter
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$1
androidx.lifecycle.process.R
com.google.android.material.internal.DescendantOffsetUtils:
    public void <init>()
kotlin.PreconditionsKt__AssertionsJVMKt
androidx.navigation.ui.ktx.R$drawable
androidx.core.app.ServiceCompat
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$5
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$3
kotlinx.coroutines.flow.internal.ChannelFlowKt$withContextUndispatched$$inlined$suspendCoroutineUninterceptedOrReturn$lambda$1
kotlin.jvm.internal.ReflectionFactory:
    public kotlin.reflect.KClass createKotlinClass(java.lang.Class)
    public kotlin.reflect.KClass createKotlinClass(java.lang.Class,java.lang.String)
    public kotlin.reflect.KDeclarationContainer getOrCreateKotlinPackage(java.lang.Class,java.lang.String)
    public kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class,java.lang.String)
    public kotlin.reflect.KFunction function(kotlin.jvm.internal.FunctionReference)
    public kotlin.reflect.KProperty0 property0(kotlin.jvm.internal.PropertyReference0)
    public kotlin.reflect.KMutableProperty0 mutableProperty0(kotlin.jvm.internal.MutablePropertyReference0)
    public kotlin.reflect.KMutableProperty1 mutableProperty1(kotlin.jvm.internal.MutablePropertyReference1)
    public kotlin.reflect.KProperty2 property2(kotlin.jvm.internal.PropertyReference2)
    public kotlin.reflect.KMutableProperty2 mutableProperty2(kotlin.jvm.internal.MutablePropertyReference2)
    public kotlin.reflect.KType typeOf(kotlin.reflect.KClassifier,java.util.List,boolean)
    private static final java.lang.String KOTLIN_JVM_FUNCTIONS
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$$inlined$unsafeFlow$1
kotlinx.coroutines.flow.FlowKt__TransformKt$unsafeTransform$$inlined$unsafeFlow$3$1
kotlinx.coroutines.CoroutineExceptionHandlerKt$CoroutineExceptionHandler$1
androidx.constraintlayout.solver.widgets.ConstraintAnchor:
    private boolean isConnectionToMe(androidx.constraintlayout.solver.widgets.ConstraintWidget,java.util.HashSet)
    public androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType getConnectionType()
    public void setConnectionType(androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType)
    public void setConnectionCreator(int)
    public boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int,int)
    public boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int)
    public boolean isSideAnchor()
    public boolean isSimilarDimensionConnection(androidx.constraintlayout.solver.widgets.ConstraintAnchor)
    public void setStrength(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength)
    public void setMargin(int)
    public void setGoneMargin(int)
    public boolean isVerticalAnchor()
    public int getSnapPriorityLevel()
    public int getPriorityLevel()
    public boolean isSnapCompatibleWith(androidx.constraintlayout.solver.widgets.ConstraintAnchor)
    public boolean isConnectionAllowed(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor)
    public boolean isConnectionAllowed(androidx.constraintlayout.solver.widgets.ConstraintWidget)
    public final androidx.constraintlayout.solver.widgets.ConstraintAnchor getOpposite()
    private static final boolean ALLOW_BINARY
    public static final int USER_CREATOR
    public static final int SCOUT_CREATOR
    public static final int AUTO_CONSTRAINT_CREATOR
    private static final int UNSET_GONE_MARGIN
com.google.android.material.circularreveal.CircularRevealHelper:
    public void <init>(com.google.android.material.circularreveal.CircularRevealHelper$Delegate)
    private void invalidateRevealInfo()
    private float getDistanceToFurthestCorner(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
    private void drawOverlayDrawable(android.graphics.Canvas)
    private boolean shouldDrawCircularReveal()
    private boolean shouldDrawScrim()
    private boolean shouldDrawOverlayDrawable()
    private void drawDebugMode(android.graphics.Canvas)
    private void drawDebugCircle(android.graphics.Canvas,int,float)
    private final com.google.android.material.circularreveal.CircularRevealHelper$Delegate delegate
    private final android.view.View view
    private final android.graphics.Path revealPath
    private final android.graphics.Paint revealPaint
    private final android.graphics.Paint scrimPaint
    private com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo revealInfo
    private android.graphics.drawable.Drawable overlayDrawable
    private android.graphics.Paint debugPaint
    private boolean buildingCircularRevealCache
    private boolean hasCircularRevealCache
    private static final boolean DEBUG
    public static final int BITMAP_SHADER
    public static final int CLIP_PATH
    public static final int REVEAL_ANIMATOR
androidx.loader.content.ModernAsyncTask$2
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1
kotlinx.coroutines.flow.internal.AbortFlowException
kotlinx.coroutines.DisposeOnCancel
kotlin.coroutines.experimental.migration.ExperimentalContinuationMigration
androidx.loader.content.ModernAsyncTask$WorkerRunnable
kotlin.io.FileTreeWalk$FileTreeWalkIterator$TopDownDirectoryState
androidx.core.content.FileProvider
kotlinx.coroutines.channels.TickerChannelsKt
androidx.appcompat.R$string:
    private void <init>()
androidx.core.transition.TransitionKt
kotlin.text.CharDirectionality$Companion
kotlinx.coroutines.SupervisorJobImpl
kotlin.ranges.CharProgressionIterator
kotlin.jvm.internal.Ref$IntRef
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl$1
androidx.activity.ktx.R$id
androidx.appcompat.app.ToolbarActionBar$ToolbarCallbackWrapper
com.google.android.material.R$attr:
    private void <init>()
androidx.navigation.ui.R
androidx.core.content.ContextCompat:
    protected void <init>()
    public static boolean startActivities(android.content.Context,android.content.Intent[])
    public static java.io.File getDataDir(android.content.Context)
    public static java.io.File[] getObbDirs(android.content.Context)
    public static java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String)
    public static java.io.File[] getExternalCacheDirs(android.content.Context)
    public static int checkSelfPermission(android.content.Context,java.lang.String)
    public static java.io.File getNoBackupFilesDir(android.content.Context)
    public static java.io.File getCodeCacheDir(android.content.Context)
    private static synchronized java.io.File createFilesDir(java.io.File)
    public static android.content.Context createDeviceProtectedStorageContext(android.content.Context)
    public static boolean isDeviceProtectedStorage(android.content.Context)
    public static java.util.concurrent.Executor getMainExecutor(android.content.Context)
    public static void startForegroundService(android.content.Context,android.content.Intent)
    public static java.lang.Object getSystemService(android.content.Context,java.lang.Class)
    public static java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)
    private static final java.lang.String TAG
androidx.annotation.Dimension
com.google.android.material.animation.MotionSpec:
    private android.animation.PropertyValuesHolder[] clonePropertyValuesHolder(android.animation.PropertyValuesHolder[])
    public boolean hasPropertyValues(java.lang.String)
    public android.animation.PropertyValuesHolder[] getPropertyValues(java.lang.String)
    public android.animation.ObjectAnimator getAnimator(java.lang.String,java.lang.Object,android.util.Property)
    private static final java.lang.String TAG
androidx.databinding.adapters.AdapterViewBindingAdapter$OnNothingSelected
androidx.core.widget.EdgeEffectCompat:
    public void <init>(android.content.Context)
    public void setSize(int,int)
    public boolean isFinished()
    public void finish()
    public boolean onPull(float)
    public boolean onPull(float,float)
    public boolean onRelease()
    public boolean onAbsorb(int)
    public boolean draw(android.graphics.Canvas)
    private android.widget.EdgeEffect mEdgeEffect
androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments:
    public int getStart()
    public int getEnd()
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams$Table:
    private void <init>()
    public static final int UNUSED
    public static final int ANDROID_ORIENTATION
    public static final int LAYOUT_CONSTRAINT_CIRCLE
    public static final int LAYOUT_CONSTRAINT_CIRCLE_RADIUS
    public static final int LAYOUT_CONSTRAINT_CIRCLE_ANGLE
    public static final int LAYOUT_CONSTRAINT_GUIDE_BEGIN
    public static final int LAYOUT_CONSTRAINT_GUIDE_END
    public static final int LAYOUT_CONSTRAINT_GUIDE_PERCENT
    public static final int LAYOUT_CONSTRAINT_LEFT_TO_LEFT_OF
    public static final int LAYOUT_CONSTRAINT_LEFT_TO_RIGHT_OF
    public static final int LAYOUT_CONSTRAINT_RIGHT_TO_LEFT_OF
    public static final int LAYOUT_CONSTRAINT_RIGHT_TO_RIGHT_OF
    public static final int LAYOUT_CONSTRAINT_TOP_TO_TOP_OF
    public static final int LAYOUT_CONSTRAINT_TOP_TO_BOTTOM_OF
    public static final int LAYOUT_CONSTRAINT_BOTTOM_TO_TOP_OF
    public static final int LAYOUT_CONSTRAINT_BOTTOM_TO_BOTTOM_OF
    public static final int LAYOUT_CONSTRAINT_BASELINE_TO_BASELINE_OF
    public static final int LAYOUT_CONSTRAINT_START_TO_END_OF
    public static final int LAYOUT_CONSTRAINT_START_TO_START_OF
    public static final int LAYOUT_CONSTRAINT_END_TO_START_OF
    public static final int LAYOUT_CONSTRAINT_END_TO_END_OF
    public static final int LAYOUT_GONE_MARGIN_LEFT
    public static final int LAYOUT_GONE_MARGIN_TOP
    public static final int LAYOUT_GONE_MARGIN_RIGHT
    public static final int LAYOUT_GONE_MARGIN_BOTTOM
    public static final int LAYOUT_GONE_MARGIN_START
    public static final int LAYOUT_GONE_MARGIN_END
    public static final int LAYOUT_CONSTRAINED_WIDTH
    public static final int LAYOUT_CONSTRAINED_HEIGHT
    public static final int LAYOUT_CONSTRAINT_HORIZONTAL_BIAS
    public static final int LAYOUT_CONSTRAINT_VERTICAL_BIAS
    public static final int LAYOUT_CONSTRAINT_WIDTH_DEFAULT
    public static final int LAYOUT_CONSTRAINT_HEIGHT_DEFAULT
    public static final int LAYOUT_CONSTRAINT_WIDTH_MIN
    public static final int LAYOUT_CONSTRAINT_WIDTH_MAX
    public static final int LAYOUT_CONSTRAINT_WIDTH_PERCENT
    public static final int LAYOUT_CONSTRAINT_HEIGHT_MIN
    public static final int LAYOUT_CONSTRAINT_HEIGHT_MAX
    public static final int LAYOUT_CONSTRAINT_HEIGHT_PERCENT
    public static final int LAYOUT_CONSTRAINT_LEFT_CREATOR
    public static final int LAYOUT_CONSTRAINT_TOP_CREATOR
    public static final int LAYOUT_CONSTRAINT_RIGHT_CREATOR
    public static final int LAYOUT_CONSTRAINT_BOTTOM_CREATOR
    public static final int LAYOUT_CONSTRAINT_BASELINE_CREATOR
    public static final int LAYOUT_CONSTRAINT_DIMENSION_RATIO
    public static final int LAYOUT_CONSTRAINT_HORIZONTAL_WEIGHT
    public static final int LAYOUT_CONSTRAINT_VERTICAL_WEIGHT
    public static final int LAYOUT_CONSTRAINT_HORIZONTAL_CHAINSTYLE
    public static final int LAYOUT_CONSTRAINT_VERTICAL_CHAINSTYLE
    public static final int LAYOUT_EDITOR_ABSOLUTEX
    public static final int LAYOUT_EDITOR_ABSOLUTEY
kotlinx.coroutines.intrinsics.UndispatchedKt
androidx.core.transition.TransitionKt$addListener$listener$1
kotlinx.coroutines.channels.AbstractChannel
androidx.swiperefreshlayout.R$styleable
kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$2
kotlinx.coroutines.sync.MutexKt
kotlin.sequences.SequenceScope
kotlin.jvm.internal.ArrayBooleanIterator
androidx.appcompat.widget.ShareActionProvider
androidx.activity.OnBackPressedDispatcherKt$addCallback$callback$1
kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$1
kotlinx.coroutines.flow.internal.CombineKt$onReceive$1
kotlinx.coroutines.internal.ExceptionsConstuctorKt$tryCopyException$5$1
androidx.databinding.adapters.TimePickerBindingAdapter$1
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath:
    public void printVPath(int)
    public java.lang.String nodesToString(androidx.core.graphics.PathParser$PathDataNode[])
    public boolean canApplyTheme()
    public void applyTheme(android.content.res.Resources$Theme)
    protected static final int FILL_TYPE_WINDING
androidx.core.app.NotificationCompat$Action$Builder
com.google.android.material.floatingactionbutton.MotionStrategy:
    public abstract com.google.android.material.animation.MotionSpec getCurrentMotionSpec()
    public abstract int getDefaultMotionSpecResource()
    public abstract void addAnimationListener(android.animation.Animator$AnimatorListener)
    public abstract void removeAnimationListener(android.animation.Animator$AnimatorListener)
androidx.media.R$layout
androidx.core.util.AtomicFileKt
androidx.navigation.NavGraphViewModelLazyKt$navGraphViewModels$backStackEntry$2
androidx.appcompat.R$bool:
    private void <init>()
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$invokeSuspend$$inlined$collect$1
android.support.v4.media.session.MediaSessionCompat$SessionFlags
androidx.core.os.UserManagerCompat
org.intellij.lang.annotations.PrintFormat
androidx.appcompat.app.WindowDecorActionBar$TabImpl
androidx.core.util.AtomicFile
androidx.lifecycle.LiveData:
    public void <init>(java.lang.Object)
    public void removeObservers(androidx.lifecycle.LifecycleOwner)
    protected void postValue(java.lang.Object)
    public boolean hasObservers()
    static final int START_VERSION
androidx.annotation.CallSuper
androidx.vectordrawable.R$integer
androidx.navigation.common.R$color
com.czluciusdev.diceroller.BR
kotlinx.coroutines.CoroutineScopeKt
androidx.loader.R$layout
com.google.android.material.datepicker.SmoothCalendarLayoutManager:
    private static final float MILLISECONDS_PER_INCH
com.google.android.material.snackbar.BaseTransientBottomBar$3
androidx.legacy.coreui.R$dimen
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$single$3
kotlin.jvm.internal.PropertyReference2Impl
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collect$2
kotlin.text.CharsetsKt
androidx.databinding.adapters.AbsListViewBindingAdapter$1
androidx.core.app.ShareCompat$IntentBuilder
androidx.fragment.app.FragmentManagerNonConfig
kotlinx.coroutines.CompletedIdempotentResult
androidx.viewpager2.R$attr
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder:
    void <init>(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks,boolean)
com.google.android.material.circularreveal.CircularRevealWidget:
    public abstract void draw(android.graphics.Canvas)
    public abstract boolean isOpaque()
    public abstract android.graphics.drawable.Drawable getCircularRevealOverlayDrawable()
androidx.media.VolumeProviderCompat$1
androidx.databinding.BaseObservableField
androidx.core.view.MenuItemCompat:
    public static void setShowAsAction(android.view.MenuItem,int)
    public static android.view.MenuItem setActionView(android.view.MenuItem,android.view.View)
    public static android.view.MenuItem setActionView(android.view.MenuItem,int)
    public static android.view.View getActionView(android.view.MenuItem)
    public static androidx.core.view.ActionProvider getActionProvider(android.view.MenuItem)
    public static boolean expandActionView(android.view.MenuItem)
    public static boolean collapseActionView(android.view.MenuItem)
    public static boolean isActionViewExpanded(android.view.MenuItem)
    public static android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,androidx.core.view.MenuItemCompat$OnActionExpandListener)
    public static java.lang.CharSequence getContentDescription(android.view.MenuItem)
    public static java.lang.CharSequence getTooltipText(android.view.MenuItem)
    public static void setShortcut(android.view.MenuItem,char,char,int,int)
    public static int getNumericModifiers(android.view.MenuItem)
    public static int getAlphabeticModifiers(android.view.MenuItem)
    public static android.content.res.ColorStateList getIconTintList(android.view.MenuItem)
    public static android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem)
    private void <init>()
    private static final java.lang.String TAG
    public static final int SHOW_AS_ACTION_NEVER
    public static final int SHOW_AS_ACTION_IF_ROOM
    public static final int SHOW_AS_ACTION_ALWAYS
    public static final int SHOW_AS_ACTION_WITH_TEXT
    public static final int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
kotlin.ULong$Companion
com.google.android.material.tabs.TabLayout$2
kotlin.ranges.IntRange:
    public static final synthetic kotlin.ranges.IntRange access$getEMPTY$cp()
    public java.lang.Integer getStart()
    public synthetic bridge java.lang.Comparable getStart()
    public java.lang.Integer getEndInclusive()
    public synthetic bridge java.lang.Comparable getEndInclusive()
    public boolean contains(int)
    public synthetic bridge boolean contains(java.lang.Comparable)
android.support.v4.media.session.MediaSessionCompat$2
androidx.appcompat.app.ActionBar:
    public abstract void setCustomView(android.view.View)
    public abstract void setCustomView(android.view.View,androidx.appcompat.app.ActionBar$LayoutParams)
    public abstract void setCustomView(int)
    public abstract void setIcon(int)
    public abstract void setIcon(android.graphics.drawable.Drawable)
    public abstract void setLogo(int)
    public abstract void setLogo(android.graphics.drawable.Drawable)
    public abstract void setListNavigationCallbacks(android.widget.SpinnerAdapter,androidx.appcompat.app.ActionBar$OnNavigationListener)
    public abstract void setSelectedNavigationItem(int)
    public abstract int getSelectedNavigationIndex()
    public abstract int getNavigationItemCount()
    public abstract void setTitle(int)
    public abstract void setSubtitle(java.lang.CharSequence)
    public abstract void setSubtitle(int)
    public abstract void setDisplayOptions(int)
    public abstract void setDisplayOptions(int,int)
    public abstract void setDisplayUseLogoEnabled(boolean)
    public abstract void setDisplayShowHomeEnabled(boolean)
    public abstract void setDisplayShowTitleEnabled(boolean)
    public abstract void setDisplayShowCustomEnabled(boolean)
    public abstract void setBackgroundDrawable(android.graphics.drawable.Drawable)
    public void setStackedBackgroundDrawable(android.graphics.drawable.Drawable)
    public void setSplitBackgroundDrawable(android.graphics.drawable.Drawable)
    public abstract android.view.View getCustomView()
    public abstract java.lang.CharSequence getTitle()
    public abstract java.lang.CharSequence getSubtitle()
    public abstract int getNavigationMode()
    public abstract void setNavigationMode(int)
    public abstract androidx.appcompat.app.ActionBar$Tab newTab()
    public abstract void addTab(androidx.appcompat.app.ActionBar$Tab)
    public abstract void addTab(androidx.appcompat.app.ActionBar$Tab,boolean)
    public abstract void addTab(androidx.appcompat.app.ActionBar$Tab,int)
    public abstract void addTab(androidx.appcompat.app.ActionBar$Tab,int,boolean)
    public abstract void removeTab(androidx.appcompat.app.ActionBar$Tab)
    public abstract void removeTabAt(int)
    public abstract void removeAllTabs()
    public abstract void selectTab(androidx.appcompat.app.ActionBar$Tab)
    public abstract androidx.appcompat.app.ActionBar$Tab getSelectedTab()
    public abstract androidx.appcompat.app.ActionBar$Tab getTabAt(int)
    public abstract int getTabCount()
    public abstract int getHeight()
    public abstract void show()
    public abstract void hide()
    public abstract boolean isShowing()
    public abstract void addOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener)
    public abstract void removeOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener)
    public void setHomeButtonEnabled(boolean)
    public boolean isTitleTruncated()
    public void setHomeAsUpIndicator(int)
    public void setHomeActionContentDescription(java.lang.CharSequence)
    public void setHideOnContentScrollEnabled(boolean)
    public boolean isHideOnContentScrollEnabled()
    public int getHideOffset()
    public void setHideOffset(int)
    public void setElevation(float)
    public float getElevation()
    boolean requestFocus()
    public static final int NAVIGATION_MODE_STANDARD
    public static final int NAVIGATION_MODE_LIST
    public static final int NAVIGATION_MODE_TABS
    public static final int DISPLAY_USE_LOGO
    public static final int DISPLAY_SHOW_HOME
    public static final int DISPLAY_HOME_AS_UP
    public static final int DISPLAY_SHOW_TITLE
    public static final int DISPLAY_SHOW_CUSTOM
kotlin.collections.IndexingIterator
androidx.lifecycle.extensions.R$layout
androidx.transition.ChangeClipBounds
androidx.loader.content.Loader$OnLoadCompleteListener:
    public abstract void onLoadComplete(androidx.loader.content.Loader,java.lang.Object)
androidx.asynclayoutinflater.view.AsyncLayoutInflater
androidx.transition.ChangeTransform$GhostListener
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase
androidx.databinding.adapters.ViewBindingAdapter$OnViewAttachedToWindow
kotlin.coroutines.experimental.RestrictsSuspension
androidx.databinding.ObservableBoolean
kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$2
org.intellij.lang.annotations.JdkConstants$BoxLayoutAxis
androidx.core.widget.AutoSizeableTextView:
    public abstract void setAutoSizeTextTypeWithDefaults(int)
    public abstract void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)
    public abstract void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)
    public abstract int getAutoSizeTextType()
    public abstract int getAutoSizeStepGranularity()
    public abstract int getAutoSizeMinTextSize()
    public abstract int getAutoSizeMaxTextSize()
    public abstract int[] getAutoSizeTextAvailableSizes()
kotlinx.coroutines.channels.ConflatedBroadcastChannel$State
androidx.appcompat.widget.AppCompatCompoundButtonHelper$DirectSetButtonDrawableInterface
androidx.viewpager2.R$style
com.google.android.material.snackbar.BaseTransientBottomBar$4
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter:
    public androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
    public int getId()
    public android.os.Parcelable onSaveInstanceState()
    public void onRestoreInstanceState(android.os.Parcelable)
androidx.versionedparcelable.VersionedParcelStream
androidx.appcompat.app.AppCompatDelegate:
    public static androidx.appcompat.app.AppCompatDelegate create(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback)
    public static androidx.appcompat.app.AppCompatDelegate create(android.content.Context,android.app.Activity,androidx.appcompat.app.AppCompatCallback)
    public static void setDefaultNightMode(int)
    public static void setCompatVectorFromResourcesEnabled(boolean)
    public static boolean isCompatVectorFromResourcesEnabled()
    private static void applyDayNightToActiveDelegates()
    public abstract void setSupportActionBar(androidx.appcompat.widget.Toolbar)
    public abstract boolean hasWindowFeature(int)
    public abstract androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback)
    public abstract android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
    public abstract void setHandleNativeActionModesEnabled(boolean)
    public abstract boolean isHandleNativeActionModesEnabled()
    public abstract boolean applyDayNight()
    public abstract void setLocalNightMode(int)
    static final java.lang.String TAG
    public static final int MODE_NIGHT_FOLLOW_SYSTEM
    public static final int MODE_NIGHT_AUTO_TIME
    public static final int MODE_NIGHT_AUTO
    public static final int MODE_NIGHT_NO
    public static final int MODE_NIGHT_YES
    public static final int MODE_NIGHT_AUTO_BATTERY
    public static final int MODE_NIGHT_UNSPECIFIED
    public static final int FEATURE_SUPPORT_ACTION_BAR
    public static final int FEATURE_SUPPORT_ACTION_BAR_OVERLAY
    public static final int FEATURE_ACTION_MODE_OVERLAY
androidx.activity.ktx.R$integer
androidx.recyclerview.widget.DiffUtil$Callback
androidx.core.view.inputmethod.EditorInfoCompat
androidx.appcompat.view.menu.MenuHelper
kotlinx.android.extensions.CacheImplementation
kotlinx.coroutines.CancelFutureOnCompletion
kotlin.text.Regex$fromInt$$inlined$apply$lambda$1
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$$inlined$collect$1$1
kotlin.jvm.internal.PropertyReference0Impl
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$1
androidx.navigation.common.ktx.R$drawable
androidx.appcompat.widget.ListPopupWindow$1
androidx.asynclayoutinflater.view.AsyncLayoutInflater$OnInflateFinishedListener
com.czluciusdev.diceroller.R$xml
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$mapIndexedTo$1
androidx.databinding.library.baseAdapters.R
kotlinx.coroutines.ThreadPoolDispatcher$executor$1
kotlin.Result$Failure
kotlin.jvm.internal.CallableReference$NoReceiver:
    private java.lang.Object readResolve()
com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo:
    public void <init>(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
    public void set(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
    public boolean isInvalid()
    public static final float INVALID_RADIUS
androidx.viewpager.widget.ViewPager$4
kotlin.collections.AbstractSet
kotlin.time.Clock
androidx.core.transition.TransitionKt$addListener$1
androidx.databinding.ObservableByte$1
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$invokeSuspend$$inlined$select$lambda$1
kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1
kotlinx.coroutines.ExperimentalCoroutinesApi
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$2
com.google.android.material.tabs.TabLayout
kotlin.NumbersKt
android.support.v4.media.MediaDescriptionCompatApi21:
    private void <init>()
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$filterIndexed$1
kotlinx.coroutines.flow.FlowKt__CountKt$count$$inlined$collect$2
org.intellij.lang.annotations.JdkConstants$InputEventMask
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$lastOrNull$3
kotlin.annotation.AnnotationTarget
androidx.appcompat.widget.ActionMenuPresenter$SavedState$1
kotlinx.coroutines.sync.SemaphoreKt$withPermit$1
androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo
android.support.v4.media.session.MediaSessionCompat$Token:
    void <init>(java.lang.Object,android.support.v4.media.session.IMediaSession)
    public static android.support.v4.media.session.MediaSessionCompat$Token fromToken(java.lang.Object)
    public static android.support.v4.media.session.MediaSessionCompat$Token fromToken(java.lang.Object,android.support.v4.media.session.IMediaSession)
    public static android.support.v4.media.session.MediaSessionCompat$Token fromBundle(android.os.Bundle)
    public java.lang.Object getToken()
    public android.os.Bundle getSessionToken2Bundle()
    public android.os.Bundle toBundle()
androidx.viewpager2.R$drawable
androidx.media.MediaBrowserProtocol
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener
kotlin.ResultKt
androidx.constraintlayout.solver.ArrayRow:
    public androidx.constraintlayout.solver.ArrayRow createRowGreaterThan(androidx.constraintlayout.solver.SolverVariable,int,androidx.constraintlayout.solver.SolverVariable)
    public androidx.constraintlayout.solver.ArrayRow createRowEqualDimension(float,float,float,androidx.constraintlayout.solver.SolverVariable,int,androidx.constraintlayout.solver.SolverVariable,int,androidx.constraintlayout.solver.SolverVariable,int,androidx.constraintlayout.solver.SolverVariable,int)
    int sizeInBytes()
    private static final boolean DEBUG
    private static final float epsilon
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransform$2
kotlinx.coroutines.internal.MainDispatcherFactory$DefaultImpls
androidx.swiperefreshlayout.R$integer
androidx.databinding.adapters.VideoViewBindingAdapter
androidx.annotation.Px
androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$8
androidx.vectordrawable.R$color
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$5
androidx.appcompat.text.AllCapsTransformationMethod
org.intellij.lang.annotations.JdkConstants$PatternFlags
androidx.core.provider.FontsContractCompat$4$8
androidx.navigation.common.ktx.R$integer
kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$$inlined$collect$1
android.support.v4.media.MediaBrowserCompat$Subscription
kotlin.collections.EmptyMap
androidx.core.app.ActivityCompat$SharedElementCallback21Impl$1
kotlin.sequences.SequencesKt___SequencesKt$minus$4$iterator$1
kotlinx.coroutines.selects.SelectUnbiasedKt
androidx.core.app.NotificationManagerCompat$Task
androidx.core.os.ConfigurationCompat
kotlinx.coroutines.flow.FlowKt__MigrationKt$delayFlow$1
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2
androidx.cardview.widget.CardView$1
kotlin.text.StringsKt___StringsKt$asSequence$$inlined$Sequence$1
kotlin.coroutines.jvm.internal.SuspendLambda
androidx.legacy.app.ActionBarDrawerToggle
androidx.recyclerview.R$styleable:
    private void <init>()
kotlinx.coroutines.EventLoop_commonKt
com.czluciusdev.diceroller.R$bool
kotlinx.coroutines.scheduling.TaskImpl
androidx.media.AudioAttributesImplApi21:
    void <init>(android.media.AudioAttributes)
    void <init>(android.media.AudioAttributes,int)
    static java.lang.reflect.Method getAudioAttributesToLegacyStreamTypeMethod()
    public static androidx.media.AudioAttributesImpl fromBundle(android.os.Bundle)
    public java.lang.Object getAudioAttributes()
    public int getVolumeControlStream()
    public int getLegacyStreamType()
    public int getRawLegacyStreamType()
    public int getContentType()
    public int getUsage()
    public int getFlags()
    public android.os.Bundle toBundle()
    private static final java.lang.String TAG
    static java.lang.reflect.Method sAudioAttributesToLegacyStreamType
kotlinx.coroutines.channels.AbstractChannel$ReceiveElement
kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$$inlined$unsafeFlow$1
androidx.annotation.StringRes
androidx.asynclayoutinflater.R
kotlin.reflect.KVisibility
androidx.core.app.NotificationManagerCompat$ServiceConnectedEvent
kotlinx.coroutines.channels.ProducerCoroutine
kotlin.coroutines.SafeContinuation$Companion
kotlin.SinceKotlin
kotlin.TuplesKt
kotlinx.coroutines.ResumeUndispatchedRunnable
androidx.core.view.inputmethod.InputConnectionCompat$2
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerWrapper
androidx.core.app.JobIntentService$WorkEnqueuer
kotlin.sequences.SequencesKt__SequenceBuilderKt
androidx.appcompat.app.ToolbarActionBar:
    void <init>(androidx.appcompat.widget.Toolbar,java.lang.CharSequence,android.view.Window$Callback)
    private android.view.Menu getMenu()
    public android.view.Window$Callback getWrappedWindowCallback()
    public void setCustomView(android.view.View)
    public void setCustomView(android.view.View,androidx.appcompat.app.ActionBar$LayoutParams)
    public void setCustomView(int)
    public void setIcon(int)
    public void setIcon(android.graphics.drawable.Drawable)
    public void setLogo(int)
    public void setLogo(android.graphics.drawable.Drawable)
    public void setStackedBackgroundDrawable(android.graphics.drawable.Drawable)
    public void setSplitBackgroundDrawable(android.graphics.drawable.Drawable)
    public void setHomeButtonEnabled(boolean)
    public void setElevation(float)
    public float getElevation()
    public android.content.Context getThemedContext()
    public boolean isTitleTruncated()
    public void setHomeAsUpIndicator(android.graphics.drawable.Drawable)
    public void setHomeAsUpIndicator(int)
    public void setHomeActionContentDescription(java.lang.CharSequence)
    public void setDefaultDisplayHomeAsUpEnabled(boolean)
    public void setHomeActionContentDescription(int)
    public void setShowHideAnimationEnabled(boolean)
    public void onConfigurationChanged(android.content.res.Configuration)
    public void setListNavigationCallbacks(android.widget.SpinnerAdapter,androidx.appcompat.app.ActionBar$OnNavigationListener)
    public void setSelectedNavigationItem(int)
    public int getSelectedNavigationIndex()
    public int getNavigationItemCount()
    public void setTitle(java.lang.CharSequence)
    public void setTitle(int)
    public void setWindowTitle(java.lang.CharSequence)
    public boolean requestFocus()
    public void setSubtitle(java.lang.CharSequence)
    public void setSubtitle(int)
    public void setDisplayOptions(int)
    public void setDisplayOptions(int,int)
    public void setDisplayUseLogoEnabled(boolean)
    public void setDisplayShowHomeEnabled(boolean)
    public void setDisplayHomeAsUpEnabled(boolean)
    public void setDisplayShowTitleEnabled(boolean)
    public void setDisplayShowCustomEnabled(boolean)
    public void setBackgroundDrawable(android.graphics.drawable.Drawable)
    public android.view.View getCustomView()
    public java.lang.CharSequence getTitle()
    public java.lang.CharSequence getSubtitle()
    public int getNavigationMode()
    public void setNavigationMode(int)
    public int getDisplayOptions()
    public androidx.appcompat.app.ActionBar$Tab newTab()
    public void addTab(androidx.appcompat.app.ActionBar$Tab)
    public void addTab(androidx.appcompat.app.ActionBar$Tab,boolean)
    public void addTab(androidx.appcompat.app.ActionBar$Tab,int)
    public void addTab(androidx.appcompat.app.ActionBar$Tab,int,boolean)
    public void removeTab(androidx.appcompat.app.ActionBar$Tab)
    public void removeTabAt(int)
    public void removeAllTabs()
    public void selectTab(androidx.appcompat.app.ActionBar$Tab)
    public androidx.appcompat.app.ActionBar$Tab getSelectedTab()
    public androidx.appcompat.app.ActionBar$Tab getTabAt(int)
    public int getTabCount()
    public int getHeight()
    public void show()
    public void hide()
    public boolean isShowing()
    public boolean openOptionsMenu()
    public boolean closeOptionsMenu()
    public boolean invalidateOptionsMenu()
    public boolean collapseActionView()
    void populateOptionsMenu()
    public boolean onMenuKeyEvent(android.view.KeyEvent)
    public boolean onKeyShortcut(int,android.view.KeyEvent)
    void onDestroy()
    public void addOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener)
    public void removeOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener)
    public void dispatchMenuVisibilityChanged(boolean)
    androidx.appcompat.widget.DecorToolbar mDecorToolbar
    boolean mToolbarMenuPrepared
    android.view.Window$Callback mWindowCallback
    private boolean mMenuCallbackSet
    private boolean mLastMenuVisibility
    private java.util.ArrayList mMenuVisibilityListeners
    private final java.lang.Runnable mMenuInvalidator
    private final androidx.appcompat.widget.Toolbar$OnMenuItemClickListener mMenuClicker
com.google.android.material.tabs.TabLayout$SlidingTabIndicator$2
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi23$1
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult
kotlin.time.AbstractLongClock$LongClockMark
kotlin.reflect.KParameter$Kind
androidx.fragment.app.Fragment$SavedState
androidx.appcompat.app.ToolbarActionBar$ActionMenuPresenterCallback
kotlinx.coroutines.scheduling.TaskMode
androidx.transition.Styleable$Slide
kotlin.text.RegexKt$fromInt$$inlined$apply$lambda$1
androidx.core.app.NotificationCompat$InboxStyle
androidx.transition.Slide$3
kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$toChannel$1
androidx.recyclerview.widget.DiffUtil$DiffResult
androidx.viewpager2.widget.ViewPager2$PageAwareAccessibilityProvider$1
kotlin.DslMarker
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl
kotlinx.coroutines.BuildersKt__BuildersKt
kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl$invoke$1
androidx.navigation.ui.CollapsingToolbarOnDestinationChangedListener
androidx.core.util.Preconditions:
    public static void checkArgument(boolean)
    public static void checkState(boolean,java.lang.String)
    public static void checkState(boolean)
    public static int checkArgumentNonnegative(int,java.lang.String)
    public static int checkArgumentInRange(int,int,int,java.lang.String)
    private void <init>()
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combine$1
kotlinx.coroutines.internal.ThreadContextKt$restoreState$1
kotlinx.coroutines.DispatchedCoroutine
android.support.v4.media.RatingCompat:
    public static android.support.v4.media.RatingCompat newUnratedRating(int)
    public static android.support.v4.media.RatingCompat newHeartRating(boolean)
    public static android.support.v4.media.RatingCompat newThumbRating(boolean)
    public static android.support.v4.media.RatingCompat newStarRating(int,float)
    public static android.support.v4.media.RatingCompat newPercentageRating(float)
    public static android.support.v4.media.RatingCompat fromRating(java.lang.Object)
    public boolean isRated()
    public int getRatingStyle()
    public boolean hasHeart()
    public boolean isThumbUp()
    public float getStarRating()
    public float getPercentRating()
    public java.lang.Object getRating()
    private java.lang.Object mRatingObj
    private static final java.lang.String TAG
    public static final int RATING_NONE
    public static final int RATING_HEART
    public static final int RATING_THUMB_UP_DOWN
    public static final int RATING_3_STARS
    public static final int RATING_4_STARS
    public static final int RATING_5_STARS
    public static final int RATING_PERCENTAGE
    private static final float RATING_NOT_RATED
kotlin.coroutines.experimental.SequenceBuilderKt__SequenceBuilderKt$buildSequence$$inlined$Sequence$1
androidx.navigation.ktx.R$styleable
androidx.slidingpanelayout.R$color
androidx.core.widget.CompoundButtonCompat:
    private void <init>()
    public static android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton)
    private static final java.lang.String TAG
kotlin.internal.HidesMembers
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$minWith$1
androidx.lifecycle.service.R
androidx.core.text.TextUtilsCompat:
    public static java.lang.String htmlEncode(java.lang.String)
    private void <init>()
    private static final java.lang.String ARAB_SCRIPT_SUBTAG
    private static final java.lang.String HEBR_SCRIPT_SUBTAG
androidx.appcompat.resources.R$style
androidx.core.graphics.ImageDecoderKt$decodeBitmap$1
androidx.databinding.adapters.RadioGroupBindingAdapter$1
androidx.core.app.NotificationCompat$Action$WearableExtender
com.google.android.material.internal.NavigationMenuPresenter$1
androidx.core.view.ViewKt$doOnNextLayout$1
kotlinx.coroutines.CoroutineExceptionHandlerImplKt
androidx.databinding.adapters.DatePickerBindingAdapter
kotlinx.coroutines.sync.MutexImpl$LockWaiter
kotlinx.coroutines.flow.internal.FlowCoroutine
kotlin.collections.CollectionsKt___CollectionsJvmKt
kotlin.jvm.internal.ArrayIteratorsKt
kotlinx.coroutines.flow.FlowKt__DistinctKt$distinctUntilChangedBy$$inlined$unsafeFlow$3$1
androidx.databinding.adapters.ZoomControlsBindingAdapter
com.google.android.material.drawable.DrawableUtils:
    private void <init>()
    public static android.util.AttributeSet parseDrawableXml(android.content.Context,int,java.lang.CharSequence)
androidx.core.content.ContentValuesKt
kotlin.ExperimentalUnsignedTypes
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenByDescending$2
androidx.versionedparcelable.ParcelImpl:
    public void <init>(androidx.versionedparcelable.VersionedParcelable)
    public androidx.versionedparcelable.VersionedParcelable getVersionedParcel()
androidx.recyclerview.R$id
kotlinx.coroutines.JobNode
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3$lambda$2
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$5$1
kotlin.contracts.SimpleEffect
androidx.appcompat.app.AppCompatDialog:
    public void <init>(android.content.Context)
    protected void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener)
    public androidx.appcompat.app.ActionBar getSupportActionBar()
kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache
androidx.constraintlayout.solver.LinearSystem:
    private void addSingleError(androidx.constraintlayout.solver.ArrayRow,int)
    private androidx.constraintlayout.solver.SolverVariable createVariable(java.lang.String,androidx.constraintlayout.solver.SolverVariable$Type)
    private void displayRows()
    private void displaySolverVariables()
    private java.lang.String getDisplaySize(int)
    private java.lang.String getDisplayStrength(int)
    public static androidx.constraintlayout.solver.ArrayRow createRowEquals(androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,boolean)
    public static androidx.constraintlayout.solver.ArrayRow createRowGreaterThan(androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,boolean)
    public static androidx.constraintlayout.solver.ArrayRow createRowLowerThan(androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,boolean)
    public static androidx.constraintlayout.solver.ArrayRow createRowCentering(androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,float,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,boolean)
    public void fillMetrics(androidx.constraintlayout.solver.Metrics)
    androidx.constraintlayout.solver.LinearSystem$Row getGoal()
    androidx.constraintlayout.solver.ArrayRow getRow(int)
    float getValueFor(java.lang.String)
    androidx.constraintlayout.solver.SolverVariable getVariable(java.lang.String,androidx.constraintlayout.solver.SolverVariable$Type)
    void displayReadableRows()
    public void displayVariablesReadableRows()
    public int getMemoryUsed()
    public int getNumEquations()
    public int getNumVariables()
    void displaySystemInformations()
    public void addGreaterThan(androidx.constraintlayout.solver.SolverVariable,int)
    public void addEquality(androidx.constraintlayout.solver.SolverVariable,int,int)
    public static final boolean FULL_DEBUG
    private static final boolean DEBUG
kotlin.jvm.functions.Function6
com.google.android.material.snackbar.SnackbarManager$Callback:
    public abstract void show()
kotlinx.coroutines.TimeSource
androidx.navigation.NoOpNavigator
kotlinx.coroutines.flow.FlowKt__DistinctKt
androidx.core.view.animation.PathInterpolatorApi14
androidx.navigation.common.R$style
kotlin.jvm.JvmPackageName
org.jetbrains.annotations.PropertyKey
androidx.fragment.app.FragmentActivity:
    public void <init>(int)
    private int allocateRequestIndex(androidx.fragment.app.Fragment)
    public void supportFinishAfterTransition()
    public void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback)
    public void setExitSharedElementCallback(androidx.core.app.SharedElementCallback)
    public void supportPostponeEnterTransition()
    public void supportStartPostponedEnterTransition()
    public androidx.loader.app.LoaderManager getSupportLoaderManager()
    public final void validateRequestPermissionsRequestCode(int)
    public void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int)
    public void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)
    public void startIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
    void requestPermissionsFromFragment(androidx.fragment.app.Fragment,java.lang.String[],int)
    boolean mRequestedPermissionsFromFragment
    private static final java.lang.String TAG
    static final java.lang.String FRAGMENTS_TAG
    static final java.lang.String NEXT_CANDIDATE_REQUEST_INDEX_TAG
    static final java.lang.String ALLOCATED_REQUEST_INDICIES_TAG
    static final java.lang.String REQUEST_FRAGMENT_WHO_TAG
    static final int MAX_NUM_PENDING_FRAGMENT_ACTIVITY_RESULTS
kotlinx.coroutines.DisposableHandle
kotlinx.coroutines.flow.FlowKt__DistinctKt$distinctUntilChangedBy$$inlined$unsafeFlow$2
androidx.annotation.FractionRes
androidx.navigation.ui.AppBarConfiguration:
    public androidx.navigation.ui.AppBarConfiguration$OnNavigateUpListener getFallbackOnNavigateUpListener()
org.intellij.lang.annotations.JdkConstants$ListSelectionMode
androidx.appcompat.widget.LinearLayoutCompat$DividerMode
androidx.databinding.ObservableByte
kotlinx.coroutines.FlowPreview
androidx.localbroadcastmanager.content.LocalBroadcastManager$1
kotlin.ArrayIntrinsicsKt
androidx.core.app.NotificationManagerCompat$SideChannelManager
androidx.core.graphics.PictureKt
kotlinx.coroutines.BlockingEventLoop
androidx.media.VolumeProviderCompatApi21$Delegate
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState:
    public void clearMenuPresenters()
    android.os.Parcelable onSaveInstanceState()
    void onRestoreInstanceState(android.os.Parcelable)
    void applyFrozenState()
    boolean wasLastOpen
    android.os.Bundle frozenMenuState
androidx.core.app.DialogCompat
androidx.navigation.fragment.FragmentNavigatorDestinationBuilderKt
androidx.core.view.MenuItemCompat$1
androidx.media.R$color
kotlinx.coroutines.flow.FlowKt__DistinctKt$distinctUntilChangedBy$$inlined$unsafeFlow$2$lambda$1
kotlinx.coroutines.internal.ArrayQueue
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$4
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$firstOrNull$3
kotlin.sequences.TakeWhileSequence$iterator$1
kotlin.jvm.internal.CollectionToArray
kotlin.internal.PureReifiable
com.google.android.material.shadow.ShadowViewDelegate:
    public abstract float getRadius()
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combine$1$1
androidx.media.R$id
kotlin.reflect.KProperty0$Getter
androidx.databinding.ObservableFloat
kotlin.text.StringsKt__StringsJVMKt:
    private static final int nativeIndexOf(java.lang.String,char,int)
    private static final int nativeIndexOf(java.lang.String,java.lang.String,int)
    private static final int nativeLastIndexOf(java.lang.String,char,int)
    private static final int nativeLastIndexOf(java.lang.String,java.lang.String,int)
    public static final boolean equals(java.lang.String,java.lang.String,boolean)
    public static synthetic boolean equals$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object)
    public static final java.lang.String replace(java.lang.String,char,char,boolean)
    public static synthetic java.lang.String replace$default(java.lang.String,char,char,boolean,int,java.lang.Object)
    public static final java.lang.String replace(java.lang.String,java.lang.String,java.lang.String,boolean)
    public static synthetic java.lang.String replace$default(java.lang.String,java.lang.String,java.lang.String,boolean,int,java.lang.Object)
    public static final java.lang.String replaceFirst(java.lang.String,char,char,boolean)
    public static synthetic java.lang.String replaceFirst$default(java.lang.String,char,char,boolean,int,java.lang.Object)
    public static final java.lang.String replaceFirst(java.lang.String,java.lang.String,java.lang.String,boolean)
    public static synthetic java.lang.String replaceFirst$default(java.lang.String,java.lang.String,java.lang.String,boolean,int,java.lang.Object)
    private static final java.lang.String toUpperCase(java.lang.String)
    private static final java.lang.String toLowerCase(java.lang.String)
    public static final java.lang.String concatToString(char[])
    public static final java.lang.String concatToString(char[],int,int)
    public static synthetic java.lang.String concatToString$default(char[],int,int,int,java.lang.Object)
    public static final char[] toCharArray(java.lang.String,int,int)
    public static synthetic char[] toCharArray$default(java.lang.String,int,int,int,java.lang.Object)
    public static final java.lang.String decodeToString(byte[])
    public static final java.lang.String decodeToString(byte[],int,int,boolean)
    public static synthetic java.lang.String decodeToString$default(byte[],int,int,boolean,int,java.lang.Object)
    public static final byte[] encodeToByteArray(java.lang.String)
    public static final byte[] encodeToByteArray(java.lang.String,int,int,boolean)
    public static synthetic byte[] encodeToByteArray$default(java.lang.String,int,int,boolean,int,java.lang.Object)
    private static final char[] toCharArray(java.lang.String)
    private static final char[] toCharArray(java.lang.String,char[],int,int,int)
    static synthetic char[] toCharArray$default(java.lang.String,char[],int,int,int,int,java.lang.Object)
    private static final varargs java.lang.String format(java.lang.String,java.lang.Object[])
    private static final varargs java.lang.String format(kotlin.jvm.internal.StringCompanionObject,java.lang.String,java.lang.Object[])
    private static final varargs java.lang.String format(java.lang.String,java.util.Locale,java.lang.Object[])
    private static final varargs java.lang.String format(kotlin.jvm.internal.StringCompanionObject,java.util.Locale,java.lang.String,java.lang.Object[])
    public static final java.util.List split(java.lang.CharSequence,java.util.regex.Pattern,int)
    public static synthetic java.util.List split$default(java.lang.CharSequence,java.util.regex.Pattern,int,int,java.lang.Object)
    private static final java.lang.String substring(java.lang.String,int)
    private static final java.lang.String substring(java.lang.String,int,int)
    public static final boolean startsWith(java.lang.String,java.lang.String,boolean)
    public static synthetic boolean startsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object)
    public static final boolean startsWith(java.lang.String,java.lang.String,int,boolean)
    public static synthetic boolean startsWith$default(java.lang.String,java.lang.String,int,boolean,int,java.lang.Object)
    public static final boolean endsWith(java.lang.String,java.lang.String,boolean)
    public static synthetic boolean endsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object)
    private static final java.lang.String String(byte[],int,int,java.nio.charset.Charset)
    private static final java.lang.String String(byte[],java.nio.charset.Charset)
    private static final java.lang.String String(byte[],int,int)
    private static final java.lang.String String(byte[])
    private static final java.lang.String String(char[])
    private static final java.lang.String String(char[],int,int)
    private static final java.lang.String String(int[],int,int)
    private static final java.lang.String String(java.lang.StringBuffer)
    private static final java.lang.String String(java.lang.StringBuilder)
    private static final int codePointAt(java.lang.String,int)
    private static final int codePointBefore(java.lang.String,int)
    private static final int codePointCount(java.lang.String,int,int)
    public static final int compareTo(java.lang.String,java.lang.String,boolean)
    public static synthetic int compareTo$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object)
    private static final boolean contentEquals(java.lang.String,java.lang.CharSequence)
    private static final boolean contentEquals(java.lang.String,java.lang.StringBuffer)
    private static final java.lang.String intern(java.lang.String)
    public static final boolean isBlank(java.lang.CharSequence)
    private static final int offsetByCodePoints(java.lang.String,int,int)
    public static final boolean regionMatches(java.lang.CharSequence,int,java.lang.CharSequence,int,int,boolean)
    public static synthetic boolean regionMatches$default(java.lang.CharSequence,int,java.lang.CharSequence,int,int,boolean,int,java.lang.Object)
    public static final boolean regionMatches(java.lang.String,int,java.lang.String,int,int,boolean)
    public static synthetic boolean regionMatches$default(java.lang.String,int,java.lang.String,int,int,boolean,int,java.lang.Object)
    private static final java.lang.String toLowerCase(java.lang.String,java.util.Locale)
    private static final java.lang.String toUpperCase(java.lang.String,java.util.Locale)
    private static final byte[] toByteArray(java.lang.String,java.nio.charset.Charset)
    static synthetic byte[] toByteArray$default(java.lang.String,java.nio.charset.Charset,int,java.lang.Object)
    private static final java.util.regex.Pattern toPattern(java.lang.String,int)
    static synthetic java.util.regex.Pattern toPattern$default(java.lang.String,int,int,java.lang.Object)
    public static final java.lang.String capitalize(java.lang.String)
    public static final java.lang.String capitalize(java.lang.String,java.util.Locale)
    public static final java.lang.String decapitalize(java.lang.String)
    public static final java.lang.String decapitalize(java.lang.String,java.util.Locale)
    public static final java.lang.String repeat(java.lang.CharSequence,int)
    public static final java.util.Comparator getCASE_INSENSITIVE_ORDER(kotlin.jvm.internal.StringCompanionObject)
    public void <init>()
kotlinx.coroutines.internal.ThreadSafeHeapKt
androidx.appcompat.widget.Toolbar:
    private static boolean isCustomView(android.view.View)
    public void setTitleMargin(int,int,int,int)
    public boolean isTitleTruncated()
    public void setContentInsetsAbsolute(int,int)
    public void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback)
    private static final java.lang.String TAG
com.google.android.material.shadow.ShadowRenderer:
    private static final int COLOR_ALPHA_START
    private static final int COLOR_ALPHA_MIDDLE
    private static final int COLOR_ALPHA_END
androidx.databinding.adapters.AbsListViewBindingAdapter$OnScrollStateChanged
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$mapIndexedNotNullTo$3
androidx.asynclayoutinflater.view.AsyncLayoutInflater$InflateThread
com.google.android.material.internal.TextScale
androidx.legacy.content.WakefulBroadcastReceiver
kotlin.jvm.internal.ShortCompanionObject
androidx.core.content.pm.PackageInfoCompat
kotlinx.coroutines.DispatcherExecutor
androidx.fragment.app.FragmentManagerViewModel:
    void restoreFromSnapshot(androidx.fragment.app.FragmentManagerNonConfig)
    androidx.fragment.app.FragmentManagerNonConfig getSnapshot()
    private static final java.lang.String TAG
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$2
androidx.core.graphics.RectKt
androidx.core.app.ActivityManagerCompat
kotlinx.coroutines.flow.FlowKt__ContextKt$flowWith$$inlined$unsafeFlow$1
androidx.swiperefreshlayout.widget.CircularProgressDrawable$ProgressDrawableSize
androidx.appcompat.app.ActionBarDrawerToggle$DelegateProvider
androidx.databinding.adapters.CalendarViewBindingAdapter
kotlin.coroutines.experimental.CoroutineContext$Element
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$singleOrNull$1
kotlin.collections.GroupingKt__GroupingJVMKt
androidx.navigation.ui.ktx.R$attr
com.google.android.material.expandable.ExpandableWidget:
    public abstract boolean setExpanded(boolean)
androidx.appcompat.widget.AppCompatHintHelper:
    private void <init>()
androidx.fragment.app.FragmentViewModelLazyKt$activityViewModels$1
com.google.android.material.datepicker.DateStrings:
    private void <init>()
    static java.lang.String getYearMonthDay(long)
    static java.lang.String getYearMonthDay(long,java.util.Locale)
    static java.lang.String getMonthDay(long)
    static java.lang.String getMonthDay(long,java.util.Locale)
    static java.lang.String getDateString(long)
    static java.lang.String getDateString(long,java.text.SimpleDateFormat)
    static androidx.core.util.Pair getDateRangeString(java.lang.Long,java.lang.Long)
    static androidx.core.util.Pair getDateRangeString(java.lang.Long,java.lang.Long,java.text.SimpleDateFormat)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$sumByDouble$1
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$4
androidx.databinding.ObservableChar$1
androidx.transition.AnimatorUtils:
    private void <init>()
kotlin.coroutines.experimental.CombinedContext$toString$1
kotlin.coroutines.experimental.SafeContinuation
androidx.constraintlayout.widget.R$styleable:
    private void <init>()
androidx.recyclerview.widget.RecyclerView$LayoutManager:
    public static int getChildMeasureSpec(int,int,int,boolean)
    public void assertInLayoutOrScroll(java.lang.String)
    public void setAutoMeasureEnabled(boolean)
    public final void setItemPrefetchEnabled(boolean)
    public void postOnAnimation(java.lang.Runnable)
    public void endAnimation(android.view.View)
    public void removeAllViews()
    public int getItemViewType(android.view.View)
    public void detachView(android.view.View)
    public void attachView(android.view.View)
    public void removeDetachedView(android.view.View)
    public void detachAndScrapView(android.view.View,androidx.recyclerview.widget.RecyclerView$Recycler)
    public void detachAndScrapViewAt(int,androidx.recyclerview.widget.RecyclerView$Recycler)
    public int getPaddingStart()
    public int getPaddingEnd()
    public boolean isFocused()
    public boolean hasFocus()
    public void ignoreView(android.view.View)
    public void stopIgnoringView(android.view.View)
    public void measureChild(android.view.View,int,int)
    public boolean isMeasurementCacheEnabled()
    public void setMeasurementCacheEnabled(boolean)
    public void layoutDecorated(android.view.View,int,int,int,int)
kotlinx.coroutines.flow.FlowKt__DistinctKt$distinctUntilChanged$$inlined$distinctUntilChangedBy$FlowKt__DistinctKt$1$2$1
kotlinx.coroutines.internal.SynchronizedKt
com.google.android.material.shape.RelativeCornerSize:
    public float getRelativePercent()
androidx.recyclerview.R
kotlinx.coroutines.flow.FlowKt__MergeKt$unsafeTransform$$inlined$unsafeFlow$1$lambda$1$1
kotlinx.coroutines.flow.internal.CombineKt$combineTransformInternal$2$invokeSuspend$$inlined$select$lambda$4
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$indexOfLast$1
org.intellij.lang.annotations.Identifier
androidx.navigation.ktx.R$style
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation
androidx.databinding.adapters.SeekBarBindingAdapter$OnStartTrackingTouch
kotlin.ranges.ULongProgression
androidx.customview.R$id
kotlinx.coroutines.flow.FlowKt__MigrationKt$combine$$inlined$combine$3$2
androidx.appcompat.widget.SwitchCompat$1
androidx.core.view.ViewCompat$FocusRelativeDirection
kotlin.reflect.KProperty$DefaultImpls
kotlinx.coroutines.Unconfined
kotlin.collections.RingBuffer$iterator$1
kotlin.collections.ArraysKt___ArraysKt$withIndex$1
kotlin.jvm.functions.Function13
androidx.media.R
kotlin.jvm.internal.CharCompanionObject
androidx.navigation.ui.R$anim
kotlin.text.DelimitedRangesSequence
kotlinx.coroutines.ChildHandleNode
androidx.lifecycle.CloseableCoroutineScope
com.google.android.material.datepicker.CalendarConstraints$Builder:
    public void <init>()
    public com.google.android.material.datepicker.CalendarConstraints$Builder setStart(long)
    public com.google.android.material.datepicker.CalendarConstraints$Builder setEnd(long)
    public com.google.android.material.datepicker.CalendarConstraints$Builder setValidator(com.google.android.material.datepicker.CalendarConstraints$DateValidator)
    private static final java.lang.String DEEP_COPY_VALIDATOR_KEY
kotlinx.coroutines.flow.FlowKt__CountKt$count$3
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$7
kotlin.sequences.SequencesKt___SequencesKt$distinct$1
kotlin.text.CharsKt__CharJVMKt:
    private static final boolean isDefined(char)
    private static final boolean isLetter(char)
    private static final boolean isLetterOrDigit(char)
    private static final boolean isDigit(char)
    private static final boolean isIdentifierIgnorable(char)
    private static final boolean isISOControl(char)
    private static final boolean isJavaIdentifierPart(char)
    private static final boolean isJavaIdentifierStart(char)
    public static final boolean isWhitespace(char)
    private static final boolean isUpperCase(char)
    private static final boolean isLowerCase(char)
    private static final char toUpperCase(char)
    private static final char toLowerCase(char)
    private static final boolean isTitleCase(char)
    private static final char toTitleCase(char)
    public static final kotlin.text.CharCategory getCategory(char)
    public static final kotlin.text.CharDirectionality getDirectionality(char)
    private static final boolean isHighSurrogate(char)
    private static final boolean isLowSurrogate(char)
    public static final int digitOf(char,int)
    public static final int checkRadix(int)
    public void <init>()
kotlinx.coroutines.CancellableContinuation
kotlin.coroutines.ContinuationInterceptor:
    public abstract kotlin.coroutines.Continuation interceptContinuation(kotlin.coroutines.Continuation)
    public abstract void releaseInterceptedContinuation(kotlin.coroutines.Continuation)
    public abstract kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
    public abstract kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
kotlinx.coroutines.scheduling.LimitingDispatcher
com.google.android.material.appbar.AppBarLayout:
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    public void addOnOffsetChangedListener(com.google.android.material.appbar.AppBarLayout$BaseOnOffsetChangedListener)
    public void addOnOffsetChangedListener(com.google.android.material.appbar.AppBarLayout$OnOffsetChangedListener)
    public void removeOnOffsetChangedListener(com.google.android.material.appbar.AppBarLayout$BaseOnOffsetChangedListener)
    public void removeOnOffsetChangedListener(com.google.android.material.appbar.AppBarLayout$OnOffsetChangedListener)
    public boolean setLiftable(boolean)
    public boolean setLifted(boolean)
    androidx.core.view.WindowInsetsCompat onWindowInsetChanged(androidx.core.view.WindowInsetsCompat)
    static final int PENDING_ACTION_NONE
    static final int PENDING_ACTION_EXPANDED
    static final int PENDING_ACTION_COLLAPSED
    static final int PENDING_ACTION_ANIMATE_ENABLED
    static final int PENDING_ACTION_FORCE
    private static final int INVALID_SCROLL_RANGE
kotlin.jvm.Throws
androidx.appcompat.widget.PopupMenu$3
kotlin.jvm.internal.PropertyReference:
    public void <init>(java.lang.Object)
    protected kotlin.reflect.KProperty getReflected()
    public boolean isLateinit()
    public boolean isConst()
    protected synthetic bridge kotlin.reflect.KCallable getReflected()
androidx.versionedparcelable.VersionedParcel$1
kotlinx.coroutines.channels.Channel
kotlin.io.FilesKt__UtilsKt$copyRecursively$1
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransform$1$2
kotlin.jvm.internal.DoubleSpreadBuilder
androidx.navigation.R$color
androidx.core.app.ActivityOptionsCompat$ActivityOptionsCompatImpl
kotlin.math.Constants
org.intellij.lang.annotations.Language
com.google.android.material.internal.NavigationMenuPresenter$HeaderViewHolder
androidx.transition.ChangeTransform$Transforms
kotlin.jvm.internal.ArrayDoubleIterator
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher:
    public void registerFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks,boolean)
    public void unregisterFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks)
kotlinx.coroutines.CoroutineId$Key
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1$lambda$1
kotlin.ranges.RangesKt:
    private void <init>()
androidx.versionedparcelable.NonParcelField
androidx.core.view.GravityCompat:
    public static void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int)
    public static void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int)
    private void <init>()
    public static final int RELATIVE_LAYOUT_DIRECTION
    public static final int START
    public static final int END
    public static final int RELATIVE_HORIZONTAL_GRAVITY_MASK
androidx.collection.LruCacheKt$lruCache$4
androidx.navigation.ui.R$animator
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState:
    final void clearMutated()
    public final int getEnterFadeDuration()
    public final int getExitFadeDuration()
    public final boolean isStateful()
kotlinx.coroutines.flow.FlowKt__ZipKt
androidx.recyclerview.widget.ScrollbarHelper:
    private void <init>()
kotlinx.coroutines.channels.BroadcastCoroutine
androidx.legacy.coreutils.R$style
kotlinx.coroutines.DelayKt
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$associateBy$2
kotlin.reflect.KMutableProperty$Setter
kotlinx.coroutines.flow.FlowKt__TransformKt$unsafeTransform$$inlined$unsafeFlow$5$lambda$1$1
kotlin.sequences.SequencesKt___SequencesKt$zip$1
androidx.annotation.InspectableProperty$ValueType
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3
android.support.v4.media.MediaMetadataCompat$RatingKey
kotlinx.coroutines.flow.FlowKt__CountKt$count$$inlined$collect$2$1
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$4$1
androidx.core.ktx.R$color
androidx.lifecycle.ServiceLifecycleDispatcher
kotlin.coroutines.experimental.CoroutineContext$Element$DefaultImpls
androidx.swiperefreshlayout.R$dimen
com.google.android.material.badge.BadgeUtils
kotlin.properties.ReadOnlyProperty
androidx.transition.ChangeImageTransform$2
kotlinx.coroutines.flow.FlowKt__TransformKt$unsafeTransform$$inlined$unsafeFlow$6$1
androidx.databinding.adapters.AdapterViewBindingAdapter$OnItemSelected
androidx.transition.ChangeTransform
android.support.v4.media.MediaBrowserCompat$ConnectionCallback
androidx.databinding.adapters.DatePickerBindingAdapter$1
androidx.recyclerview.widget.ItemTouchHelper$ItemTouchHelperGestureListener
kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$$inlined$unsafeFlow$1
androidx.databinding.adapters.ActionMenuViewBindingAdapter
androidx.core.app.NotificationManagerCompat$NotifyTask
androidx.databinding.library.R$drawable
kotlin.jvm.internal.Ref$BooleanRef
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi26
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior:
    public static void setTag(android.view.View,java.lang.Object)
    public static java.lang.Object getTag(android.view.View)
androidx.constraintlayout.widget.Guideline:
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    public void <init>(android.content.Context,android.util.AttributeSet,int,int)
kotlin.sequences.SequencesKt__SequencesKt$flatten$1
androidx.core.view.NestedScrollingParent:
    public abstract int getNestedScrollAxes()
androidx.fragment.app.ListFragment:
    public void setSelection(int)
    public int getSelectedItemPosition()
    public long getSelectedItemId()
    public android.widget.ListView getListView()
    public void setEmptyText(java.lang.CharSequence)
    public void setListShown(boolean)
    public void setListShownNoAnimation(boolean)
    public android.widget.ListAdapter getListAdapter()
    public final android.widget.ListAdapter requireListAdapter()
    static final int INTERNAL_EMPTY_ID
    static final int INTERNAL_PROGRESS_CONTAINER_ID
    static final int INTERNAL_LIST_CONTAINER_ID
androidx.coordinatorlayout.R$style:
    private void <init>()
com.google.android.material.chip.ChipGroup$LayoutParams:
    public void <init>(android.view.ViewGroup$MarginLayoutParams)
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$1
kotlin.io.FileAlreadyExistsException
androidx.core.provider.FontsContractCompat$4$1
kotlinx.coroutines.flow.internal.FlowExceptions_commonKt
kotlin.io.NoSuchFileException
androidx.viewpager.R$dimen
kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2
androidx.appcompat.widget.MenuPopupWindow:
    private static final java.lang.String TAG
org.intellij.lang.annotations.JdkConstants$TitledBorderJustification
androidx.loader.content.ModernAsyncTask
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener
kotlin.jvm.JvmOverloads
androidx.swiperefreshlayout.widget.CircleImageView
kotlinx.coroutines.flow.FlowKt__DelayKt$debounce$2$values$1$invokeSuspend$$inlined$collect$1$1
kotlinx.coroutines.ChildJob$DefaultImpls
kotlin.ranges.UIntRange
androidx.navigation.R$attr
androidx.viewpager2.widget.ViewPager2$DataSetChangeObserver
androidx.swiperefreshlayout.R$attr
kotlin.ranges.ClosedRange$DefaultImpls
android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl
androidx.transition.R$integer
com.google.android.material.snackbar.BaseTransientBottomBar$17
androidx.navigation.NavArgsLazy
kotlinx.coroutines.ObsoleteCoroutinesApi
kotlin.contracts.ExperimentalContracts
androidx.navigation.ui.R$attr
kotlin.StandardKt__StandardKt
androidx.fragment.R$integer
kotlin.math.MathKt__MathHKt
androidx.appcompat.view.menu.MenuPopup:
    public androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
    public int getId()
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$4
kotlin.time.TimedValue
androidx.legacy.coreui.R$style
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$1
androidx.transition.ObjectAnimatorUtils:
    private void <init>()
com.google.android.material.elevation.ElevationOverlayProvider:
    public int compositeOverlayWithThemeSurfaceColorIfNeeded(float,android.view.View)
    public int compositeOverlayWithThemeSurfaceColorIfNeeded(float)
    public int compositeOverlayIfNeeded(int,float,android.view.View)
    public int compositeOverlay(int,float,android.view.View)
    public int calculateOverlayAlpha(float)
    public int getThemeElevationOverlayColor()
    public int getThemeSurfaceColor()
    public float getParentAbsoluteElevation(android.view.View)
    private static final float FORMULA_MULTIPLIER
    private static final float FORMULA_OFFSET
kotlinx.coroutines.channels.ConflatedBroadcastChannel
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1
androidx.core.graphics.drawable.DrawableCompat:
    private void <init>()
    private static final java.lang.String TAG
kotlin.sequences.SequencesKt___SequencesKt$filterNotNull$1
kotlin.reflect.KMutableProperty
androidx.legacy.coreutils.R$styleable
kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1
androidx.viewpager.R$id
com.google.android.material.snackbar.BaseTransientBottomBar$Duration
kotlin.collections.ArraysKt___ArraysJvmKt$asList$8
com.google.android.material.appbar.AppBarLayout$1
com.google.android.material.floatingactionbutton.FloatingActionButton:
    public boolean shouldEnsureMinTouchTargetSize()
    public void show()
    public void removeOnShowAnimationListener(android.animation.Animator$AnimatorListener)
    public void hide()
    public void removeOnHideAnimationListener(android.animation.Animator$AnimatorListener)
    public boolean setExpanded(boolean)
    public void clearCustomSize()
    public void removeTransformationCallback(com.google.android.material.animation.TransformationCallback)
    private static final java.lang.String LOG_TAG
    private static final java.lang.String EXPANDABLE_WIDGET_HELPER_KEY
    public static final int SIZE_MINI
    public static final int SIZE_NORMAL
    public static final int SIZE_AUTO
    public static final int NO_CUSTOM_SIZE
    private static final int AUTO_MINI_LARGEST_SCREEN_WIDTH
androidx.databinding.library.baseAdapters.R$color
kotlinx.coroutines.flow.FlowKt__MigrationKt$combine$$inlined$unsafeFlow$1
kotlin.collections.UArraysKt
kotlin.jvm.internal.SpreadBuilder
androidx.constraintlayout.solver.widgets.Guideline:
    public int getRelativeBehaviour()
    public androidx.constraintlayout.solver.widgets.Rectangle getHead()
    public androidx.constraintlayout.solver.widgets.ConstraintAnchor getAnchor()
    public java.lang.String getType()
    public void setMinimumPosition(int)
    public void setPositionRelaxed(boolean)
    public void setGuidePercent(int)
    public float getRelativePercent()
    public int getRelativeBegin()
    public int getRelativeEnd()
    public void setDrawOrigin(int,int)
    void inferRelativePercentPosition()
    void inferRelativeBeginPosition()
    void inferRelativeEndPosition()
    public void cyclePosition()
    public static final int HORIZONTAL
    public static final int VERTICAL
    public static final int RELATIVE_PERCENT
    public static final int RELATIVE_BEGIN
    public static final int RELATIVE_END
    public static final int RELATIVE_UNKNWON
androidx.navigation.ui.ktx.R$anim
kotlin.UByte
kotlinx.coroutines.sync.MutexKt$withLock$1
androidx.media.AudioAttributesCompat$AttributeUsage
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1$1
androidx.recyclerview.widget.ItemTouchHelper$1
kotlin.annotation.Repeatable
androidx.viewpager.widget.ViewPager$MyAccessibilityDelegate
androidx.viewpager.R$attr
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$Command
com.google.android.material.tabs.TabLayout$Tab
com.google.android.material.navigation.NavigationView$SavedState$1
kotlin.collections.CollectionsKt__ReversedViewsKt
androidx.legacy.coreutils.R$layout
androidx.databinding.BindingBuildInfo
com.google.android.material.bottomnavigation.BottomNavigationPresenter
kotlinx.coroutines.android.HandlerDispatcherKt
kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$2
kotlinx.coroutines.channels.AbstractSendChannel$TryOfferDesc
kotlin.UByteKt
android.support.v4.media.MediaBrowserCompat$SubscriptionCallback$StubApi26
androidx.core.util.TimeUtils
kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$1
androidx.databinding.adapters.TabHostBindingAdapter$1
kotlinx.coroutines.test.TimedRunnableObsolete
com.google.android.material.R$dimen:
    private void <init>()
androidx.legacy.coreutils.R$string
kotlinx.coroutines.channels.BroadcastChannel
androidx.activity.R$layout
androidx.appcompat.widget.DecorContentParent:
    public abstract java.lang.CharSequence getTitle()
    public abstract void setUiOptions(int)
    public abstract boolean hasIcon()
    public abstract boolean hasLogo()
    public abstract void setIcon(int)
    public abstract void setIcon(android.graphics.drawable.Drawable)
    public abstract void setLogo(int)
    public abstract void saveToolbarHierarchyState(android.util.SparseArray)
    public abstract void restoreToolbarHierarchyState(android.util.SparseArray)
androidx.navigation.common.ktx.R$styleable
androidx.legacy.v4.R$attr
androidx.viewpager.R$style
androidx.core.widget.AutoScrollHelper:
    public boolean isEnabled()
    public androidx.core.widget.AutoScrollHelper setExclusive(boolean)
    public boolean isExclusive()
    public static final float RELATIVE_UNSPECIFIED
    public static final float NO_MAX
    public static final float NO_MIN
    public static final int EDGE_TYPE_INSIDE
    public static final int EDGE_TYPE_INSIDE_EXTEND
    public static final int EDGE_TYPE_OUTSIDE
    private static final int HORIZONTAL
    private static final int VERTICAL
    private static final int DEFAULT_EDGE_TYPE
    private static final int DEFAULT_MINIMUM_VELOCITY_DIPS
    private static final int DEFAULT_MAXIMUM_VELOCITY_DIPS
    private static final float DEFAULT_MAXIMUM_EDGE
    private static final float DEFAULT_RELATIVE_EDGE
    private static final float DEFAULT_RELATIVE_VELOCITY
    private static final int DEFAULT_RAMP_UP_DURATION
    private static final int DEFAULT_RAMP_DOWN_DURATION
android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy
kotlin.time.AbstractDoubleClock
androidx.media.MediaSessionManagerImplBase$RemoteUserInfoImplBase
androidx.databinding.adapters.ListenerUtil
androidx.media.MediaBrowserServiceCompat$Result
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$5$lambda$2
androidx.transition.FragmentTransitionSupport$1:
    public android.graphics.Rect onGetEpicenter(androidx.transition.Transition)
kotlin.io.FileTreeWalk$FileTreeWalkIterator
kotlinx.coroutines.channels.SendChannel$DefaultImpls
androidx.swiperefreshlayout.R$style
kotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsJvmKt
androidx.navigation.NavGraphViewModelLazyKt$navGraphViewModels$backStackEntry$1
kotlin.experimental.BitwiseOperationsKt
com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment:
    private static final int ARC_QUARTER
    private static final int ARC_HALF
    private static final int ANGLE_UP
    private static final int ANGLE_LEFT
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$toCollection$1
android.support.v4.media.session.ParcelableVolumeInfo:
    public void <init>(int,int,int,int,int)
androidx.core.ktx.R$integer
android.support.v4.media.MediaBrowserCompat
androidx.databinding.ObservableLong$1
androidx.navigation.ui.ktx.R$dimen
kotlinx.coroutines.flow.internal.NullSurrogateKt
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$1
kotlin.comparisons.ComparisonsKt__ComparisonsKt
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView:
    public void <init>(android.content.Context)
kotlinx.coroutines.TimeoutCoroutine
androidx.loader.content.ModernAsyncTask$1
androidx.core.widget.TextViewCompat$AutoSizeTextType
kotlin.PublishedApi
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1
androidx.annotation.NavigationRes
android.support.v4.media.session.MediaSessionCompat$Callback$StubApi24
androidx.navigation.NavDeepLink:
    boolean matches(android.net.Uri)
kotlinx.coroutines.scheduling.Task
androidx.databinding.adapters.TextViewBindingAdapter$OnTextChanged
com.google.android.material.badge.BadgeDrawable$SavedState$1
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState:
    public void <init>(android.os.Parcel)
    public void <init>(android.os.Parcelable,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat:
    static androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object)
    public void <init>(java.lang.Object)
    public static androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View,int)
    private java.util.List extrasCharSequenceList(java.lang.String)
    public java.lang.Object getInfo()
    public void setSource(android.view.View)
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat findFocus(int)
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat focusSearch(int)
    public int getWindowId()
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat getChild(int)
    public void addChild(android.view.View)
    public boolean removeChild(android.view.View)
    public boolean removeChild(android.view.View,int)
    public boolean removeAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)
    public boolean performAction(int)
    public void setMovementGranularities(int)
    public int getMovementGranularities()
    public java.util.List findAccessibilityNodeInfosByText(java.lang.String)
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat getParent()
    public boolean isVisibleToUser()
    public boolean isAccessibilityFocused()
    public void setSelected(boolean)
    public void setLongClickable(boolean)
    public void setPassword(boolean)
    public boolean isImportantForAccessibility()
    public void setImportantForAccessibility(boolean)
    public void setViewIdResourceName(java.lang.String)
    public int getLiveRegion()
    public void setLiveRegion(int)
    public int getDrawingOrder()
    public void setDrawingOrder(int)
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat getCollectionInfo()
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat getCollectionItemInfo()
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat getRangeInfo()
    public void setRangeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat)
    public boolean isContentInvalid()
    public boolean isContextClickable()
    public void setContextClickable(boolean)
    public java.lang.CharSequence getHintText()
    public java.lang.CharSequence getError()
    public void setLabelFor(android.view.View)
    public void setLabelFor(android.view.View,int)
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat getLabelFor()
    public void setLabeledBy(android.view.View)
    public void setLabeledBy(android.view.View,int)
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat getLabeledBy()
    public boolean canOpenPopup()
    public void setCanOpenPopup(boolean)
    public java.util.List findAccessibilityNodeInfosByViewId(java.lang.String)
    public int getInputType()
    public void setInputType(int)
    public void setMaxTextLength(int)
    public int getMaxTextLength()
    public void setTextSelection(int,int)
    public int getTextSelectionStart()
    public int getTextSelectionEnd()
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat getTraversalBefore()
    public void setTraversalBefore(android.view.View)
    public void setTraversalBefore(android.view.View,int)
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat getTraversalAfter()
    public void setTraversalAfter(android.view.View)
    public void setTraversalAfter(android.view.View,int)
    public androidx.core.view.accessibility.AccessibilityWindowInfoCompat getWindow()
    public boolean isDismissable()
    public boolean isEditable()
    public void setEditable(boolean)
    public boolean isMultiLine()
    public void setMultiLine(boolean)
    public java.lang.CharSequence getTooltipText()
    public void setTooltipText(java.lang.CharSequence)
    public java.lang.CharSequence getPaneTitle()
    public boolean isScreenReaderFocusable()
    public boolean isHeading()
    public boolean isTextEntryKey()
    public void setTextEntryKey(boolean)
    public boolean refresh()
    public java.lang.CharSequence getRoleDescription()
    public void setRoleDescription(java.lang.CharSequence)
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat getTouchDelegateInfo()
    public void setTouchDelegateInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat)
    private static final java.lang.String ROLE_DESCRIPTION_KEY
    private static final java.lang.String PANE_TITLE_KEY
    private static final java.lang.String TOOLTIP_TEXT_KEY
    private static final java.lang.String HINT_TEXT_KEY
    private static final java.lang.String BOOLEAN_PROPERTY_KEY
    private static final java.lang.String SPANS_ID_KEY
    private static final java.lang.String SPANS_START_KEY
    private static final java.lang.String SPANS_END_KEY
    private static final java.lang.String SPANS_FLAGS_KEY
    private static final java.lang.String SPANS_ACTION_ID_KEY
    private static final int BOOLEAN_PROPERTY_SCREEN_READER_FOCUSABLE
    private static final int BOOLEAN_PROPERTY_IS_HEADING
    private static final int BOOLEAN_PROPERTY_IS_SHOWING_HINT
    private static final int BOOLEAN_PROPERTY_IS_TEXT_ENTRY_KEY
    public static final int ACTION_FOCUS
    public static final int ACTION_CLEAR_FOCUS
    public static final int ACTION_SELECT
    public static final int ACTION_CLEAR_SELECTION
    public static final int ACTION_CLICK
    public static final int ACTION_LONG_CLICK
    public static final int ACTION_ACCESSIBILITY_FOCUS
    public static final int ACTION_CLEAR_ACCESSIBILITY_FOCUS
    public static final int ACTION_NEXT_AT_MOVEMENT_GRANULARITY
    public static final int ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
    public static final int ACTION_NEXT_HTML_ELEMENT
    public static final int ACTION_PREVIOUS_HTML_ELEMENT
    public static final int ACTION_SCROLL_FORWARD
    public static final int ACTION_SCROLL_BACKWARD
    public static final int ACTION_COPY
    public static final int ACTION_PASTE
    public static final int ACTION_CUT
    public static final int ACTION_SET_SELECTION
    public static final int ACTION_EXPAND
    public static final int ACTION_COLLAPSE
    public static final int ACTION_DISMISS
    public static final int ACTION_SET_TEXT
    public static final java.lang.String ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT
    public static final java.lang.String ACTION_ARGUMENT_HTML_ELEMENT_STRING
    public static final java.lang.String ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN
    public static final java.lang.String ACTION_ARGUMENT_SELECTION_START_INT
    public static final java.lang.String ACTION_ARGUMENT_SELECTION_END_INT
    public static final java.lang.String ACTION_ARGUMENT_SET_TEXT_CHARSEQUENCE
    public static final java.lang.String ACTION_ARGUMENT_ROW_INT
    public static final java.lang.String ACTION_ARGUMENT_COLUMN_INT
    public static final java.lang.String ACTION_ARGUMENT_PROGRESS_VALUE
    public static final java.lang.String ACTION_ARGUMENT_MOVE_WINDOW_X
    public static final java.lang.String ACTION_ARGUMENT_MOVE_WINDOW_Y
    public static final int FOCUS_INPUT
    public static final int FOCUS_ACCESSIBILITY
    public static final int MOVEMENT_GRANULARITY_CHARACTER
    public static final int MOVEMENT_GRANULARITY_WORD
    public static final int MOVEMENT_GRANULARITY_LINE
    public static final int MOVEMENT_GRANULARITY_PARAGRAPH
    public static final int MOVEMENT_GRANULARITY_PAGE
androidx.appcompat.view.menu.MenuView:
    public abstract int getWindowAnimations()
com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemSelectedListener
androidx.appcompat.widget.SuggestionsAdapter:
    public int getQueryRefinement()
    public void close()
    private static final boolean DBG
    private static final java.lang.String LOG_TAG
    private static final int QUERY_LIMIT
    static final int REFINE_NONE
    static final int REFINE_BY_ENTRY
    static final int REFINE_ALL
    static final int INVALID_INDEX
androidx.navigation.ktx.R$dimen
kotlin.text.DelimitedRangesSequence$iterator$1
kotlin.UseExperimental
kotlin.collections.BooleanIterator
kotlinx.coroutines.CompletionHandlerBase
androidx.navigation.common.ktx.R
kotlinx.coroutines.flow.FlowKt__ErrorsKt
kotlin.coroutines.jvm.internal.ModuleNameRetriever
com.google.android.material.tabs.TabLayoutMediator
androidx.viewpager2.adapter.FragmentStateAdapter$5:
    void <init>(androidx.viewpager2.adapter.FragmentStateAdapter,android.os.Handler,java.lang.Runnable)
    final synthetic androidx.viewpager2.adapter.FragmentStateAdapter this$0
androidx.transition.VisibilityPropagation
androidx.core.view.WindowInsetsCompat:
    public void <init>(androidx.core.view.WindowInsetsCompat)
    public boolean hasSystemWindowInsets()
    public boolean hasInsets()
    public boolean isRound()
    public androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
    public androidx.core.view.WindowInsetsCompat replaceSystemWindowInsets(android.graphics.Rect)
    public int getStableInsetTop()
    public int getStableInsetLeft()
    public int getStableInsetRight()
    public int getStableInsetBottom()
    public boolean hasStableInsets()
    public androidx.core.view.WindowInsetsCompat consumeStableInsets()
    public androidx.core.view.DisplayCutoutCompat getDisplayCutout()
    public androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
    public androidx.core.graphics.Insets getSystemWindowInsets()
    public androidx.core.graphics.Insets getStableInsets()
    public androidx.core.graphics.Insets getMandatorySystemGestureInsets()
    public androidx.core.graphics.Insets getTappableElementInsets()
    public androidx.core.graphics.Insets getSystemGestureInsets()
androidx.appcompat.widget.TooltipPopup:
    private static final java.lang.String TAG
androidx.fragment.app.FragmentStore:
    int getActiveFragmentCount()
    private static final java.lang.String TAG
androidx.appcompat.app.AppCompatActivity:
    public void <init>(int)
    public void setSupportActionBar(androidx.appcompat.widget.Toolbar)
    public boolean supportRequestWindowFeature(int)
    public androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback)
    public void setSupportProgressBarVisibility(boolean)
    public void setSupportProgressBarIndeterminateVisibility(boolean)
    public void setSupportProgressBarIndeterminate(boolean)
    public void setSupportProgress(int)
androidx.transition.ChangeClipBounds$1
androidx.recyclerview.widget.ViewInfoStore$InfoRecord:
    static final int FLAG_DISAPPEARED
    static final int FLAG_APPEAR
    static final int FLAG_PRE
    static final int FLAG_POST
    static final int FLAG_APPEAR_AND_DISAPPEAR
    static final int FLAG_PRE_AND_POST
    static final int FLAG_APPEAR_PRE_AND_POST
kotlinx.coroutines.internal.MainDispatcherFactory
android.support.v4.media.session.MediaControllerCompat
kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1
androidx.navigation.NavOptionsDsl
kotlin.sequences.TransformingSequence$iterator$1
com.czluciusdev.diceroller.DataBinderMapperImpl$InnerBrLookup
com.google.android.material.radiobutton.MaterialRadioButton:
    public void <init>(android.content.Context)
    public boolean isUseMaterialThemeColors()
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$mapIndexed$1
androidx.appcompat.widget.AppCompatRatingBar:
    public void <init>(android.content.Context)
androidx.legacy.coreutils.R$dimen
kotlin.time.DurationUnitKt$WhenMappings
androidx.appcompat.widget.AppCompatSpinner$DialogPopup:
    public int getHorizontalOriginalOffset()
androidx.navigation.ktx.R$string
androidx.print.PrintHelper$OnPrintFinishCallback
androidx.core.text.BidiFormatter:
    public static androidx.core.text.BidiFormatter getInstance(boolean)
    public static androidx.core.text.BidiFormatter getInstance(java.util.Locale)
    public boolean isRtlContext()
    public boolean isRtl(java.lang.String)
    public boolean isRtl(java.lang.CharSequence)
    public java.lang.String unicodeWrap(java.lang.String,androidx.core.text.TextDirectionHeuristicCompat,boolean)
    public java.lang.String unicodeWrap(java.lang.String,androidx.core.text.TextDirectionHeuristicCompat)
    public java.lang.CharSequence unicodeWrap(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat)
    public java.lang.String unicodeWrap(java.lang.String,boolean)
    public java.lang.CharSequence unicodeWrap(java.lang.CharSequence,boolean)
    public java.lang.String unicodeWrap(java.lang.String)
    private static final char LRE
    private static final char RLE
    private static final char PDF
    private static final char LRM
    private static final char RLM
    private static final java.lang.String EMPTY_STRING
    private static final int FLAG_STEREO_RESET
    private static final int DEFAULT_FLAGS
    private static final int DIR_LTR
    private static final int DIR_UNKNOWN
    private static final int DIR_RTL
androidx.core.view.inputmethod.InputConnectionCompat$1
kotlinx.coroutines.flow.FlowKt__MergeKt$flattenConcat$$inlined$unsafeFlow$1
androidx.loader.content.AsyncTaskLoader
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$$inlined$collect$1
androidx.viewpager2.widget.AnimateLayoutChangeDetector$1
androidx.recyclerview.widget.DiffUtil$Snake
kotlinx.coroutines.ThreadPoolDispatcher
kotlinx.coroutines.CompletionHandler_commonKt
android.support.v4.media.session.PlaybackStateCompatApi22:
    public static java.lang.Object newInstance(int,long,long,float,long,java.lang.CharSequence,long,java.util.List,long,android.os.Bundle)
    private void <init>()
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$1
androidx.constraintlayout.widget.ConstraintSet$Constraint:
    static synthetic void access$100(androidx.constraintlayout.widget.ConstraintSet$Constraint,int,androidx.constraintlayout.widget.ConstraintLayout$LayoutParams)
    static final int UNSET
androidx.recyclerview.R$drawable
androidx.fragment.app.FragmentTabHost$DummyTabFactory
androidx.navigation.NavHostKt
android.support.v4.media.MediaBrowserCompatApi21$ConnectionCallback
kotlin.collections.ArraysKt___ArraysKt$withIndex$9
androidx.recyclerview.R$color
androidx.fragment.R$id:
    private void <init>()
android.support.v4.media.session.MediaSessionCompatApi23$CallbackProxy
kotlinx.coroutines.flow.internal.CombineKt$asChannel$1$invokeSuspend$$inlined$collect$1
kotlin.coroutines.Continuation
androidx.activity.R$string
kotlin.system.TimingKt
androidx.recyclerview.widget.ItemTouchHelper
androidx.activity.ktx.R
androidx.viewpager2.widget.ViewPager2$PageTransformer
com.czluciusdev.diceroller.R$menu
com.google.android.material.tabs.TabLayout$1
android.support.v4.media.session.MediaSessionCompat$3
kotlinx.coroutines.CoroutineScope
androidx.appcompat.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo
kotlin.jvm.internal.ArrayCharIterator
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi18$1
kotlin.sequences.SequencesKt__SequencesKt$generateSequence$1
androidx.lifecycle.ComputableLiveData$1
androidx.drawerlayout.widget.DrawerLayout$1
kotlinx.coroutines.flow.SafeFlow
androidx.navigation.NavDeepLinkBuilder$PermissiveNavigatorProvider$1
kotlin.text.SystemProperties
kotlinx.coroutines.CompletableDeferred$DefaultImpls
androidx.core.app.NotificationCompat$Builder
com.google.android.material.transformation.FabTransformationScrimBehavior:
    public static final long EXPAND_DELAY
    public static final long EXPAND_DURATION
    public static final long COLLAPSE_DELAY
    public static final long COLLAPSE_DURATION
com.google.android.material.snackbar.BaseTransientBottomBar$5
kotlin.collections.AbstractList$ListIteratorImpl
kotlinx.coroutines.CommonPool$shutdown$2
kotlinx.coroutines.flow.FlowKt__MigrationKt$combine$$inlined$unsafeFlow$2$1
androidx.navigation.NavGraph:
    public final void addDestinations(java.util.Collection)
    public final varargs void addDestinations(androidx.navigation.NavDestination[])
    public final void addAll(androidx.navigation.NavGraph)
    public final void remove(androidx.navigation.NavDestination)
    public final void clear()
androidx.core.graphics.TypefaceCompatApi21Impl:
    private static final java.lang.String TAG
    private static final java.lang.String FONT_FAMILY_CLASS
    private static final java.lang.String ADD_FONT_WEIGHT_STYLE_METHOD
    private static final java.lang.String CREATE_FROM_FAMILIES_WITH_DEFAULT_METHOD
kotlinx.coroutines.JobImpl
kotlin.text.MatchResult$DefaultImpls
androidx.appcompat.widget.AppCompatDrawableManager:
    synchronized android.graphics.drawable.Drawable onDrawableLoadedFromResources(android.content.Context,androidx.appcompat.widget.VectorEnabledTintResources,int)
    boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)
    private static final java.lang.String TAG
    private static final boolean DEBUG
androidx.transition.TransitionUtils$MatrixEvaluator
androidx.recyclerview.widget.DividerItemDecoration
com.czluciusdev.diceroller.AboutFragment$onCreateView$1
androidx.swiperefreshlayout.widget.CircularProgressDrawable
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8$1
com.google.android.material.tabs.TabLayout$TabGravity
kotlin.properties.ReadWriteProperty
androidx.loader.content.ModernAsyncTask$Status
androidx.core.view.ViewCompat:
    public static boolean canScrollHorizontally(android.view.View,int)
    public static boolean canScrollVertically(android.view.View,int)
    public static int getOverScrollMode(android.view.View)
    public static void setOverScrollMode(android.view.View,int)
    public static void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
    public static void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
    public static varargs void setAutofillHints(android.view.View,java.lang.String[])
    public static boolean isImportantForAutofill(android.view.View)
    public static boolean hasAccessibilityDelegate(android.view.View)
    public static void postInvalidateOnAnimation(android.view.View,int,int,int,int)
    public static boolean isImportantForAccessibility(android.view.View)
    public static int addAccessibilityAction(android.view.View,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand)
    private static int getAvailableActionIdFromResources(android.view.View)
    public static void enableAccessibleClickableSpanSupport(android.view.View)
    public static androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)
    public static float getAlpha(android.view.View)
    public static void setLayerType(android.view.View,int,android.graphics.Paint)
    public static int getLayerType(android.view.View)
    public static int getLabelFor(android.view.View)
    public static void setLabelFor(android.view.View,int)
    public static void setLayerPaint(android.view.View,android.graphics.Paint)
    public static void setLayoutDirection(android.view.View,int)
    public static android.view.ViewParent getParentForAccessibility(android.view.View)
    public static android.view.View requireViewById(android.view.View,int)
    public static boolean isOpaque(android.view.View)
    public static int resolveSizeAndState(int,int,int)
    public static int getMeasuredWidthAndState(android.view.View)
    public static int getMeasuredHeightAndState(android.view.View)
    public static int getMeasuredState(android.view.View)
    public static int combineMeasuredStates(int,int)
    private static void bindTempDetach()
    public static void dispatchStartTemporaryDetach(android.view.View)
    public static void dispatchFinishTemporaryDetach(android.view.View)
    public static float getTranslationX(android.view.View)
    public static float getTranslationY(android.view.View)
    public static android.graphics.Matrix getMatrix(android.view.View)
    public static void setTranslationX(android.view.View,float)
    public static void setTranslationY(android.view.View,float)
    public static void setAlpha(android.view.View,float)
    public static void setX(android.view.View,float)
    public static void setY(android.view.View,float)
    public static void setRotation(android.view.View,float)
    public static void setRotationX(android.view.View,float)
    public static void setRotationY(android.view.View,float)
    public static void setScaleX(android.view.View,float)
    public static void setScaleY(android.view.View,float)
    public static float getPivotX(android.view.View)
    public static void setPivotX(android.view.View,float)
    public static float getPivotY(android.view.View)
    public static void setPivotY(android.view.View,float)
    public static float getRotation(android.view.View)
    public static float getRotationX(android.view.View)
    public static float getRotationY(android.view.View)
    public static float getScaleX(android.view.View)
    public static float getScaleY(android.view.View)
    public static float getX(android.view.View)
    public static float getY(android.view.View)
    public static void setTranslationZ(android.view.View,float)
    public static float getTranslationZ(android.view.View)
    public static void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean)
    public static void setFitsSystemWindows(android.view.View,boolean)
    public static void jumpDrawablesToCurrentState(android.view.View)
    public static androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)
    public static void setSystemGestureExclusionRects(android.view.View,java.util.List)
    public static java.util.List getSystemGestureExclusionRects(android.view.View)
    public static void setSaveFromParentEnabled(android.view.View,boolean)
    public static void setActivated(android.view.View,boolean)
    public static void setNestedScrollingEnabled(android.view.View,boolean)
    public static boolean startNestedScroll(android.view.View,int)
    public static boolean hasNestedScrollingParent(android.view.View)
    public static boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[])
    public static boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[])
    public static boolean startNestedScroll(android.view.View,int,int)
    public static void stopNestedScroll(android.view.View,int)
    public static boolean hasNestedScrollingParent(android.view.View,int)
    public static void dispatchNestedScroll(android.view.View,int,int,int,int,int[],int,int[])
    public static boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[],int)
    public static boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[],int)
    public static boolean dispatchNestedFling(android.view.View,float,float,boolean)
    public static boolean dispatchNestedPreFling(android.view.View,float,float)
    public static boolean isInLayout(android.view.View)
    public static boolean isLayoutDirectionResolved(android.view.View)
    public static void setZ(android.view.View,float)
    public static void setScrollIndicators(android.view.View,int)
    public static int getScrollIndicators(android.view.View)
    public static void setPointerIcon(android.view.View,androidx.core.view.PointerIconCompat)
    public static void setTooltipText(android.view.View,java.lang.CharSequence)
    public static boolean startDragAndDrop(android.view.View,android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)
    public static void cancelDragAndDrop(android.view.View)
    public static void updateDragShadow(android.view.View,android.view.View$DragShadowBuilder)
    public static int getNextClusterForwardId(android.view.View)
    public static void setNextClusterForwardId(android.view.View,int)
    public static boolean isKeyboardNavigationCluster(android.view.View)
    public static void setKeyboardNavigationCluster(android.view.View,boolean)
    public static boolean isFocusedByDefault(android.view.View)
    public static void setFocusedByDefault(android.view.View,boolean)
    public static android.view.View keyboardNavigationClusterSearch(android.view.View,android.view.View,int)
    public static void addKeyboardNavigationClusters(android.view.View,java.util.Collection,int)
    public static boolean restoreDefaultFocus(android.view.View)
    public static boolean hasExplicitFocusable(android.view.View)
    public static int generateViewId()
    public static void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
    public static void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
    protected void <init>()
    public static void setScreenReaderFocusable(android.view.View,boolean)
    public static void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence)
    private static final java.lang.String TAG
    public static final int OVER_SCROLL_ALWAYS
    public static final int OVER_SCROLL_IF_CONTENT_SCROLLS
    public static final int OVER_SCROLL_NEVER
    public static final int IMPORTANT_FOR_ACCESSIBILITY_AUTO
    public static final int IMPORTANT_FOR_ACCESSIBILITY_YES
    public static final int IMPORTANT_FOR_ACCESSIBILITY_NO
    public static final int IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS
    public static final int ACCESSIBILITY_LIVE_REGION_NONE
    public static final int ACCESSIBILITY_LIVE_REGION_POLITE
    public static final int ACCESSIBILITY_LIVE_REGION_ASSERTIVE
    public static final int LAYER_TYPE_NONE
    public static final int LAYER_TYPE_SOFTWARE
    public static final int LAYER_TYPE_HARDWARE
    public static final int LAYOUT_DIRECTION_LTR
    public static final int LAYOUT_DIRECTION_RTL
    public static final int LAYOUT_DIRECTION_INHERIT
    public static final int LAYOUT_DIRECTION_LOCALE
    public static final int MEASURED_SIZE_MASK
    public static final int MEASURED_STATE_MASK
    public static final int MEASURED_HEIGHT_STATE_SHIFT
    public static final int MEASURED_STATE_TOO_SMALL
    public static final int SCROLL_AXIS_NONE
    public static final int SCROLL_AXIS_HORIZONTAL
    public static final int SCROLL_AXIS_VERTICAL
    public static final int TYPE_TOUCH
    public static final int TYPE_NON_TOUCH
    public static final int SCROLL_INDICATOR_TOP
    public static final int SCROLL_INDICATOR_BOTTOM
    public static final int SCROLL_INDICATOR_LEFT
    public static final int SCROLL_INDICATOR_RIGHT
    public static final int SCROLL_INDICATOR_START
    public static final int SCROLL_INDICATOR_END
    private static java.lang.reflect.Method sDispatchStartTemporaryDetach
    private static java.lang.reflect.Method sDispatchFinishTemporaryDetach
    private static boolean sTempDetachBound
    private static java.lang.reflect.Method sChildrenDrawingOrderMethod
androidx.lifecycle.ViewModelLazy:
    public boolean isInitialized()
androidx.core.graphics.PorterDuffKt
androidx.vectordrawable.animated.R$string
androidx.core.os.CancellationSignal:
    public void throwIfCanceled()
    public java.lang.Object getCancellationSignalObject()
androidx.swiperefreshlayout.R$drawable
kotlinx.coroutines.NodeList
androidx.core.app.NotificationCompat$BadgeIconType
android.support.v4.media.MediaBrowserCompatApi21
androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem
kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1$lambda$1
kotlinx.coroutines.selects.SelectKt
androidx.recyclerview.widget.RecyclerView$SmoothScroller:
    public void instantScrollToPosition(int)
org.jetbrains.annotations.NotNull
kotlinx.coroutines.internal.ScopeCoroutine
androidx.appcompat.widget.Toolbar$LayoutParams:
    public void <init>(int,int,int)
    public void <init>(int)
    static final int CUSTOM
    static final int SYSTEM
    static final int EXPANDED
androidx.navigation.ActivityNavigator:
    public static void applyPopAnimationsToPendingTransition(android.app.Activity)
    final android.content.Context getContext()
    private static final java.lang.String EXTRA_NAV_SOURCE
    private static final java.lang.String EXTRA_NAV_CURRENT
    private static final java.lang.String EXTRA_POP_ENTER_ANIM
    private static final java.lang.String EXTRA_POP_EXIT_ANIM
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenByDescending$1
androidx.navigation.common.R$styleable:
    private void <init>()
androidx.transition.Fade:
    public void <init>()
    public void <init>(android.content.Context,android.util.AttributeSet)
    private static final java.lang.String PROPNAME_TRANSITION_ALPHA
    private static final java.lang.String LOG_TAG
    public static final int IN
    public static final int OUT
kotlinx.coroutines.scheduling.CoroutineScheduler$WhenMappings
androidx.viewpager2.R$layout
androidx.lifecycle.PausingDispatcher
androidx.recyclerview.widget.AsyncListDiffer
androidx.databinding.InverseMethod
android.support.v4.os.IResultReceiver$Stub:
    private static final java.lang.String DESCRIPTOR
    static final int TRANSACTION_send
kotlin.text.RegexOption
android.support.v4.app.INotificationSideChannel$Stub$Proxy
kotlinx.coroutines.internal.Removed
androidx.lifecycle.MediatorLiveData:
    public void removeSource(androidx.lifecycle.LiveData)
kotlin.ULongKt
kotlinx.coroutines.flow.FlowKt__DistinctKt$distinctUntilChanged$1
kotlin.jvm.internal.ArrayFloatIterator
kotlin.jvm.internal.Lambda:
    public int getArity()
android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy
kotlinx.coroutines.flow.FlowKt__TransformKt$scan$$inlined$unsafeFlow$1$lambda$1
androidx.databinding.adapters.ChronometerBindingAdapter
androidx.loader.R$string
androidx.appcompat.app.WindowDecorActionBar:
    public void <init>(android.view.View)
    private void ensureTabsExist()
    private void cleanupTabs()
    private void configureTab(androidx.appcompat.app.ActionBar$Tab,int)
    public float getElevation()
    public void addOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener)
    public void removeOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener)
    public void setCustomView(int)
    public void setDisplayUseLogoEnabled(boolean)
    public void setDisplayShowHomeEnabled(boolean)
    public void setDisplayShowTitleEnabled(boolean)
    public void setDisplayShowCustomEnabled(boolean)
    public void setTitle(int)
    public void setSubtitle(int)
    public void setSelectedNavigationItem(int)
    public void removeAllTabs()
    public boolean requestFocus()
    public void setSubtitle(java.lang.CharSequence)
    public void setDisplayOptions(int)
    public void setBackgroundDrawable(android.graphics.drawable.Drawable)
    public void setStackedBackgroundDrawable(android.graphics.drawable.Drawable)
    public void setSplitBackgroundDrawable(android.graphics.drawable.Drawable)
    public android.view.View getCustomView()
    public java.lang.CharSequence getTitle()
    public java.lang.CharSequence getSubtitle()
    public void addTab(androidx.appcompat.app.ActionBar$Tab)
    public void addTab(androidx.appcompat.app.ActionBar$Tab,int)
    public void addTab(androidx.appcompat.app.ActionBar$Tab,boolean)
    public void addTab(androidx.appcompat.app.ActionBar$Tab,int,boolean)
    public androidx.appcompat.app.ActionBar$Tab newTab()
    public void removeTab(androidx.appcompat.app.ActionBar$Tab)
    public void removeTabAt(int)
    public void selectTab(androidx.appcompat.app.ActionBar$Tab)
    public androidx.appcompat.app.ActionBar$Tab getSelectedTab()
    public int getHeight()
    public void show()
    public void hide()
    public boolean isHideOnContentScrollEnabled()
    public int getHideOffset()
    public void setHideOffset(int)
    public boolean isShowing()
    public boolean isTitleTruncated()
    public void setHomeAsUpIndicator(int)
    public void setHomeActionContentDescription(java.lang.CharSequence)
    public void setCustomView(android.view.View)
    public void setCustomView(android.view.View,androidx.appcompat.app.ActionBar$LayoutParams)
    public void setListNavigationCallbacks(android.widget.SpinnerAdapter,androidx.appcompat.app.ActionBar$OnNavigationListener)
    public int getSelectedNavigationIndex()
    public int getNavigationItemCount()
    public int getTabCount()
    public void setNavigationMode(int)
    public androidx.appcompat.app.ActionBar$Tab getTabAt(int)
    public void setIcon(int)
    public void setIcon(android.graphics.drawable.Drawable)
    public boolean hasIcon()
    public void setLogo(int)
    public void setLogo(android.graphics.drawable.Drawable)
    public boolean hasLogo()
    private androidx.appcompat.app.WindowDecorActionBar$TabImpl mSelectedTab
    private static final java.lang.String TAG
    private static final int INVALID_POSITION
    private static final long FADE_OUT_DURATION_MS
    private static final long FADE_IN_DURATION_MS
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$9
androidx.core.os.LocaleListCompat
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransform$3
kotlinx.coroutines.CompletionHandlerException
kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl$invoke$2
kotlinx.coroutines.EventLoop
com.google.android.material.ripple.RippleUtils:
    public static android.content.res.ColorStateList convertToRippleDrawableColor(android.content.res.ColorStateList)
    private static int getColorForState(android.content.res.ColorStateList,int[])
    private static int doubleAlpha(int)
    static final java.lang.String TRANSPARENT_DEFAULT_COLOR_WARNING
androidx.core.view.ViewCompat$UnhandledKeyEventManager:
    static void registerListeningView(android.view.View)
    static void unregisterListeningView(android.view.View)
androidx.transition.R$style
kotlin.contracts.ReturnsNotNull
androidx.core.provider.FontsContractCompat$4$9
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams:
    public void <init>(int,int,float)
    public void <init>(android.view.ViewGroup$MarginLayoutParams)
    public void <init>(androidx.appcompat.widget.LinearLayoutCompat$LayoutParams)
androidx.annotation.AnyRes
com.google.android.material.datepicker.MaterialStyledDatePickerDialog
androidx.appcompat.widget.AppCompatToggleButton:
    public void <init>(android.content.Context)
kotlinx.coroutines.channels.ConflatedBroadcastChannel$Subscriber
androidx.viewpager2.widget.ViewPager2$BasicAccessibilityProvider
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3
kotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsKt
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4
android.support.v4.app.INotificationSideChannel$Stub
androidx.core.app.JobIntentService$JobServiceEngineImpl
kotlin.jvm.internal.Ref$ByteRef
androidx.media.MediaBrowserServiceCompat$1
androidx.core.text.SpannedStringKt
androidx.vectordrawable.R$attr
androidx.core.app.BundleCompat:
    private void <init>()
    public static void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder)
kotlin.text.StringsKt__StringBuilderKt:
    private static final java.lang.String buildString(kotlin.jvm.functions.Function1)
    private static final java.lang.String buildString(int,kotlin.jvm.functions.Function1)
    public static final varargs java.lang.Appendable append(java.lang.Appendable,java.lang.CharSequence[])
    public static final varargs java.lang.StringBuilder append(java.lang.StringBuilder,java.lang.String[])
    public static final varargs java.lang.StringBuilder append(java.lang.StringBuilder,java.lang.Object[])
    public static final void appendElement(java.lang.Appendable,java.lang.Object,kotlin.jvm.functions.Function1)
    public void <init>()
androidx.navigation.ktx.R$layout
androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1$lambda$1$1
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$3
androidx.loader.content.CursorLoader
androidx.core.app.NavUtils:
    public static void navigateUpFromSameTask(android.app.Activity)
    public static android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class)
    private void <init>()
    private static final java.lang.String TAG
    public static final java.lang.String PARENT_ACTIVITY
androidx.core.graphics.ColorUtils:
    private void <init>()
    public static android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)
    public static double calculateLuminance(int)
    public static double calculateContrast(int,int)
    public static int calculateMinimumAlpha(int,int,float)
    public static void RGBToHSL(int,int,int,float[])
    public static void colorToHSL(int,float[])
    public static int HSLToColor(float[])
    public static void colorToLAB(int,double[])
    public static void RGBToLAB(int,int,int,double[])
    public static void colorToXYZ(int,double[])
    public static void RGBToXYZ(int,int,int,double[])
    public static void XYZToLAB(double,double,double,double[])
    public static void LABToXYZ(double,double,double,double[])
    public static int XYZToColor(double,double,double)
    public static int LABToColor(double,double,double)
    public static double distanceEuclidean(double[],double[])
    private static float constrain(float,float,float)
    private static int constrain(int,int,int)
    private static double pivotXyzComponent(double)
    public static int blendARGB(int,int,float)
    public static void blendHSL(float[],float[],float,float[])
    public static void blendLAB(double[],double[],double,double[])
    static float circularInterpolate(float,float,float)
    private static double[] getTempDouble3Array()
    private static final double XYZ_WHITE_REFERENCE_X
    private static final double XYZ_WHITE_REFERENCE_Y
    private static final double XYZ_WHITE_REFERENCE_Z
    private static final double XYZ_EPSILON
    private static final double XYZ_KAPPA
    private static final int MIN_ALPHA_SEARCH_MAX_ITERATIONS
    private static final int MIN_ALPHA_SEARCH_PRECISION
androidx.recyclerview.widget.RecyclerView$SimpleOnItemTouchListener
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combine$1$2
androidx.constraintlayout.widget.Placeholder:
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    public void <init>(android.content.Context,android.util.AttributeSet,int,int)
    private void init(android.util.AttributeSet)
androidx.coordinatorlayout.widget.DirectedAcyclicGraph:
    int size()
kotlinx.coroutines.flow.internal.ChannelFlowOperator$collectWithContextUndispatched$2
androidx.media.R$attr
androidx.core.content.res.ResourcesCompat:
    public static android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme)
    public static int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)
    public static android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)
    public static float getFloat(android.content.res.Resources,int)
    private void <init>()
    private static final java.lang.String TAG
org.jetbrains.annotations.Contract
androidx.viewpager2.R$string
androidx.core.view.ViewGroupKt$children$1
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21
androidx.arch.core.executor.TaskExecutor:
    public void executeOnMainThread(java.lang.Runnable)
androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper
androidx.core.graphics.PathSegment
kotlinx.coroutines.flow.FlowKt__MigrationKt$combine$$inlined$unsafeFlow$2$lambda$1
kotlinx.coroutines.flow.FlowKt__TransformKt$unsafeTransform$$inlined$unsafeFlow$5$lambda$1
androidx.vectordrawable.animated.R$layout
kotlin.UnsignedKt
com.google.android.material.snackbar.BaseTransientBottomBar$AnimationMode
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$$inlined$collect$1$1
androidx.core.graphics.drawable.RoundedBitmapDrawable
kotlin.SafePublicationLazyImpl
com.google.android.material.tabs.TabLayout$TabIndicatorGravity
androidx.constraintlayout.widget.Constraints:
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    private void init(android.util.AttributeSet)
    public static final java.lang.String TAG
kotlin.time.DurationUnitKt__DurationUnitJvmKt
kotlin.coroutines.jvm.internal.RestrictedSuspendLambda
androidx.media.MediaBrowserServiceCompatApi21
androidx.coordinatorlayout.widget.CoordinatorLayout$DispatchChangeEvent
kotlin.text.StringsKt__RegexExtensionsJVMKt:
    private static final kotlin.text.Regex toRegex(java.util.regex.Pattern)
    public void <init>()
androidx.databinding.library.R$id:
    private void <init>()
androidx.recyclerview.widget.PagerSnapHelper
androidx.navigation.NavOptionsBuilderKt
kotlinx.coroutines.flow.FlowKt__DistinctKt$distinctUntilChangedBy$$inlined$unsafeFlow$3
androidx.databinding.InverseBindingMethod
androidx.core.database.sqlite.SQLiteCursorCompat
kotlin.coroutines.experimental.CoroutineContext
android.support.v4.media.MediaBrowserCompat$CustomActionCallback:
    public void <init>()
kotlin.jvm.internal.markers.KMappedMarker
androidx.legacy.v4.R$dimen
androidx.databinding.library.R$integer
kotlinx.coroutines.channels.ChannelIterator$DefaultImpls
kotlin.collections.ReversedList
androidx.navigation.ui.R$drawable
androidx.core.animation.AnimatorKt$doOnStart$$inlined$addListener$1
kotlin.ranges.LongProgression
androidx.core.util.SparseLongArrayKt$keyIterator$1
kotlinx.coroutines.flow.internal.SafeCollector
androidx.navigation.NavDestinationDsl
androidx.core.net.TrafficStatsCompat
androidx.navigation.ui.NavigationUI$5
kotlin.ranges.LongRange$Companion
androidx.core.animation.AnimatorKt$doOnEnd$$inlined$addListener$1
kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$2
kotlin.ranges.IntProgression$Companion:
    public final kotlin.ranges.IntProgression fromClosedRange(int,int,int)
kotlin.text.StringsKt:
    private void <init>()
kotlin.text.StringsKt___StringsKt$withIndex$1
com.google.android.material.internal.ContextUtils
com.google.android.material.tabs.TabLayout$TabView
androidx.activity.ImmLeaksCleaner:
    private static final int NOT_INITIALIAZED
    private static final int INIT_SUCCESS
    private static final int INIT_FAILED
androidx.appcompat.widget.ScrollingTabContainerView$TabView:
    private static final java.lang.String ACCESSIBILITY_CLASS_NAME
androidx.core.animation.AnimatorKt$doOnRepeat$$inlined$addListener$1
androidx.core.app.NotificationCompat$Action$Extender
kotlin.annotation.MustBeDocumented
kotlinx.coroutines.CancellableContinuationKt
kotlin.reflect.KFunction$DefaultImpls
androidx.navigation.ui.R$style
kotlinx.coroutines.flow.FlowKt__TransformKt$unsafeTransform$$inlined$unsafeFlow$1
kotlinx.coroutines.flow.internal.NopCollector
kotlin.ranges.ULongRange
com.google.android.material.circularreveal.CircularRevealHelper$Strategy
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3$lambda$1
com.google.android.material.appbar.CollapsingToolbarLayout$OffsetUpdateListener
kotlinx.coroutines.channels.SendChannel
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$1
android.support.v4.media.MediaMetadataCompat$BitmapKey
androidx.core.widget.TextViewKt$addTextChangedListener$1
com.google.android.material.bottomnavigation.LabelVisibilityMode
androidx.databinding.adapters.ViewGroupBindingAdapter$OnAnimationEnd
kotlin.reflect.KTypeParameter
kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp
kotlin.jvm.functions.Function5
kotlin.text.StringsKt__StringsKt:
    public static final java.lang.CharSequence trim(java.lang.CharSequence,kotlin.jvm.functions.Function1)
    public static final java.lang.String trim(java.lang.String,kotlin.jvm.functions.Function1)
    public static final java.lang.CharSequence trimStart(java.lang.CharSequence,kotlin.jvm.functions.Function1)
    public static final java.lang.String trimStart(java.lang.String,kotlin.jvm.functions.Function1)
    public static final java.lang.CharSequence trimEnd(java.lang.CharSequence,kotlin.jvm.functions.Function1)
    public static final java.lang.String trimEnd(java.lang.String,kotlin.jvm.functions.Function1)
    public static final varargs java.lang.CharSequence trim(java.lang.CharSequence,char[])
    public static final varargs java.lang.String trim(java.lang.String,char[])
    public static final varargs java.lang.CharSequence trimStart(java.lang.CharSequence,char[])
    public static final varargs java.lang.String trimStart(java.lang.String,char[])
    public static final varargs java.lang.CharSequence trimEnd(java.lang.CharSequence,char[])
    public static final varargs java.lang.String trimEnd(java.lang.String,char[])
    public static final java.lang.CharSequence trim(java.lang.CharSequence)
    private static final java.lang.String trim(java.lang.String)
    public static final java.lang.CharSequence trimStart(java.lang.CharSequence)
    private static final java.lang.String trimStart(java.lang.String)
    public static final java.lang.CharSequence trimEnd(java.lang.CharSequence)
    private static final java.lang.String trimEnd(java.lang.String)
    public static final java.lang.CharSequence padStart(java.lang.CharSequence,int,char)
    public static synthetic java.lang.CharSequence padStart$default(java.lang.CharSequence,int,char,int,java.lang.Object)
    public static final java.lang.String padStart(java.lang.String,int,char)
    public static synthetic java.lang.String padStart$default(java.lang.String,int,char,int,java.lang.Object)
    public static final java.lang.CharSequence padEnd(java.lang.CharSequence,int,char)
    public static synthetic java.lang.CharSequence padEnd$default(java.lang.CharSequence,int,char,int,java.lang.Object)
    public static final java.lang.String padEnd(java.lang.String,int,char)
    public static synthetic java.lang.String padEnd$default(java.lang.String,int,char,int,java.lang.Object)
    private static final boolean isNullOrEmpty(java.lang.CharSequence)
    private static final boolean isEmpty(java.lang.CharSequence)
    private static final boolean isNotEmpty(java.lang.CharSequence)
    private static final boolean isNotBlank(java.lang.CharSequence)
    private static final boolean isNullOrBlank(java.lang.CharSequence)
    public static final kotlin.collections.CharIterator iterator(java.lang.CharSequence)
    private static final java.lang.String orEmpty(java.lang.String)
    private static final java.lang.Object ifEmpty(java.lang.CharSequence,kotlin.jvm.functions.Function0)
    private static final java.lang.Object ifBlank(java.lang.CharSequence,kotlin.jvm.functions.Function0)
    public static final kotlin.ranges.IntRange getIndices(java.lang.CharSequence)
    public static final boolean hasSurrogatePairAt(java.lang.CharSequence,int)
    public static final java.lang.String substring(java.lang.String,kotlin.ranges.IntRange)
    public static final java.lang.CharSequence subSequence(java.lang.CharSequence,kotlin.ranges.IntRange)
    private static final java.lang.CharSequence subSequence(java.lang.String,int,int)
    private static final java.lang.String substring(java.lang.CharSequence,int,int)
    static synthetic java.lang.String substring$default(java.lang.CharSequence,int,int,int,java.lang.Object)
    public static final java.lang.String substring(java.lang.CharSequence,kotlin.ranges.IntRange)
    public static final java.lang.String substringBefore(java.lang.String,char,java.lang.String)
    public static synthetic java.lang.String substringBefore$default(java.lang.String,char,java.lang.String,int,java.lang.Object)
    public static final java.lang.String substringBefore(java.lang.String,java.lang.String,java.lang.String)
    public static synthetic java.lang.String substringBefore$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
    public static final java.lang.String substringAfter(java.lang.String,char,java.lang.String)
    public static synthetic java.lang.String substringAfter$default(java.lang.String,char,java.lang.String,int,java.lang.Object)
    public static final java.lang.String substringAfter(java.lang.String,java.lang.String,java.lang.String)
    public static synthetic java.lang.String substringAfter$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
    public static final java.lang.String substringBeforeLast(java.lang.String,char,java.lang.String)
    public static synthetic java.lang.String substringBeforeLast$default(java.lang.String,char,java.lang.String,int,java.lang.Object)
    public static final java.lang.String substringBeforeLast(java.lang.String,java.lang.String,java.lang.String)
    public static synthetic java.lang.String substringBeforeLast$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
    public static final java.lang.String substringAfterLast(java.lang.String,char,java.lang.String)
    public static synthetic java.lang.String substringAfterLast$default(java.lang.String,char,java.lang.String,int,java.lang.Object)
    public static final java.lang.String substringAfterLast(java.lang.String,java.lang.String,java.lang.String)
    public static synthetic java.lang.String substringAfterLast$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
    public static final java.lang.CharSequence replaceRange(java.lang.CharSequence,int,int,java.lang.CharSequence)
    private static final java.lang.String replaceRange(java.lang.String,int,int,java.lang.CharSequence)
    public static final java.lang.CharSequence replaceRange(java.lang.CharSequence,kotlin.ranges.IntRange,java.lang.CharSequence)
    private static final java.lang.String replaceRange(java.lang.String,kotlin.ranges.IntRange,java.lang.CharSequence)
    public static final java.lang.CharSequence removeRange(java.lang.CharSequence,int,int)
    private static final java.lang.String removeRange(java.lang.String,int,int)
    public static final java.lang.CharSequence removeRange(java.lang.CharSequence,kotlin.ranges.IntRange)
    private static final java.lang.String removeRange(java.lang.String,kotlin.ranges.IntRange)
    public static final java.lang.CharSequence removePrefix(java.lang.CharSequence,java.lang.CharSequence)
    public static final java.lang.String removePrefix(java.lang.String,java.lang.CharSequence)
    public static final java.lang.CharSequence removeSuffix(java.lang.CharSequence,java.lang.CharSequence)
    public static final java.lang.String removeSuffix(java.lang.String,java.lang.CharSequence)
    public static final java.lang.CharSequence removeSurrounding(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence)
    public static final java.lang.String removeSurrounding(java.lang.String,java.lang.CharSequence,java.lang.CharSequence)
    public static final java.lang.CharSequence removeSurrounding(java.lang.CharSequence,java.lang.CharSequence)
    public static final java.lang.String removeSurrounding(java.lang.String,java.lang.CharSequence)
    public static final java.lang.String replaceBefore(java.lang.String,char,java.lang.String,java.lang.String)
    public static synthetic java.lang.String replaceBefore$default(java.lang.String,char,java.lang.String,java.lang.String,int,java.lang.Object)
    public static final java.lang.String replaceBefore(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
    public static synthetic java.lang.String replaceBefore$default(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
    public static final java.lang.String replaceAfter(java.lang.String,char,java.lang.String,java.lang.String)
    public static synthetic java.lang.String replaceAfter$default(java.lang.String,char,java.lang.String,java.lang.String,int,java.lang.Object)
    public static final java.lang.String replaceAfter(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
    public static synthetic java.lang.String replaceAfter$default(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
    public static final java.lang.String replaceAfterLast(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
    public static synthetic java.lang.String replaceAfterLast$default(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
    public static final java.lang.String replaceAfterLast(java.lang.String,char,java.lang.String,java.lang.String)
    public static synthetic java.lang.String replaceAfterLast$default(java.lang.String,char,java.lang.String,java.lang.String,int,java.lang.Object)
    public static final java.lang.String replaceBeforeLast(java.lang.String,char,java.lang.String,java.lang.String)
    public static synthetic java.lang.String replaceBeforeLast$default(java.lang.String,char,java.lang.String,java.lang.String,int,java.lang.Object)
    public static final java.lang.String replaceBeforeLast(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
    public static synthetic java.lang.String replaceBeforeLast$default(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
    private static final java.lang.String replace(java.lang.CharSequence,kotlin.text.Regex,java.lang.String)
    private static final java.lang.String replace(java.lang.CharSequence,kotlin.text.Regex,kotlin.jvm.functions.Function1)
    private static final java.lang.String replaceFirst(java.lang.CharSequence,kotlin.text.Regex,java.lang.String)
    private static final boolean matches(java.lang.CharSequence,kotlin.text.Regex)
    public static final boolean regionMatchesImpl(java.lang.CharSequence,int,java.lang.CharSequence,int,int,boolean)
    public static final boolean startsWith(java.lang.CharSequence,char,boolean)
    public static synthetic boolean startsWith$default(java.lang.CharSequence,char,boolean,int,java.lang.Object)
    public static final boolean endsWith(java.lang.CharSequence,char,boolean)
    public static synthetic boolean endsWith$default(java.lang.CharSequence,char,boolean,int,java.lang.Object)
    public static final boolean startsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)
    public static synthetic boolean startsWith$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object)
    public static final boolean startsWith(java.lang.CharSequence,java.lang.CharSequence,int,boolean)
    public static synthetic boolean startsWith$default(java.lang.CharSequence,java.lang.CharSequence,int,boolean,int,java.lang.Object)
    public static final boolean endsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)
    public static synthetic boolean endsWith$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object)
    public static final java.lang.String commonPrefixWith(java.lang.CharSequence,java.lang.CharSequence,boolean)
    public static synthetic java.lang.String commonPrefixWith$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object)
    public static final java.lang.String commonSuffixWith(java.lang.CharSequence,java.lang.CharSequence,boolean)
    public static synthetic java.lang.String commonSuffixWith$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object)
    public static synthetic int indexOfAny$default(java.lang.CharSequence,char[],int,boolean,int,java.lang.Object)
    public static final int lastIndexOfAny(java.lang.CharSequence,char[],int,boolean)
    public static synthetic int lastIndexOfAny$default(java.lang.CharSequence,char[],int,boolean,int,java.lang.Object)
    private static final int indexOf$StringsKt__StringsKt(java.lang.CharSequence,java.lang.CharSequence,int,int,boolean,boolean)
    static synthetic int indexOf$StringsKt__StringsKt$default(java.lang.CharSequence,java.lang.CharSequence,int,int,boolean,boolean,int,java.lang.Object)
    private static final kotlin.Pair findAnyOf$StringsKt__StringsKt(java.lang.CharSequence,java.util.Collection,int,boolean,boolean)
    public static final kotlin.Pair findAnyOf(java.lang.CharSequence,java.util.Collection,int,boolean)
    public static synthetic kotlin.Pair findAnyOf$default(java.lang.CharSequence,java.util.Collection,int,boolean,int,java.lang.Object)
    public static final kotlin.Pair findLastAnyOf(java.lang.CharSequence,java.util.Collection,int,boolean)
    public static synthetic kotlin.Pair findLastAnyOf$default(java.lang.CharSequence,java.util.Collection,int,boolean,int,java.lang.Object)
    public static final int indexOfAny(java.lang.CharSequence,java.util.Collection,int,boolean)
    public static synthetic int indexOfAny$default(java.lang.CharSequence,java.util.Collection,int,boolean,int,java.lang.Object)
    public static final int lastIndexOfAny(java.lang.CharSequence,java.util.Collection,int,boolean)
    public static synthetic int lastIndexOfAny$default(java.lang.CharSequence,java.util.Collection,int,boolean,int,java.lang.Object)
    public static final int indexOf(java.lang.CharSequence,java.lang.String,int,boolean)
    public static synthetic int indexOf$default(java.lang.CharSequence,java.lang.String,int,boolean,int,java.lang.Object)
    public static final int lastIndexOf(java.lang.CharSequence,char,int,boolean)
    public static synthetic int lastIndexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object)
    public static final int lastIndexOf(java.lang.CharSequence,java.lang.String,int,boolean)
    public static synthetic int lastIndexOf$default(java.lang.CharSequence,java.lang.String,int,boolean,int,java.lang.Object)
    public static final boolean contains(java.lang.CharSequence,java.lang.CharSequence,boolean)
    public static synthetic boolean contains$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object)
    public static final boolean contains(java.lang.CharSequence,char,boolean)
    public static synthetic boolean contains$default(java.lang.CharSequence,char,boolean,int,java.lang.Object)
    private static final boolean contains(java.lang.CharSequence,kotlin.text.Regex)
    private static final kotlin.sequences.Sequence rangesDelimitedBy$StringsKt__StringsKt(java.lang.CharSequence,char[],int,boolean,int)
    static synthetic kotlin.sequences.Sequence rangesDelimitedBy$StringsKt__StringsKt$default(java.lang.CharSequence,char[],int,boolean,int,int,java.lang.Object)
    private static final kotlin.sequences.Sequence rangesDelimitedBy$StringsKt__StringsKt(java.lang.CharSequence,java.lang.String[],int,boolean,int)
    static synthetic kotlin.sequences.Sequence rangesDelimitedBy$StringsKt__StringsKt$default(java.lang.CharSequence,java.lang.String[],int,boolean,int,int,java.lang.Object)
    public static final kotlin.sequences.Sequence splitToSequence(java.lang.CharSequence,java.lang.String[],boolean,int)
    public static synthetic kotlin.sequences.Sequence splitToSequence$default(java.lang.CharSequence,java.lang.String[],boolean,int,int,java.lang.Object)
    public static final java.util.List split(java.lang.CharSequence,java.lang.String[],boolean,int)
    public static synthetic java.util.List split$default(java.lang.CharSequence,java.lang.String[],boolean,int,int,java.lang.Object)
    public static final kotlin.sequences.Sequence splitToSequence(java.lang.CharSequence,char[],boolean,int)
    public static synthetic kotlin.sequences.Sequence splitToSequence$default(java.lang.CharSequence,char[],boolean,int,int,java.lang.Object)
    public static final java.util.List split(java.lang.CharSequence,char[],boolean,int)
    public static synthetic java.util.List split$default(java.lang.CharSequence,char[],boolean,int,int,java.lang.Object)
    private static final java.util.List split$StringsKt__StringsKt(java.lang.CharSequence,java.lang.String,boolean,int)
    private static final java.util.List split(java.lang.CharSequence,kotlin.text.Regex,int)
    static synthetic java.util.List split$default(java.lang.CharSequence,kotlin.text.Regex,int,int,java.lang.Object)
    public static final kotlin.sequences.Sequence lineSequence(java.lang.CharSequence)
    public static final java.util.List lines(java.lang.CharSequence)
    public static final synthetic kotlin.Pair access$findAnyOf(java.lang.CharSequence,java.util.Collection,int,boolean,boolean)
    public void <init>()
kotlin.coroutines.experimental.SequenceBuilderKt
com.google.android.material.resources.TextAppearance:
    private static final java.lang.String TAG
    private static final int TYPEFACE_SANS
    private static final int TYPEFACE_SERIF
    private static final int TYPEFACE_MONOSPACE
android.support.v4.media.session.MediaControllerCompat$Callback:
    public void onSessionReady()
    public void onCaptioningEnabledChanged(boolean)
    public void onRepeatModeChanged(int)
    public void onShuffleModeChanged(int)
    public android.support.v4.media.session.IMediaControllerCallback getIControllerCallback()
    void setHandler(android.os.Handler)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnChildScrollUpCallback
com.google.android.material.tabs.TabLayout$SlidingTabIndicator
androidx.databinding.Bindable
androidx.appcompat.view.menu.BaseMenuPresenter:
    public boolean flagActionItems()
    public int getId()
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$any$3
androidx.annotation.ColorLong
android.support.v4.media.session.MediaControllerCompat$TransportControlsApi24
androidx.transition.Slide$2
kotlin.Result
kotlin.KotlinVersion
androidx.appcompat.widget.SwitchCompat
androidx.databinding.adapters.SeekBarBindingAdapter
androidx.appcompat.view.StandaloneActionMode:
    public void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
    public boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder)
    public void onCloseSubMenu(androidx.appcompat.view.menu.SubMenuBuilder)
    public boolean isUiFocusable()
androidx.transition.GhostViewUtils
androidx.core.os.MessageCompat
com.google.android.material.tabs.TabLayout$TabView$1
kotlin.text.StringsKt___StringsKt:
    private static final char elementAtOrElse(java.lang.CharSequence,int,kotlin.jvm.functions.Function1)
    private static final java.lang.Character elementAtOrNull(java.lang.CharSequence,int)
    private static final java.lang.Character find(java.lang.CharSequence,kotlin.jvm.functions.Function1)
    private static final java.lang.Character findLast(java.lang.CharSequence,kotlin.jvm.functions.Function1)
    public static final char first(java.lang.CharSequence)
    public static final char first(java.lang.CharSequence,kotlin.jvm.functions.Function1)
    public static final java.lang.Character firstOrNull(java.lang.CharSequence)
    public static final java.lang.Character firstOrNull(java.lang.CharSequence,kotlin.jvm.functions.Function1)
    private static final char getOrElse(java.lang.CharSequence,int,kotlin.jvm.functions.Function1)
    public static final java.lang.Character getOrNull(java.lang.CharSequence,int)
    public static final int indexOfFirst(java.lang.CharSequence,kotlin.jvm.functions.Function1)
    public static final int indexOfLast(java.lang.CharSequence,kotlin.jvm.functions.Function1)
    public static final char last(java.lang.CharSequence)
    public static final char last(java.lang.CharSequence,kotlin.jvm.functions.Function1)
    public static final java.lang.Character lastOrNull(java.lang.CharSequence)
    public static final java.lang.Character lastOrNull(java.lang.CharSequence,kotlin.jvm.functions.Function1)
    private static final char random(java.lang.CharSequence)
    public static final char random(java.lang.CharSequence,kotlin.random.Random)
    public static final char single(java.lang.CharSequence)
    public static final char single(java.lang.CharSequence,kotlin.jvm.functions.Function1)
    public static final java.lang.Character singleOrNull(java.lang.CharSequence)
    public static final java.lang.Character singleOrNull(java.lang.CharSequence,kotlin.jvm.functions.Function1)
    public static final java.lang.CharSequence drop(java.lang.CharSequence,int)
    public static final java.lang.String drop(java.lang.String,int)
    public static final java.lang.CharSequence dropLast(java.lang.CharSequence,int)
    public static final java.lang.String dropLast(java.lang.String,int)
    public static final java.lang.CharSequence dropLastWhile(java.lang.CharSequence,kotlin.jvm.functions.Function1)
    public static final java.lang.String dropLastWhile(java.lang.String,kotlin.jvm.functions.Function1)
    public static final java.lang.CharSequence dropWhile(java.lang.CharSequence,kotlin.jvm.functions.Function1)
    public static final java.lang.String dropWhile(java.lang.String,kotlin.jvm.functions.Function1)
    public static final java.lang.CharSequence filter(java.lang.CharSequence,kotlin.jvm.functions.Function1)
    public static final java.lang.String filter(java.lang.String,kotlin.jvm.functions.Function1)
    public static final java.lang.CharSequence filterIndexed(java.lang.CharSequence,kotlin.jvm.functions.Function2)
    public static final java.lang.String filterIndexed(java.lang.String,kotlin.jvm.functions.Function2)
    public static final java.lang.Appendable filterIndexedTo(java.lang.CharSequence,java.lang.Appendable,kotlin.jvm.functions.Function2)
    public static final java.lang.CharSequence filterNot(java.lang.CharSequence,kotlin.jvm.functions.Function1)
    public static final java.lang.String filterNot(java.lang.String,kotlin.jvm.functions.Function1)
    public static final java.lang.Appendable filterNotTo(java.lang.CharSequence,java.lang.Appendable,kotlin.jvm.functions.Function1)
    public static final java.lang.Appendable filterTo(java.lang.CharSequence,java.lang.Appendable,kotlin.jvm.functions.Function1)
    public static final java.lang.CharSequence slice(java.lang.CharSequence,kotlin.ranges.IntRange)
    public static final java.lang.String slice(java.lang.String,kotlin.ranges.IntRange)
    public static final java.lang.CharSequence slice(java.lang.CharSequence,java.lang.Iterable)
    private static final java.lang.String slice(java.lang.String,java.lang.Iterable)
    public static final java.lang.CharSequence take(java.lang.CharSequence,int)
    public static final java.lang.String take(java.lang.String,int)
    public static final java.lang.CharSequence takeLast(java.lang.CharSequence,int)
    public static final java.lang.String takeLast(java.lang.String,int)
    public static final java.lang.CharSequence takeLastWhile(java.lang.CharSequence,kotlin.jvm.functions.Function1)
    public static final java.lang.String takeLastWhile(java.lang.String,kotlin.jvm.functions.Function1)
    public static final java.lang.CharSequence takeWhile(java.lang.CharSequence,kotlin.jvm.functions.Function1)
    public static final java.lang.String takeWhile(java.lang.String,kotlin.jvm.functions.Function1)
    public static final java.lang.CharSequence reversed(java.lang.CharSequence)
    private static final java.lang.String reversed(java.lang.String)
    public static final java.util.Map associate(java.lang.CharSequence,kotlin.jvm.functions.Function1)
    public static final java.util.Map associateBy(java.lang.CharSequence,kotlin.jvm.functions.Function1)
    public static final java.util.Map associateBy(java.lang.CharSequence,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
    public static final java.util.Map associateByTo(java.lang.CharSequence,java.util.Map,kotlin.jvm.functions.Function1)
    public static final java.util.Map associateByTo(java.lang.CharSequence,java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
    public static final java.util.Map associateTo(java.lang.CharSequence,java.util.Map,kotlin.jvm.functions.Function1)
    public static final java.util.Map associateWith(java.lang.CharSequence,kotlin.jvm.functions.Function1)
    public static final java.util.Map associateWithTo(java.lang.CharSequence,java.util.Map,kotlin.jvm.functions.Function1)
    public static final java.util.Collection toCollection(java.lang.CharSequence,java.util.Collection)
    public static final java.util.HashSet toHashSet(java.lang.CharSequence)
    public static final java.util.List toList(java.lang.CharSequence)
    public static final java.util.List toMutableList(java.lang.CharSequence)
    public static final java.util.Set toSet(java.lang.CharSequence)
    public static final java.util.List flatMap(java.lang.CharSequence,kotlin.jvm.functions.Function1)
    public static final java.util.Collection flatMapTo(java.lang.CharSequence,java.util.Collection,kotlin.jvm.functions.Function1)
    public static final java.util.Map groupBy(java.lang.CharSequence,kotlin.jvm.functions.Function1)
    public static final java.util.Map groupBy(java.lang.CharSequence,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
    public static final java.util.Map groupByTo(java.lang.CharSequence,java.util.Map,kotlin.jvm.functions.Function1)
    public static final java.util.Map groupByTo(java.lang.CharSequence,java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
    public static final kotlin.collections.Grouping groupingBy(java.lang.CharSequence,kotlin.jvm.functions.Function1)
    public static final java.util.List map(java.lang.CharSequence,kotlin.jvm.functions.Function1)
    public static final java.util.List mapIndexed(java.lang.CharSequence,kotlin.jvm.functions.Function2)
    public static final java.util.List mapIndexedNotNull(java.lang.CharSequence,kotlin.jvm.functions.Function2)
    public static final java.util.Collection mapIndexedNotNullTo(java.lang.CharSequence,java.util.Collection,kotlin.jvm.functions.Function2)
    public static final java.util.Collection mapIndexedTo(java.lang.CharSequence,java.util.Collection,kotlin.jvm.functions.Function2)
    public static final java.util.List mapNotNull(java.lang.CharSequence,kotlin.jvm.functions.Function1)
    public static final java.util.Collection mapNotNullTo(java.lang.CharSequence,java.util.Collection,kotlin.jvm.functions.Function1)
    public static final java.util.Collection mapTo(java.lang.CharSequence,java.util.Collection,kotlin.jvm.functions.Function1)
    public static final java.lang.Iterable withIndex(java.lang.CharSequence)
    public static final boolean all(java.lang.CharSequence,kotlin.jvm.functions.Function1)
    public static final boolean any(java.lang.CharSequence)
    public static final boolean any(java.lang.CharSequence,kotlin.jvm.functions.Function1)
    private static final int count(java.lang.CharSequence)
    public static final int count(java.lang.CharSequence,kotlin.jvm.functions.Function1)
    public static final java.lang.Object fold(java.lang.CharSequence,java.lang.Object,kotlin.jvm.functions.Function2)
    public static final java.lang.Object foldIndexed(java.lang.CharSequence,java.lang.Object,kotlin.jvm.functions.Function3)
    public static final java.lang.Object foldRight(java.lang.CharSequence,java.lang.Object,kotlin.jvm.functions.Function2)
    public static final java.lang.Object foldRightIndexed(java.lang.CharSequence,java.lang.Object,kotlin.jvm.functions.Function3)
    public static final void forEach(java.lang.CharSequence,kotlin.jvm.functions.Function1)
    public static final void forEachIndexed(java.lang.CharSequence,kotlin.jvm.functions.Function2)
    public static final java.lang.Character max(java.lang.CharSequence)
    public static final java.lang.Character maxBy(java.lang.CharSequence,kotlin.jvm.functions.Function1)
    public static final java.lang.Character maxWith(java.lang.CharSequence,java.util.Comparator)
    public static final java.lang.Character min(java.lang.CharSequence)
    public static final java.lang.Character minBy(java.lang.CharSequence,kotlin.jvm.functions.Function1)
    public static final java.lang.Character minWith(java.lang.CharSequence,java.util.Comparator)
    public static final boolean none(java.lang.CharSequence)
    public static final boolean none(java.lang.CharSequence,kotlin.jvm.functions.Function1)
    public static final java.lang.CharSequence onEach(java.lang.CharSequence,kotlin.jvm.functions.Function1)
    public static final char reduce(java.lang.CharSequence,kotlin.jvm.functions.Function2)
    public static final char reduceIndexed(java.lang.CharSequence,kotlin.jvm.functions.Function3)
    public static final char reduceRight(java.lang.CharSequence,kotlin.jvm.functions.Function2)
    public static final char reduceRightIndexed(java.lang.CharSequence,kotlin.jvm.functions.Function3)
    public static final int sumBy(java.lang.CharSequence,kotlin.jvm.functions.Function1)
    public static final double sumByDouble(java.lang.CharSequence,kotlin.jvm.functions.Function1)
    public static final java.util.List chunked(java.lang.CharSequence,int)
    public static final java.util.List chunked(java.lang.CharSequence,int,kotlin.jvm.functions.Function1)
    public static final kotlin.sequences.Sequence chunkedSequence(java.lang.CharSequence,int)
    public static final kotlin.sequences.Sequence chunkedSequence(java.lang.CharSequence,int,kotlin.jvm.functions.Function1)
    public static final kotlin.Pair partition(java.lang.CharSequence,kotlin.jvm.functions.Function1)
    public static final kotlin.Pair partition(java.lang.String,kotlin.jvm.functions.Function1)
    public static final java.util.List windowed(java.lang.CharSequence,int,int,boolean)
    public static synthetic java.util.List windowed$default(java.lang.CharSequence,int,int,boolean,int,java.lang.Object)
    public static final java.util.List windowed(java.lang.CharSequence,int,int,boolean,kotlin.jvm.functions.Function1)
    public static synthetic java.util.List windowed$default(java.lang.CharSequence,int,int,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object)
    public static final kotlin.sequences.Sequence windowedSequence(java.lang.CharSequence,int,int,boolean)
    public static synthetic kotlin.sequences.Sequence windowedSequence$default(java.lang.CharSequence,int,int,boolean,int,java.lang.Object)
    public static final kotlin.sequences.Sequence windowedSequence(java.lang.CharSequence,int,int,boolean,kotlin.jvm.functions.Function1)
    public static synthetic kotlin.sequences.Sequence windowedSequence$default(java.lang.CharSequence,int,int,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object)
    public static final java.util.List zip(java.lang.CharSequence,java.lang.CharSequence)
    public static final java.util.List zip(java.lang.CharSequence,java.lang.CharSequence,kotlin.jvm.functions.Function2)
    public static final java.util.List zipWithNext(java.lang.CharSequence)
    public static final java.util.List zipWithNext(java.lang.CharSequence,kotlin.jvm.functions.Function2)
    public static final java.lang.Iterable asIterable(java.lang.CharSequence)
    public static final kotlin.sequences.Sequence asSequence(java.lang.CharSequence)
    public void <init>()
kotlinx.coroutines.internal.ContextScope
kotlinx.coroutines.flow.FlowKt__ErrorsKt$onErrorCollect$1
com.google.android.material.transformation.ExpandableBehavior:
    public static com.google.android.material.transformation.ExpandableBehavior from(android.view.View,java.lang.Class)
    private static final int STATE_UNINITIALIZED
    private static final int STATE_EXPANDED
    private static final int STATE_COLLAPSED
androidx.core.view.ViewKt$doOnAttach$1
androidx.appcompat.widget.AppCompatBackgroundHelper:
    public final boolean shouldApplyFrameworkTintUsingColorFilter()
    public final boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable)
kotlin.jvm.internal.PropertyReference1Impl:
    private void constructor$kotlin$jvm$internal$PropertyReference1()
    private kotlin.reflect.KCallable computeReflected$kotlin$jvm$internal$PropertyReference1()
    public kotlin.reflect.KDeclarationContainer getOwner()
    public java.lang.String getName()
    public java.lang.String getSignature()
    public kotlin.reflect.KCallable computeReflected()
androidx.core.view.ActionProvider$VisibilityListener:
    public abstract void onActionProviderVisibilityChanged(boolean)
androidx.cardview.widget.CardViewBaseImpl:
    public void updatePadding(androidx.cardview.widget.CardViewDelegate)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath:
    public void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)
    public final void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)
androidx.transition.ViewUtils:
    public static void setTransitionAlpha(android.view.View,float)
    public static void saveNonTransitionAlpha(android.view.View)
    public static void clearNonTransitionAlpha(android.view.View)
    public static void setTransitionVisibility(android.view.View,int)
    public static void transformMatrixToGlobal(android.view.View,android.graphics.Matrix)
    public static void transformMatrixToLocal(android.view.View,android.graphics.Matrix)
    public static final android.util.Property CLIP_BOUNDS
com.google.android.material.bottomappbar.BottomAppBar$Behavior:
    public static synthetic java.lang.ref.WeakReference access$1300(com.google.android.material.bottomappbar.BottomAppBar$Behavior)
    public static synthetic android.graphics.Rect access$1400(com.google.android.material.bottomappbar.BottomAppBar$Behavior)
    public static synthetic int access$1500(com.google.android.material.bottomappbar.BottomAppBar$Behavior)
    public boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.bottomappbar.BottomAppBar,int)
    public boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.bottomappbar.BottomAppBar,android.view.View,android.view.View,int,int)
androidx.cardview.widget.CardViewApi21Impl:
    public void updatePadding(androidx.cardview.widget.CardViewDelegate)
com.czluciusdev.diceroller.DiceFragment$$special$$inlined$viewModels$2:
    public final androidx.lifecycle.ViewModelStore invoke()
com.google.android.material.chip.ChipDrawable:
    public static com.google.android.material.chip.ChipDrawable createFromAttributes(android.content.Context,android.util.AttributeSet,int,int)
    public static boolean isStateful(com.google.android.material.resources.TextAppearance)
    public static boolean hasState(int[],int)
    public boolean getUseCompatRipple()
    public void setDelegate(com.google.android.material.chip.ChipDrawable$Delegate)
    public void getCloseIconTouchBounds(android.graphics.RectF)
    public android.graphics.Paint$Align calculateTextOriginAndAlignment(android.graphics.Rect,android.graphics.PointF)
    public boolean isCloseIconStateful()
    public int[] getCloseIconState()
    public android.content.res.ColorStateList getChipBackgroundColor()
    public void setChipBackgroundColorResource(int)
    public float getChipMinHeight()
    public void setChipMinHeightResource(int)
    public void setChipCornerRadiusResource(int)
    public android.content.res.ColorStateList getChipStrokeColor()
    public void setChipStrokeColorResource(int)
    public float getChipStrokeWidth()
    public void setChipStrokeWidthResource(int)
    public android.content.res.ColorStateList getRippleColor()
    public void setRippleColorResource(int)
    public java.lang.CharSequence getText()
    public com.google.android.material.resources.TextAppearance getTextAppearance()
    public void setTextAppearanceResource(int)
    public android.text.TextUtils$TruncateAt getEllipsize()
    public void setEllipsize(android.text.TextUtils$TruncateAt)
    public void setChipIconVisible(int)
    public android.graphics.drawable.Drawable getChipIcon()
    public void setChipIconResource(int)
    public android.content.res.ColorStateList getChipIconTint()
    public void setChipIconTintResource(int)
    public float getChipIconSize()
    public void setChipIconSizeResource(int)
    public boolean isCloseIconVisible()
    public void setCloseIconResource(int)
    public android.content.res.ColorStateList getCloseIconTint()
    public void setCloseIconTintResource(int)
    public float getCloseIconSize()
    public void setCloseIconSizeResource(int)
    public void setCloseIconContentDescription(java.lang.CharSequence)
    public java.lang.CharSequence getCloseIconContentDescription()
    public boolean isCheckable()
    public void setCheckableResource(int)
    public void setCheckedIconVisible(int)
    public android.graphics.drawable.Drawable getCheckedIcon()
    public void setCheckedIconResource(int)
    public com.google.android.material.animation.MotionSpec getShowMotionSpec()
    public void setShowMotionSpecResource(int)
    public void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
    public com.google.android.material.animation.MotionSpec getHideMotionSpec()
    public void setHideMotionSpecResource(int)
    public void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
    public float getChipStartPadding()
    public void setChipStartPaddingResource(int)
    public float getIconStartPadding()
    public void setIconStartPaddingResource(int)
    public float getIconEndPadding()
    public void setIconEndPaddingResource(int)
    public float getTextStartPadding()
    public void setTextStartPaddingResource(int)
    public float getTextEndPadding()
    public void setTextEndPaddingResource(int)
    public float getCloseIconStartPadding()
    public void setCloseIconStartPaddingResource(int)
    public float getCloseIconEndPadding()
    public void setCloseIconEndPaddingResource(int)
    public float getChipEndPadding()
    public void setChipEndPaddingResource(int)
    public void setMaxWidth(int)
    public boolean shouldDrawText()
    public void setShouldDrawText(boolean)
    public final void loadFromAttributes(android.util.AttributeSet,int,int)
    public final boolean canShowCheckedIcon()
    public final void drawChipSurface(android.graphics.Canvas,android.graphics.Rect)
    public final void drawChipBackground(android.graphics.Canvas,android.graphics.Rect)
    public final void drawChipStroke(android.graphics.Canvas,android.graphics.Rect)
    public final void drawCompatRipple(android.graphics.Canvas,android.graphics.Rect)
    public final void drawChipIcon(android.graphics.Canvas,android.graphics.Rect)
    public final void drawCheckedIcon(android.graphics.Canvas,android.graphics.Rect)
    public final void drawText(android.graphics.Canvas,android.graphics.Rect)
    public final void drawCloseIcon(android.graphics.Canvas,android.graphics.Rect)
    public final void drawDebug(android.graphics.Canvas,android.graphics.Rect)
    public final float calculateTextCenterFromBaseline()
    public final void calculateTextBounds(android.graphics.Rect,android.graphics.RectF)
    public final void calculateChipTouchBounds(android.graphics.Rect,android.graphics.RectF)
    public final android.graphics.ColorFilter getTintColorFilter()
    public final void updateCompatRippleColor()
    public final void setChipSurfaceColor(android.content.res.ColorStateList)
    public final void updateFrameworkCloseIconRipple()
androidx.collection.SimpleArrayMap:
    public static int binarySearchHashes(int[],int,int)
    public void <init>(androidx.collection.SimpleArrayMap)
    public void putAll(androidx.collection.SimpleArrayMap)
androidx.core.graphics.TypefaceCompat:
    public static android.graphics.Typeface findFromCache(android.content.res.Resources,int,int)
    public static android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)
    public static android.graphics.Typeface getBestFontFromFamily(android.content.Context,android.graphics.Typeface,int)
kotlinx.coroutines.JobKt
androidx.appcompat.app.AlertController$AlertParams$2
android.support.v4.media.MediaDescriptionCompat:
    public java.lang.Object getMediaDescription()
androidx.media.AudioAttributesImplBase:
    public int getLegacyStreamType()
    public int getContentType()
    public int getUsage()
    public int getFlags()
kotlin.collections.ArraysKt___ArraysJvmKt
com.google.android.material.internal.ThemeEnforcement:
    public static varargs androidx.appcompat.widget.TintTypedArray obtainTintedStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int,int[])
    public static varargs boolean isCustomTextAppearanceValid(android.content.Context,android.util.AttributeSet,int[],int,int,int[])
    public static void checkAppCompatTheme(android.content.Context)
    public static void checkMaterialTheme(android.content.Context)
    public static boolean isTheme(android.content.Context,int[])
    public static int obtainAndroidThemeOverlayId(android.content.Context,android.util.AttributeSet)
    public static int obtainMaterialThemeOverlayId(android.content.Context,android.util.AttributeSet,int,int)
android.support.v4.media.session.ParcelableVolumeInfo$1:
    public android.support.v4.media.session.ParcelableVolumeInfo createFromParcel(android.os.Parcel)
    public android.support.v4.media.session.ParcelableVolumeInfo[] newArray(int)
androidx.cardview.widget.RoundRectDrawableWithShadow$RoundRectHelper:
    public abstract void drawRoundRect(android.graphics.Canvas,android.graphics.RectF,float,android.graphics.Paint)
com.google.android.material.appbar.AppBarLayout$2:
    public final synthetic com.google.android.material.appbar.AppBarLayout this$0
androidx.appcompat.app.AlertController$2:
    public void onScrollChange(androidx.core.widget.NestedScrollView,int,int,int,int)
    public final synthetic androidx.appcompat.app.AlertController this$0
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator:
    public int updateFrames(android.graphics.drawable.AnimationDrawable,boolean)
    public int getTotalDuration()
androidx.appcompat.widget.DrawableUtils:
    public static void fixVectorDrawableTinting(android.graphics.drawable.Drawable)
    public static final android.graphics.Rect INSETS_NONE
    public static java.lang.Class sInsetsClazz
androidx.core.app.ComponentActivity:
    public androidx.collection.SimpleArrayMap mExtraDataMap
androidx.databinding.ObservableList$OnListChangedCallback
androidx.core.widget.NestedScrollView$SavedState$1:
    public androidx.core.widget.NestedScrollView$SavedState createFromParcel(android.os.Parcel)
    public androidx.core.widget.NestedScrollView$SavedState[] newArray(int)
kotlin.internal.ProgressionUtilKt
androidx.lifecycle.MediatorLiveData$Source:
    public void unplug()
com.google.android.material.datepicker.Month$1:
    public com.google.android.material.datepicker.Month createFromParcel(android.os.Parcel)
    public com.google.android.material.datepicker.Month[] newArray(int)
androidx.activity.OnBackPressedCallback:
    public final void setEnabled(boolean)
    public final boolean isEnabled()
    public void addCancellable(androidx.activity.Cancellable)
    public void removeCancellable(androidx.activity.Cancellable)
android.support.v4.media.session.PlaybackStateCompat:
    public void <init>(int,long,long,float,long,int,java.lang.CharSequence,long,java.util.List,long,android.os.Bundle)
    public static android.support.v4.media.session.PlaybackStateCompat fromPlaybackState(java.lang.Object)
    public java.lang.Object mStateObj
androidx.transition.ChangeBounds$2:
    public void set(androidx.transition.ChangeBounds$ViewBounds,android.graphics.PointF)
    public android.graphics.PointF get()
kotlin.ranges.IntProgressionIterator:
    public int nextInt()
androidx.savedstate.Recreator:
    public final void reflectiveNew(java.lang.String)
androidx.transition.ViewUtilsApi23:
    public static void <clinit>()
kotlin.random.FallbackThreadLocalRandom:
    public java.util.Random getImpl()
com.google.android.material.snackbar.SnackbarManager$SnackbarRecord:
    public boolean isSnackbar(com.google.android.material.snackbar.SnackbarManager$Callback)
    public int duration
    public boolean paused
com.google.android.material.shape.MaterialShapeUtils
androidx.appcompat.widget.Toolbar$SavedState$1:
    public androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel)
    public androidx.appcompat.widget.Toolbar$SavedState[] newArray(int)
androidx.savedstate.SavedStateRegistryController:
    public static androidx.savedstate.SavedStateRegistryController create(androidx.savedstate.SavedStateRegistryOwner)
    public androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
androidx.versionedparcelable.VersionedParcelParcel:
    public void writeByteArray(byte[])
    public void writeInt(int)
    public void writeString(java.lang.String)
    public void writeParcelable(android.os.Parcelable)
    public void writeBoolean(boolean)
    public void writeCharSequence(java.lang.CharSequence)
    public java.lang.CharSequence readCharSequence()
    public int readInt()
    public java.lang.String readString()
    public byte[] readByteArray()
    public android.os.Parcelable readParcelable()
    public boolean readBoolean()
androidx.navigation.fragment.FragmentNavigator$Extras:
    public java.util.Map getSharedElements()
    public final java.util.LinkedHashMap mSharedElements
androidx.collection.ArrayMap:
    public boolean retainAll(java.util.Collection)
kotlinx.coroutines.Job
androidx.appcompat.app.AppCompatDelegateImpl$5:
    public void onAttachedFromWindow()
    public void onDetachedFromWindow()
androidx.core.widget.TextViewCompat$OreoCallback:
    public final void recomputeProcessTextMenuItems(android.view.Menu)
    public final java.util.List getSupportedActivities(android.content.Context,android.content.pm.PackageManager)
    public final boolean isSupportedActivity(android.content.pm.ResolveInfo,android.content.Context)
    public final android.content.Intent createProcessTextIntentForResolveInfo(android.content.pm.ResolveInfo,android.widget.TextView)
    public final boolean isEditable(android.widget.TextView)
    public final android.content.Intent createProcessTextIntent()
com.google.android.material.datepicker.MaterialDatePicker:
    public static android.graphics.drawable.Drawable createHeaderToggleDrawable(android.content.Context)
    public static int getDialogPickerHeight(android.content.Context)
    public static synthetic java.util.LinkedHashSet access$000(com.google.android.material.datepicker.MaterialDatePicker)
    public static synthetic java.util.LinkedHashSet access$100(com.google.android.material.datepicker.MaterialDatePicker)
    public static synthetic com.google.android.material.datepicker.DateSelector access$300(com.google.android.material.datepicker.MaterialDatePicker)
    public static synthetic android.widget.Button access$400(com.google.android.material.datepicker.MaterialDatePicker)
    public static synthetic com.google.android.material.internal.CheckableImageButton access$500(com.google.android.material.datepicker.MaterialDatePicker)
    public static synthetic void access$600(com.google.android.material.datepicker.MaterialDatePicker,com.google.android.material.internal.CheckableImageButton)
    public static synthetic void access$700(com.google.android.material.datepicker.MaterialDatePicker)
    public java.lang.String getHeaderText()
    public final java.lang.Object getSelection()
    public final int getThemeResId(android.content.Context)
    public final void initHeaderToggle(android.content.Context)
com.google.android.material.appbar.ViewOffsetHelper:
    public void onViewLayout()
    public boolean setTopAndBottomOffset(int)
    public boolean setLeftAndRightOffset(int)
    public int getTopAndBottomOffset()
kotlin.jvm.JvmClassMappingKt
com.google.android.material.bottomappbar.BottomAppBar:
    public static synthetic int access$000(com.google.android.material.bottomappbar.BottomAppBar)
    public static synthetic boolean access$100(com.google.android.material.bottomappbar.BottomAppBar)
    public static synthetic void access$200(com.google.android.material.bottomappbar.BottomAppBar,int,boolean)
    public static synthetic com.google.android.material.shape.MaterialShapeDrawable access$300(com.google.android.material.bottomappbar.BottomAppBar)
    public static synthetic int access$502(com.google.android.material.bottomappbar.BottomAppBar,int)
    public static synthetic void access$600(com.google.android.material.bottomappbar.BottomAppBar)
    public static synthetic android.animation.Animator access$902(com.google.android.material.bottomappbar.BottomAppBar,android.animation.Animator)
    public static synthetic com.google.android.material.floatingactionbutton.FloatingActionButton access$1100(com.google.android.material.bottomappbar.BottomAppBar)
    public static synthetic void access$1800(com.google.android.material.bottomappbar.BottomAppBar,com.google.android.material.floatingactionbutton.FloatingActionButton)
    public static synthetic void access$1900(com.google.android.material.bottomappbar.BottomAppBar)
    public void createFabDefaultXAnimation(int)
    public final void dispatchAnimationStart()
    public final void dispatchAnimationEnd()
    public final void maybeAnimateModeChange(int)
    public final void createFabTranslationXAnimation(int,java.util.List)
    public final void createMenuViewTranslationAnimation(int,boolean,java.util.List)
    public final void translateActionMenuView(androidx.appcompat.widget.ActionMenuView,int,boolean)
    public final void cancelAnimations()
    public final void setActionMenuViewPosition()
    public final void addFabAnimationListeners(com.google.android.material.floatingactionbutton.FloatingActionButton)
    public java.util.ArrayList animationListeners
com.google.android.material.behavior.HideBottomViewOnScrollBehavior:
    public static synthetic android.view.ViewPropertyAnimator access$002(com.google.android.material.behavior.HideBottomViewOnScrollBehavior,android.view.ViewPropertyAnimator)
    public void setAdditionalHiddenOffsetY(android.view.View,int)
    public void slideUp(android.view.View)
    public void slideDown(android.view.View)
androidx.transition.ViewGroupUtilsApi14
kotlin.LazyKt__LazyKt
androidx.recyclerview.widget.RecyclerView$5:
    public void addView(android.view.View,int)
    public int indexOfChild(android.view.View)
    public void removeAllViews()
    public androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View)
    public void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams)
    public void detachViewFromParent(int)
    public void onEnteredHiddenState(android.view.View)
    public void onLeftHiddenState(android.view.View)
com.google.android.material.button.MaterialButtonHelper:
    public void loadFromAttributes(android.content.res.TypedArray)
    public void setBackgroundOverwritten()
    public boolean isBackgroundOverwritten()
    public void setSupportBackgroundTintList(android.content.res.ColorStateList)
    public android.content.res.ColorStateList getSupportBackgroundTintList()
    public void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
    public android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
    public void setShouldDrawSurfaceColorStroke(boolean)
    public void updateMaskBounds(int,int)
    public void setBackgroundColor(int)
    public void setRippleColor(android.content.res.ColorStateList)
    public android.content.res.ColorStateList getRippleColor()
    public void setStrokeColor(android.content.res.ColorStateList)
    public android.content.res.ColorStateList getStrokeColor()
    public void setStrokeWidth(int)
    public int getStrokeWidth()
    public void setCornerRadius(int)
    public int getCornerRadius()
    public void setCheckable(boolean)
    public boolean isCheckable()
    public com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
    public final android.graphics.drawable.InsetDrawable wrapDrawableWithInset(android.graphics.drawable.Drawable)
    public final android.graphics.drawable.Drawable createBackground()
    public final void updateButtonShape(com.google.android.material.shape.ShapeAppearanceModel)
com.google.android.material.internal.TextDrawableHelper:
    public static synthetic boolean access$002(com.google.android.material.internal.TextDrawableHelper,boolean)
    public static synthetic java.lang.ref.WeakReference access$100(com.google.android.material.internal.TextDrawableHelper)
    public void setDelegate(com.google.android.material.internal.TextDrawableHelper$TextDrawableDelegate)
    public android.text.TextPaint getTextPaint()
    public void setTextWidthDirty(boolean)
    public com.google.android.material.resources.TextAppearance getTextAppearance()
    public void setTextAppearance(com.google.android.material.resources.TextAppearance,android.content.Context)
    public void updateTextPaintDrawState(android.content.Context)
    public final float calculateTextWidth(java.lang.CharSequence)
androidx.recyclerview.widget.LinearSnapHelper:
    public int findTargetSnapPosition(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int)
    public final float computeDistancePerChild(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper)
androidx.appcompat.view.ContextThemeWrapper:
    public void <init>(android.content.Context,android.content.res.Resources$Theme)
    public int getThemeResId()
    public void onApplyThemeResource(android.content.res.Resources$Theme,int)
    public final android.content.res.Resources getResourcesInternal()
    public android.content.res.Configuration mOverrideConfiguration
androidx.appcompat.widget.AppCompatDrawableManager$1:
    public android.graphics.drawable.Drawable createDrawableFor(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)
    public boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)
    public boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)
    public android.graphics.PorterDuff$Mode getTintModeForDrawableRes(int)
    public final android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context)
    public final android.content.res.ColorStateList createBorderlessButtonColorStateList(android.content.Context)
    public final android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context)
    public final android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context)
androidx.fragment.app.FragmentTransitionCompat21$5:
    public final synthetic androidx.fragment.app.FragmentTransitionCompat21 this$0
com.google.android.material.appbar.HeaderBehavior:
    public final boolean fling(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,float)
    public abstract void onFlingFinished(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View)
    public abstract int getMaxDragOffset(android.view.View)
    public abstract int getScrollRangeForDragFling(android.view.View)
    public final void ensureVelocityTracker()
androidx.lifecycle.SavedStateHandle:
    public androidx.savedstate.SavedStateRegistry$SavedStateProvider savedStateProvider()
    public final java.util.Map mLiveDatas
    public static final java.lang.Class[] ACCEPTABLE_CLASSES
com.google.android.material.transformation.FabTransformationBehavior:
    public abstract com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec onCreateMotionSpec(android.content.Context,boolean)
    public final void createElevationAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List)
    public final void createDependencyTranslationAnimation(android.view.View,android.view.View,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List)
    public final void createTranslationAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,android.graphics.RectF)
    public final void createIconFadeAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List)
    public final void createExpansionAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,float,float,java.util.List,java.util.List)
    public final void createColorAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List)
    public final void createChildrenFadeAnimation(android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List)
    public final void calculateDependencyWindowBounds(android.view.View,android.graphics.RectF)
    public final float calculateRevealCenterX(android.view.View,android.view.View,com.google.android.material.animation.Positioning)
    public final float calculateRevealCenterY(android.view.View,android.view.View,com.google.android.material.animation.Positioning)
    public final void calculateChildVisibleBoundsAtEndOfExpansion(android.view.View,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,com.google.android.material.animation.MotionTiming,com.google.android.material.animation.MotionTiming,float,float,float,float,android.graphics.RectF)
    public final android.view.ViewGroup calculateChildContentContainer(android.view.View)
    public final int getBackgroundTint(android.view.View)
    public final void createPostFillRadialExpansion(android.view.View,long,long,long,int,int,float,java.util.List)
com.google.android.material.color.MaterialColors
com.google.android.material.textfield.CutoutDrawable:
    public boolean hasCutout()
    public void setCutout(android.graphics.RectF)
    public void removeCutout()
    public final void setPaintStyles()
    public final void preDraw(android.graphics.Canvas)
    public final void saveCanvasLayer(android.graphics.Canvas)
    public final void postDraw(android.graphics.Canvas)
    public final boolean useHardwareLayer(android.graphics.drawable.Drawable$Callback)
androidx.collection.SparseArrayCompat:
    public void removeAt(int)
    public int indexOfValue(java.lang.Object)
    public void clear()
androidx.navigation.fragment.DialogFragmentNavigator:
    public androidx.navigation.fragment.DialogFragmentNavigator$Destination createDestination()
    public androidx.navigation.NavDestination navigate(androidx.navigation.fragment.DialogFragmentNavigator$Destination,android.os.Bundle)
androidx.databinding.ViewDataBinding$5
com.google.android.material.shape.MaterialShapeDrawable$2
androidx.navigation.NavType$5:
    public void put(android.os.Bundle,java.lang.String,long[])
    public long[] get(android.os.Bundle,java.lang.String)
    public long[] parseValue()
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks
androidx.cardview.widget.RoundRectDrawable:
    public void setPadding(float,boolean,boolean)
    public float getPadding()
    public void setRadius(float)
    public float getRadius()
    public void setColor(android.content.res.ColorStateList)
    public android.content.res.ColorStateList getColor()
    public final void setBackground(android.content.res.ColorStateList)
    public final android.graphics.Paint mPaint
    public final android.graphics.RectF mBoundsF
    public final android.graphics.Rect mBoundsI
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver:
    public java.lang.ref.WeakReference mMediaControllerImpl
androidx.core.util.DebugUtils
kotlin.ranges.IntProgression:
    public static void <clinit>()
    public final int getFirst()
    public final int getLast()
    public kotlin.collections.IntIterator iterator()
    public static final kotlin.ranges.IntProgression$Companion Companion
androidx.navigation.NavInflater:
    public final void inflateArgumentForDestination(android.content.res.Resources,androidx.navigation.NavDestination,android.util.AttributeSet,int)
    public final void inflateArgumentForBundle(android.content.res.Resources,android.os.Bundle,android.util.AttributeSet,int)
    public final void inflateDeepLink(android.content.res.Resources,androidx.navigation.NavDestination,android.util.AttributeSet)
    public final void inflateAction(android.content.res.Resources,androidx.navigation.NavDestination,android.util.AttributeSet,android.content.res.XmlResourceParser,int)
android.support.v4.media.session.MediaControllerCompat$Callback$MessageHandler
com.google.android.material.checkbox.MaterialCheckBox:
    public void <init>(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition:
    public void <init>()
android.support.v4.media.session.PlaybackStateCompatApi21
androidx.collection.LongSparseArray:
    public void <init>(int)
    public void delete(long)
    public void remove(long)
    public void removeAt(int)
    public long keyAt(int)
    public int indexOfKey(long)
androidx.core.graphics.drawable.WrappedDrawableState:
    public boolean canConstantState()
androidx.drawerlayout.widget.DrawerLayout$DrawerListener:
    public abstract void onDrawerOpened(android.view.View)
    public abstract void onDrawerClosed(android.view.View)
    public abstract void onDrawerStateChanged(int)
com.google.android.material.animation.ChildrenAlphaProperty:
    public java.lang.Float get(android.view.ViewGroup)
    public void set(android.view.ViewGroup,java.lang.Float)
com.google.android.material.transformation.FabTransformationBehavior$4:
    public final synthetic com.google.android.material.transformation.FabTransformationBehavior this$0
androidx.core.view.ActionProvider$SubUiVisibilityListener
androidx.appcompat.view.menu.MenuAdapter:
    public void setForceShowIcon(boolean)
    public androidx.appcompat.view.menu.MenuBuilder getAdapterMenu()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState:
    public void drawCachedBitmapWithRootAlpha(android.graphics.Canvas,android.graphics.ColorFilter,android.graphics.Rect)
    public boolean hasTranslucentRoot()
    public android.graphics.Paint getPaint(android.graphics.ColorFilter)
    public void createCachedBitmapIfNeeded(int,int)
    public boolean canReuseBitmap(int,int)
    public boolean canReuseCache()
    public void updateCacheStates()
    public boolean onStateChanged(int[])
com.google.android.material.snackbar.SnackbarContentLayout:
    public static void updateTopBottomPadding(android.view.View,int,int)
androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener:
    public abstract boolean onMenuItemClick(android.view.MenuItem)
com.google.android.material.internal.FlowLayout:
    public static int getMeasuredDimension(int,int,int)
com.google.android.material.bottomsheet.BottomSheetDialog$3:
    public final synthetic com.google.android.material.bottomsheet.BottomSheetDialog this$0
com.czluciusdev.diceroller.databinding.DiceFragmentBindingImpl:
    public void <init>(androidx.databinding.DataBindingComponent,android.view.View,java.lang.Object[])
    public void invalidateAll()
    public boolean hasPendingBindings()
    public boolean onFieldChange(int,java.lang.Object,int)
    public void executeBindings()
    public final boolean onChangeVmDiceNumberString(int)
    public static final androidx.databinding.ViewDataBinding$IncludedLayouts sIncludes
com.google.android.material.shape.ShapePath$ShadowCompatOperation:
    public final void draw(com.google.android.material.shadow.ShadowRenderer,int,android.graphics.Canvas)
androidx.appcompat.view.SupportMenuInflater:
    public java.lang.Object getRealOwner()
androidx.appcompat.widget.TintTypedArray:
    public static androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,int,int[])
    public float getFloat(int,float)
    public int getInteger(int,int)
    public java.lang.CharSequence[] getTextArray(int)
    public void recycle()
androidx.core.graphics.PathParser$PathDataNode:
    public static void addCommand(android.graphics.Path,float[],char,char,float[])
    public static void arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double)
    public void interpolatePathDataNode(androidx.core.graphics.PathParser$PathDataNode,androidx.core.graphics.PathParser$PathDataNode,float)
android.support.v4.media.MediaDescriptionCompatApi23
androidx.appcompat.view.menu.MenuDialogHelper:
    public void show(android.os.IBinder)
    public void dismiss()
    public androidx.appcompat.view.menu.MenuPresenter$Callback mPresenterCallback
androidx.transition.Scene:
    public static void setCurrentScene(android.view.ViewGroup,androidx.transition.Scene)
    public static androidx.transition.Scene getCurrentScene(android.view.ViewGroup)
    public void exit()
    public android.view.ViewGroup mSceneRoot
    public java.lang.Runnable mExitAction
androidx.navigation.NavBackStackEntry:
    public static androidx.lifecycle.Lifecycle$State getStateAfter(androidx.lifecycle.Lifecycle$Event)
    public androidx.navigation.NavDestination getDestination()
    public android.os.Bundle getArguments()
    public void setMaxLifecycle(androidx.lifecycle.Lifecycle$State)
    public androidx.lifecycle.Lifecycle$State getMaxLifecycle()
    public void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)
    public void saveState(android.os.Bundle)
    public final android.content.Context mContext
androidx.lifecycle.Lifecycling:
    public static java.lang.reflect.Constructor generatedConstructor(java.lang.Class)
    public static int resolveObserverCallbackType(java.lang.Class)
    public static boolean isLifecycleParent(java.lang.Class)
androidx.lifecycle.FullLifecycleObserverAdapter$1
androidx.appcompat.app.TwilightCalculator:
    public static androidx.appcompat.app.TwilightCalculator getInstance()
androidx.transition.ViewUtilsApi22:
    public static void <clinit>()
androidx.appcompat.graphics.drawable.StateListDrawable:
    public int[] extractStateSet(android.util.AttributeSet)
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealEvaluator:
    public com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo evaluate(float,com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo,com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
androidx.core.app.ActivityCompat$PermissionCompatDelegate
androidx.appcompat.widget.AppCompatTextHelper:
    public void setTypefaceByCallback(android.graphics.Typeface)
    public void runOnUiThread(java.lang.Runnable)
    public void setAllCaps(boolean)
    public void onSetCompoundDrawables()
    public void onLayout()
    public void setTextSize(int,float)
    public void autoSizeText()
    public int getAutoSizeTextType()
    public int getAutoSizeStepGranularity()
    public int getAutoSizeMinTextSize()
    public int getAutoSizeMaxTextSize()
    public int[] getAutoSizeTextAvailableSizes()
    public android.content.res.ColorStateList getCompoundDrawableTintList()
    public void setCompoundDrawableTintList(android.content.res.ColorStateList)
    public android.graphics.PorterDuff$Mode getCompoundDrawableTintMode()
    public void setCompoundDrawableTintMode(android.graphics.PorterDuff$Mode)
    public final void setTextSizeInternal(int,float)
    public final void setCompoundTints()
    public final void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.core.widget.ImageViewCompat
androidx.navigation.NavController:
    public android.content.Context getContext()
    public androidx.navigation.NavigatorProvider getNavigatorProvider()
    public void addOnDestinationChangedListener(androidx.navigation.NavController$OnDestinationChangedListener)
    public void removeOnDestinationChangedListener(androidx.navigation.NavController$OnDestinationChangedListener)
    public boolean popBackStack(int,boolean)
    public boolean navigateUp()
    public androidx.navigation.NavInflater getNavInflater()
    public void setGraph(int)
    public void setGraph(androidx.navigation.NavGraph,android.os.Bundle)
    public boolean handleDeepLink(android.content.Intent)
    public androidx.navigation.NavGraph getGraph()
    public void navigate(int)
    public void navigate(int,android.os.Bundle)
    public void navigate(int,android.os.Bundle,androidx.navigation.NavOptions)
    public void navigate(int,android.os.Bundle,androidx.navigation.NavOptions,androidx.navigation.Navigator$Extras)
    public android.os.Bundle saveState()
    public void restoreState(android.os.Bundle)
    public void setLifecycleOwner(androidx.lifecycle.LifecycleOwner)
    public void setOnBackPressedDispatcher(androidx.activity.OnBackPressedDispatcher)
    public void enableOnBackPressed(boolean)
    public void setViewModelStore(androidx.lifecycle.ViewModelStore)
    public final void onGraphCreated(android.os.Bundle)
    public final java.lang.String findInvalidDestinationDisplayNameInDeepLink(int[])
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath:
    public void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)
    public final android.graphics.Paint$Cap getStrokeLineCap(int,android.graphics.Paint$Cap)
    public final android.graphics.Paint$Join getStrokeLineJoin(int,android.graphics.Paint$Join)
    public final void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)
androidx.appcompat.widget.TooltipCompatHandler:
    public static void setTooltipText(android.view.View,java.lang.CharSequence)
    public final void scheduleShow()
    public final void cancelPendingShow()
    public final boolean updateAnchorPos(android.view.MotionEvent)
androidx.constraintlayout.solver.widgets.Analyzer
androidx.appcompat.graphics.drawable.DrawableContainer:
    public boolean onStateChange(int[])
    public int getCurrentIndex()
    public final void updateDensity(android.content.res.Resources)
    public void applyTheme(android.content.res.Resources$Theme)
    public final boolean needsMirroring()
    public int mLastIndex
androidx.constraintlayout.solver.widgets.Snapshot:
    public void updateFrom(androidx.constraintlayout.solver.widgets.ConstraintWidget)
    public void applyTo(androidx.constraintlayout.solver.widgets.ConstraintWidget)
androidx.fragment.app.FragmentStateManager:
    public androidx.fragment.app.Fragment getFragment()
    public void setFragmentManagerState(int)
    public int computeMaxState()
    public void ensureInflatedView()
    public void attach(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
    public void create()
    public void createView(androidx.fragment.app.FragmentContainer)
    public void activityCreated()
    public void restoreViewState()
    public void start()
    public void resume()
    public void pause()
    public void stop()
    public androidx.fragment.app.FragmentState saveState()
    public void destroy(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentManagerViewModel)
    public void detach(androidx.fragment.app.FragmentManagerViewModel)
    public final android.os.Bundle saveBasicState()
kotlin.jvm.internal.CallableReference:
    public void <init>(java.lang.Object)
    public abstract kotlin.reflect.KCallable computeReflected()
    public java.lang.Object getBoundReceiver()
    public kotlin.reflect.KCallable compute()
    public kotlin.reflect.KDeclarationContainer getOwner()
    public java.lang.String getName()
    public java.lang.String getSignature()
androidx.constraintlayout.solver.widgets.ResolutionNode:
    public void addDependent(androidx.constraintlayout.solver.widgets.ResolutionNode)
    public void reset()
androidx.navigation.NavType$SerializableArrayType:
    public void put(android.os.Bundle,java.lang.String,java.io.Serializable[])
    public java.io.Serializable[] get(android.os.Bundle,java.lang.String)
    public java.io.Serializable[] parseValue()
androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener
kotlin.text.StringsKt__StringNumberConversionsKt
androidx.customview.widget.ViewDragHelper:
    public static androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,androidx.customview.widget.ViewDragHelper$Callback)
    public static androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,float,androidx.customview.widget.ViewDragHelper$Callback)
    public int getViewDragState()
    public int getEdgeSize()
    public int getTouchSlop()
    public boolean checkTouchSlop(int)
    public boolean checkTouchSlop(int,int)
    public boolean isCapturedViewUnder(int,int)
    public boolean isViewUnder(android.view.View,int,int)
    public final int computeSettleDuration(android.view.View,int,int,int,int)
    public final float distanceInfluenceForSnapDuration(float)
    public final void clearMotionHistory()
    public final void ensureMotionHistorySizeForId(int)
    public final void dragTo(int,int,int,int)
    public final int getEdgesTouched(int,int)
    public int mTrackingEdges
androidx.cardview.widget.RoundRectDrawableWithShadow:
    public void setAddPaddingForCorners(boolean)
    public void setCornerRadius(float)
    public float getCornerRadius()
    public void getMaxShadowAndCornerPadding(android.graphics.Rect)
    public void setShadowSize(float)
    public void setMaxShadowSize(float)
    public float getShadowSize()
    public float getMaxShadowSize()
    public float getMinWidth()
    public float getMinHeight()
    public void setColor(android.content.res.ColorStateList)
    public android.content.res.ColorStateList getColor()
    public final void setBackground(android.content.res.ColorStateList)
    public final int toEven(float)
    public final void setShadowSize(float,float)
    public final void drawShadow(android.graphics.Canvas)
    public final void buildShadowCorners()
    public final void buildComponents(android.graphics.Rect)
    public final int mInsetShadow
    public android.graphics.Paint mPaint
    public android.graphics.Paint mCornerShadowPaint
    public android.graphics.Paint mEdgeShadowPaint
    public final android.graphics.RectF mCardBounds
    public android.graphics.Path mCornerShadowPath
    public float mShadowSize
    public final int mShadowStartColor
    public final int mShadowEndColor
    public boolean mPrintedShadowClipWarning
androidx.navigation.NavigatorProvider:
    public androidx.navigation.Navigator addNavigator(java.lang.String,androidx.navigation.Navigator)
    public java.util.Map getNavigators()
androidx.appcompat.widget.SearchView$OnSuggestionListener:
    public abstract boolean onSuggestionSelect(int)
    public abstract boolean onSuggestionClick(int)
androidx.appcompat.widget.LinearLayoutCompat:
    public void drawDividersVertical(android.graphics.Canvas)
    public void drawDividersHorizontal(android.graphics.Canvas)
    public android.view.View getVirtualChildAt(int)
    public void measureVertical(int,int)
    public void measureHorizontal(int,int)
    public int getChildrenSkipCount()
    public int measureNullChild()
    public int getLocationOffset()
    public int getNextLocationOffset()
    public void layoutVertical(int,int,int,int)
    public void layoutHorizontal(int,int,int,int)
    public final void setChildFrame(android.view.View,int,int,int,int)
androidx.transition.ChangeBounds$3:
    public void set(androidx.transition.ChangeBounds$ViewBounds,android.graphics.PointF)
    public android.graphics.PointF get()
androidx.recyclerview.widget.RecyclerView$4:
    public void processDisappeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public void processAppeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public void processPersistent(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public void unused(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat:
    public void inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    public androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState cloneConstantState()
    public final boolean selectTransition(int)
    public final void updateStateFromTypedArray(android.content.res.TypedArray)
    public final void init()
    public final void inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    public final int parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    public final int parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    public static final java.lang.String LOGTAG
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams:
    public int getAnchorId()
    public androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
    public void setBehavior(androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior)
    public void setLastChildRect(android.graphics.Rect)
    public android.graphics.Rect getLastChildRect()
    public boolean checkAnchorChanged()
    public boolean didBlockInteraction()
    public boolean isBlockingInteractionBelow(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View)
    public void resetTouchBehaviorTracking()
    public void resetNestedScroll(int)
    public boolean getChangedAfterNestedScroll()
    public void setChangedAfterNestedScroll(boolean)
    public void resetChangedAfterNestedScroll()
    public boolean dependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View)
    public android.view.View findAnchorView(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View)
    public final void resolveAnchorView(android.view.View,androidx.coordinatorlayout.widget.CoordinatorLayout)
    public final boolean verifyAnchorView(android.view.View,androidx.coordinatorlayout.widget.CoordinatorLayout)
    public final boolean shouldDodge(android.view.View,int)
    public java.lang.Object mBehaviorTag
androidx.navigation.fragment.FragmentNavigator$Destination:
    public final androidx.navigation.fragment.FragmentNavigator$Destination setClassName(java.lang.String)
    public final java.lang.String getClassName()
androidx.transition.ViewGroupOverlayApi14:
    public static androidx.transition.ViewGroupOverlayApi14 createFrom(android.view.ViewGroup)
android.support.v4.media.MediaBrowserCompat$MediaItem$1:
    public android.support.v4.media.MediaBrowserCompat$MediaItem createFromParcel(android.os.Parcel)
    public android.support.v4.media.MediaBrowserCompat$MediaItem[] newArray(int)
androidx.core.graphics.PathParser$ExtractFloatResult
androidx.cardview.widget.CardViewApi17Impl$1:
    public void drawRoundRect(android.graphics.Canvas,android.graphics.RectF,float,android.graphics.Paint)
    public final synthetic androidx.cardview.widget.CardViewApi17Impl this$0
com.google.android.material.canvas.CanvasCompat
androidx.core.provider.SelfDestructiveThread:
    public void postAndReply(java.util.concurrent.Callable,androidx.core.provider.SelfDestructiveThread$ReplyCallback)
    public void onInvokeRunnable(java.lang.Runnable)
    public void onDestruction()
android.support.v4.media.session.MediaControllerCompatApi21
androidx.appcompat.widget.ContentFrameLayout:
    public void setDecorPadding(int,int,int,int)
androidx.appcompat.widget.AppCompatTextClassifierHelper:
    public void setTextClassifier(android.view.textclassifier.TextClassifier)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener:
    public abstract void onShown()
    public abstract void onHidden()
androidx.appcompat.app.TwilightManager:
    public static androidx.appcompat.app.TwilightManager getInstance(android.content.Context)
    public boolean isNight()
    public final android.location.Location getLastKnownLocation()
    public final boolean isStateValid()
    public final void updateState(android.location.Location)
com.google.android.material.shape.ShapeAppearancePathProvider$PathListener:
    public abstract void onCornerPathCreated(com.google.android.material.shape.ShapePath,android.graphics.Matrix,int)
    public abstract void onEdgePathCreated(com.google.android.material.shape.ShapePath,android.graphics.Matrix,int)
androidx.transition.ChangeBounds:
    public final boolean parentMatches(android.view.View,android.view.View)
kotlin.collections.IntIterator:
    public final java.lang.Integer next()
    public abstract int nextInt()
androidx.appcompat.widget.VectorEnabledTintResources:
    public void <init>(android.content.Context,android.content.res.Resources)
    public static boolean isCompatVectorFromResourcesEnabled()
    public static void <clinit>()
    public android.graphics.drawable.Drawable getDrawable(int)
    public final android.graphics.drawable.Drawable superGetDrawable(int)
    public final java.lang.ref.WeakReference mContextRef
    public static boolean sCompatVectorFromResourcesEnabled
androidx.constraintlayout.solver.widgets.Snapshot$Connection:
    public void updateFrom(androidx.constraintlayout.solver.widgets.ConstraintWidget)
    public void applyTo(androidx.constraintlayout.solver.widgets.ConstraintWidget)
com.google.android.material.resources.CancelableFontCallback:
    public void cancel()
androidx.collection.MapCollections$MapIterator:
    public java.util.Map$Entry next()
android.support.v4.media.MediaDescriptionCompatApi21$Builder:
    public static java.lang.Object newInstance()
    public static void setMediaId(java.lang.Object,java.lang.String)
    public static void setTitle(java.lang.Object,java.lang.CharSequence)
    public static void setSubtitle(java.lang.Object,java.lang.CharSequence)
    public static void setDescription(java.lang.Object,java.lang.CharSequence)
    public static void setIconBitmap(java.lang.Object,android.graphics.Bitmap)
    public static void setIconUri(java.lang.Object,android.net.Uri)
    public static void setExtras(java.lang.Object,android.os.Bundle)
    public static java.lang.Object build(java.lang.Object)
    public static java.lang.String getMediaId(java.lang.Object)
    public static java.lang.CharSequence getTitle(java.lang.Object)
    public static java.lang.CharSequence getSubtitle(java.lang.Object)
    public static java.lang.CharSequence getDescription(java.lang.Object)
    public static android.graphics.Bitmap getIconBitmap(java.lang.Object)
    public static android.net.Uri getIconUri(java.lang.Object)
    public static android.os.Bundle getExtras(java.lang.Object)
    public static void writeToParcel(java.lang.Object,android.os.Parcel,int)
    public static java.lang.Object fromParcel(android.os.Parcel)
    public static void setMediaUri(java.lang.Object,android.net.Uri)
    public static android.net.Uri getMediaUri(java.lang.Object)
    public static void writeToParcel1(java.lang.Object,android.os.Parcel,int)
    public static android.media.AudioAttributes getAudioAttributes(java.lang.Object)
    public static int getLegacyAudioStream(java.lang.Object)
    public static int toLegacyStreamType(android.media.AudioAttributes)
    public static java.lang.Object createCallback(android.support.v4.media.session.MediaControllerCompatApi21$Callback)
    public static java.lang.Object getDescription(java.lang.Object)
    public static long getQueueId(java.lang.Object)
    public static java.lang.String getAction(java.lang.Object)
    public static java.lang.CharSequence getName(java.lang.Object)
    public static int getIcon(java.lang.Object)
    public static android.os.Bundle getExtras1(java.lang.Object)
    public static int getState(java.lang.Object)
    public static long getPosition(java.lang.Object)
    public static long getBufferedPosition(java.lang.Object)
    public static float getPlaybackSpeed(java.lang.Object)
    public static long getActions(java.lang.Object)
    public static java.lang.CharSequence getErrorMessage(java.lang.Object)
    public static long getLastPositionUpdateTime(java.lang.Object)
    public static java.util.List getCustomActions(java.lang.Object)
    public static long getActiveQueueItemId(java.lang.Object)
    public static android.os.Bundle getExtras2(java.lang.Object)
    public static void flush(android.content.res.Resources)
    public static void flushLollipops(android.content.res.Resources)
    public static void flushMarshmallows(android.content.res.Resources)
    public static void flushNougats(android.content.res.Resources)
    public static boolean determineGroups(androidx.constraintlayout.solver.widgets.ConstraintWidget,java.util.List,boolean)
    public static void invalidate(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintWidgetGroup)
    public static void setConnection(androidx.constraintlayout.solver.widgets.ConstraintAnchor)
    public static void singleGroup(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer)
    public static void updateSizeDependentWidgets(androidx.constraintlayout.solver.widgets.ConstraintWidget,int,int)
    public static java.lang.String permissionToOp(java.lang.String)
    public static int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)
    public static android.os.IBinder getBinder(android.os.Bundle,java.lang.String)
    public static android.os.IBinder getBinder1(android.os.Bundle,java.lang.String)
    public static boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent)
    public static void navigateUpTo(android.app.Activity,android.content.Intent)
    public static java.lang.String getParentActivityName(android.app.Activity)
    public static int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)
    public static android.content.res.ColorStateList inflate(android.content.res.Resources,int,android.content.res.Resources$Theme)
    public static android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    public static android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])
    public static int modulateColorAlpha(int,float)
    public static androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamilies(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)
    public static androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)
    public static int getType(android.content.res.TypedArray,int)
    public static androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry readFont(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)
    public static android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    public static androidx.core.content.res.GradientColorInflaterCompat$ColorStops inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    public static androidx.core.content.res.GradientColorInflaterCompat$ColorStops checkColors(androidx.core.content.res.GradientColorInflaterCompat$ColorStops,int,int,boolean,int)
    public static android.graphics.Shader$TileMode parseTileMode(int)
    public static android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)
    public static android.graphics.Typeface getFont(android.content.Context,int)
    public static void getFont(android.content.Context,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler)
    public static android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback)
    public static android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)
    public static boolean getNamedBoolean(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,boolean)
    public static android.content.res.ColorStateList getNamedColorStateList(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int)
    public static android.content.res.ColorStateList getNamedColorStateListFromInt(android.util.TypedValue)
    public static int getNamedResourceId(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)
    public static android.util.TypedValue peekNamedValue(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int)
    public static void updateNodes(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[])
    public static int nextStart(java.lang.String,int)
    public static void addNode(java.util.ArrayList,char,float[])
    public static float[] getFloats(java.lang.String)
    public static void extract(java.lang.String,int,androidx.core.graphics.PathParser$ExtractFloatResult)
    public static java.nio.ByteBuffer mmap(java.io.File)
    public static java.nio.ByteBuffer copyToDirectBuffer(android.content.Context,android.content.res.Resources,int)
    public static void closeQuietly(java.io.Closeable)
    public static void jumpToCurrentState(android.graphics.drawable.Drawable)
    public static int getAlpha(android.graphics.drawable.Drawable)
    public static void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme)
    public static boolean canApplyTheme(android.graphics.drawable.Drawable)
    public static android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable)
    public static void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    public static android.graphics.drawable.Drawable unwrap(android.graphics.drawable.Drawable)
    public static float clamp(float,float,float)
    public static void checkArgument(boolean,java.lang.Object)
    public static void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int)
    public static android.view.MenuItem setActionProvider(android.view.MenuItem,androidx.core.view.ActionProvider)
    public static void setContentDescription(android.view.MenuItem,java.lang.CharSequence)
    public static void setTooltipText(android.view.MenuItem,java.lang.CharSequence)
    public static void setNumericShortcut(android.view.MenuItem,char,int)
    public static void setAlphabeticShortcut(android.view.MenuItem,char,int)
    public static void setIconTintList(android.view.MenuItem,android.content.res.ColorStateList)
    public static void setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode)
    public static boolean isFromSource(android.view.MotionEvent,int)
    public static boolean isTransitionGroup(android.view.ViewGroup)
    public static boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent)
    public static boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)
    public static void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int,int)
    public static void onStopNestedScroll(android.view.ViewParent,android.view.View,int)
    public static void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int,int,int[])
    public static void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[],int)
    public static boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)
    public static boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float)
    public static void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)
    public static int getContentChangeTypes(android.view.accessibility.AccessibilityEvent)
    public static void setSource(android.view.accessibility.AccessibilityRecord,android.view.View,int)
    public static void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int)
    public static void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int)
    public static void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode)
    public static android.content.res.ColorStateList getImageTintList(android.widget.ImageView)
    public static void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList)
    public static android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView)
    public static void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode)
    public static void scrollListBy(android.widget.ListView,int)
    public static void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int)
    public static int getFirstBaselineToTopHeight(android.widget.TextView)
    public static int getLastBaselineToBottomHeight(android.widget.TextView)
    public static void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params)
    public static android.text.TextDirectionHeuristic getTextDirectionHeuristic(android.widget.TextView)
    public static int getTextDirection(android.text.TextDirectionHeuristic)
    public static void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList)
    public static void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode)
    public static java.lang.Object findNextFocusInRelativeDirection(java.lang.Object,androidx.customview.widget.FocusStrategy$CollectionAdapter,androidx.customview.widget.FocusStrategy$BoundsAdapter,java.lang.Object,int,boolean,boolean)
    public static java.lang.Object getNextFocusable(java.lang.Object,java.util.ArrayList,boolean)
    public static java.lang.Object getPreviousFocusable(java.lang.Object,java.util.ArrayList,boolean)
    public static java.lang.Object findNextFocusInAbsoluteDirection(java.lang.Object,androidx.customview.widget.FocusStrategy$CollectionAdapter,androidx.customview.widget.FocusStrategy$BoundsAdapter,java.lang.Object,android.graphics.Rect,int)
    public static boolean isBetterCandidate(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)
    public static int getWeightedDistanceFor(int,int)
    public static boolean isToDirectionOf(int,android.graphics.Rect,android.graphics.Rect)
    public static int majorAxisDistanceRaw(int,android.graphics.Rect,android.graphics.Rect)
    public static int majorAxisDistanceToFarEdge(int,android.graphics.Rect,android.graphics.Rect)
    public static int majorAxisDistanceToFarEdgeRaw(int,android.graphics.Rect,android.graphics.Rect)
    public static void setText(android.widget.TextView,java.lang.CharSequence)
    public static boolean haveContentsChanged(java.lang.CharSequence,java.lang.CharSequence)
    public static void animateRemoveFragment(androidx.fragment.app.Fragment,androidx.fragment.app.FragmentAnim$AnimationOrAnimator,androidx.fragment.app.FragmentTransition$Callback)
    public static int transitToAnimResourceId(int,boolean)
    public static final kotlin.Lazy createViewModelLazy(androidx.fragment.app.Fragment,kotlin.reflect.KClass,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0)
    public static androidx.lifecycle.LiveData map(androidx.lifecycle.LiveData,androidx.arch.core.util.Function)
    public static androidx.navigation.NavController findNavController1(android.app.Activity,int)
    public static androidx.navigation.NavController findNavController(android.view.View)
    public static void setViewNavController(android.view.View,androidx.navigation.NavController)
    public static androidx.navigation.NavController getViewNavController(android.view.View)
    public static final androidx.navigation.NavController findNavController(androidx.fragment.app.Fragment)
    public static void setupActionBarWithNavController(androidx.appcompat.app.AppCompatActivity,androidx.navigation.NavController)
    public static void setupActionBarWithNavController(androidx.appcompat.app.AppCompatActivity,androidx.navigation.NavController,androidx.navigation.ui.AppBarConfiguration)
    public static boolean matchDestinations(androidx.navigation.NavDestination,java.util.Set)
    public static androidx.navigation.NavDestination findStartDestination(androidx.navigation.NavGraph)
    public static void addPauseListener(android.animation.Animator,android.animation.AnimatorListenerAdapter)
    public static void pause(android.animation.Animator)
    public static void resume(android.animation.Animator)
    public static android.animation.PropertyValuesHolder ofPointF(android.util.Property,android.graphics.Path)
    public static void suppressLayout(android.view.ViewGroup,boolean)
    public static void cancelLayoutTransition(android.animation.LayoutTransition)
    public static android.animation.Animator loadAnimator(android.content.Context,int)
    public static android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int)
    public static android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float)
    public static void parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser)
    public static void setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,int,float,org.xmlpull.v1.XmlPullParser)
    public static void setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)
    public static android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,float)
    public static android.animation.PropertyValuesHolder[] loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)
    public static int inferValueTypeOfKeyframe(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser)
    public static int inferValueTypeFromValues(android.content.res.TypedArray,int,int)
    public static android.animation.PropertyValuesHolder loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)
    public static void distributeKeyframes(android.animation.Keyframe[],float,int,int)
    public static android.animation.Keyframe loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser)
    public static android.animation.ObjectAnimator loadObjectAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,float,org.xmlpull.v1.XmlPullParser)
    public static final int calcX(android.widget.RelativeLayout,android.content.Context)
    public static final int calcY(android.widget.RelativeLayout,android.content.Context)
    public static final int getXY(float,int)
    public static int saveLayerAlpha(android.graphics.Canvas,float,float,float,float,int)
    public static android.animation.Animator$AnimatorListener createCircularRevealListener(com.google.android.material.circularreveal.CircularRevealWidget)
    public static int getColor(android.content.Context,int,java.lang.String)
    public static int getColor(android.view.View,int,int)
    public static int layer(int,int)
    public static java.lang.String getMonthDayOfWeekDay(long)
    public static java.lang.String getMonthDayOfWeekDay(long,java.util.Locale)
    public static java.lang.String getYearMonthDayOfWeekDay(long)
    public static java.lang.String getYearMonthDayOfWeekDay(long,java.util.Locale)
    public static android.icu.util.TimeZone getUtcAndroidTimeZone()
    public static android.icu.text.DateFormat getAndroidFormat(java.lang.String,java.util.Locale)
    public static java.text.DateFormat getFormat(int,java.util.Locale)
    public static java.text.SimpleDateFormat getSimpleFormat(java.lang.String,java.util.Locale)
    public static android.icu.text.DateFormat getAbbrMonthWeekdayDayFormat(java.util.Locale)
    public static android.icu.text.DateFormat getYearAbbrMonthWeekdayDayFormat(java.util.Locale)
    public static java.text.DateFormat getFullFormat(java.util.Locale)
    public static java.text.SimpleDateFormat getYearMonthFormat()
    public static java.text.SimpleDateFormat getYearMonthFormat(java.util.Locale)
    public static float dpToPx(android.content.Context,int)
    public static void doOnApplyWindowInsets(android.view.View,com.google.android.material.internal.ViewUtils$OnApplyWindowInsetsListener)
    public static void requestApplyInsetsWhenAttached(android.view.View)
    public static float getParentAbsoluteElevation(android.view.View)
    public static float distanceToFurthestCorner(float,float,float,float,float,float)
    public static float max(float,float,float,float)
    public static int resolveOrThrow(android.view.View,int)
    public static com.google.android.material.resources.TextAppearance getTextAppearance(android.content.Context,android.content.res.TypedArray,int)
    public static int getDimensionPixelSize(android.content.Context,android.content.res.TypedArray,int,int)
    public static int getIndexWithValue(android.content.res.TypedArray,int,int)
    public static boolean shouldLoadFontSynchronously()
    public static com.google.android.material.shape.CornerTreatment createDefaultCornerTreatment()
    public static com.google.android.material.shape.EdgeTreatment createDefaultEdgeTreatment()
    public static void setParentAbsoluteElevation(android.view.View)
    public static final kotlin.Lazy lazy(kotlin.jvm.functions.Function0)
    public static final char single(char[])
    public static kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext)
    public static final int differenceModulo(int,int,int)
    public static final int getProgressionLastElement(int,int,int)
    public static final java.lang.Class getJavaClass(kotlin.reflect.KClass)
    public static final int fastLog2(int)
    public static final int takeUpperBits(int,int)
    public static final void checkRangeBounds(int,int)
    public static final java.lang.String boundsErrorMessage(java.lang.Object,java.lang.Object)
    public static final int coerceAtLeast(int,int)
    public static final boolean equals(char,char,boolean)
    public static synthetic void cancel$default(kotlinx.coroutines.Job,java.util.concurrent.CancellationException,int,java.lang.Object)
    public static final void cancel(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException)
    public static synthetic void cancel$default(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException,int,java.lang.Object)
    public static java.lang.reflect.Method sGetIBinderMethod
    public static boolean sGetIBinderMethodFetched
    public static boolean shouldLoadFontSynchronously
androidx.cursoradapter.widget.ResourceCursorAdapter:
    public android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup)
androidx.constraintlayout.solver.widgets.Barrier:
    public void setBarrierType(int)
    public void setAllowsGoneWidget(boolean)
androidx.core.widget.ListViewAutoScrollHelper:
    public void scrollTargetBy(int,int)
    public boolean canTargetScrollHorizontally(int)
    public boolean canTargetScrollVertically(int)
androidx.arch.core.executor.ArchTaskExecutor:
    public static void <clinit>()
    public void executeOnDiskIO(java.lang.Runnable)
    public void postToMainThread(java.lang.Runnable)
    public static final java.util.concurrent.Executor sMainThreadExecutor
    public static final java.util.concurrent.Executor sIOThreadExecutor
androidx.activity.ComponentActivity$NonConfigurationInstances:
    public java.lang.Object custom
androidx.fragment.app.FragmentViewModelLazyKt
com.google.android.material.datepicker.MonthAdapter:
    public android.widget.TextView getView(int,android.view.View,android.view.ViewGroup)
    public int positionToDay(int)
    public int dayToPosition(int)
    public boolean withinMonth(int)
    public boolean isFirstInRow(int)
    public boolean isLastInRow(int)
    public final void initializeStyles(android.content.Context)
androidx.navigation.NavGraph$1:
    public androidx.navigation.NavDestination next()
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior:
    public static boolean isBottomSheet(android.view.View)
    public boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,android.view.View)
    public boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,int)
    public boolean getInsetDodgeRect(com.google.android.material.floatingactionbutton.FloatingActionButton,android.graphics.Rect)
    public final void offsetIfNeeded(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton)
    public com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener internalAutoHideListener
androidx.transition.ViewUtilsBase:
    public final void fetchSetFrame()
androidx.appcompat.widget.AppCompatPopupWindow:
    public final void init(android.content.Context,android.util.AttributeSet,int,int)
    public final void setSupportOverlapAnchor(boolean)
androidx.transition.TransitionPropagation:
    public abstract long getStartDelay(android.view.ViewGroup,androidx.transition.Transition,androidx.transition.TransitionValues,androidx.transition.TransitionValues)
    public abstract void captureValues(androidx.transition.TransitionValues)
    public abstract java.lang.String[] getPropagationProperties()
androidx.transition.ViewUtilsApi19:
    public static void <clinit>()
com.google.android.material.internal.CheckableImageButton$SavedState$1:
    public com.google.android.material.internal.CheckableImageButton$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public com.google.android.material.internal.CheckableImageButton$SavedState createFromParcel(android.os.Parcel)
    public com.google.android.material.internal.CheckableImageButton$SavedState[] newArray(int)
androidx.core.text.TextDirectionHeuristicsCompat:
    public static final androidx.core.text.TextDirectionHeuristicCompat ANYRTL_LTR
    public static final androidx.core.text.TextDirectionHeuristicCompat LOCALE
com.google.android.material.datepicker.MonthsPagerAdapter:
    public static synthetic com.google.android.material.datepicker.MaterialCalendar$OnDayClickListener access$000(com.google.android.material.datepicker.MonthsPagerAdapter)
    public com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder onCreateViewHolder(android.view.ViewGroup)
    public void onBindViewHolder(com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder,int)
    public java.lang.CharSequence getPageTitle(int)
androidx.transition.ViewGroupUtils:
    public static void hiddenSuppressLayout(android.view.ViewGroup,boolean)
    public static void <clinit>()
kotlin.random.Random$Default:
    public void <init>()
kotlin.collections.ArraysKt__ArraysJVMKt
androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver:
    public void onChanged()
androidx.databinding.ViewDataBinding$IncludedLayouts
androidx.coordinatorlayout.widget.ViewGroupUtils:
    public static void offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState:
    public void setupAnimatorSet()
androidx.navigation.NavDeepLink$ParamQuery:
    public void setParamRegex(java.lang.String)
    public java.lang.String getParamRegex()
    public void addArgumentName(java.lang.String)
    public java.lang.String getArgumentName(int)
    public int size()
com.google.android.material.datepicker.DaysOfWeekAdapter:
    public java.lang.Integer getItem(int)
    public final int positionToDayOfWeek(int)
com.google.android.material.bottomappbar.BottomAppBar$SavedState$1:
    public com.google.android.material.bottomappbar.BottomAppBar$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public com.google.android.material.bottomappbar.BottomAppBar$SavedState createFromParcel(android.os.Parcel)
    public com.google.android.material.bottomappbar.BottomAppBar$SavedState[] newArray(int)
androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments:
    public void setBundle(android.os.Bundle)
    public android.os.Bundle mBundle
kotlin.text.StringsKt___StringsJvmKt:
    public static final int getLastIndex(java.lang.CharSequence)
    public static final int indexOfAny(java.lang.CharSequence,char[],int,boolean)
    public static final int indexOf(java.lang.CharSequence,char,int,boolean)
androidx.appcompat.widget.SearchView$SavedState$1:
    public androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel)
    public androidx.appcompat.widget.SearchView$SavedState[] newArray(int)
kotlin.internal.PlatformImplementationsKt:
    public static final int getJavaVersion()
androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener:
    public void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.constraintlayout.solver.Pools$Pool
androidx.transition.TransitionSet:
    public int getTransitionCount()
    public androidx.transition.TransitionSet setDuration(long)
    public androidx.transition.TransitionSet setStartDelay(long)
    public androidx.transition.TransitionSet setInterpolator(android.animation.TimeInterpolator)
    public androidx.transition.TransitionSet addTarget(android.view.View)
    public androidx.transition.TransitionSet addListener(androidx.transition.Transition$TransitionListener)
    public androidx.transition.TransitionSet removeTarget(android.view.View)
    public androidx.transition.TransitionSet removeListener(androidx.transition.Transition$TransitionListener)
    public final void addTransitionInternal(androidx.transition.Transition)
    public final void setupStartEndListeners()
androidx.lifecycle.LifecycleRegistry$1
androidx.navigation.NavType$7:
    public void put(android.os.Bundle,java.lang.String,float[])
    public float[] get(android.os.Bundle,java.lang.String)
    public float[] parseValue()
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$3:
    public final synthetic androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer this$1
androidx.recyclerview.widget.RecyclerView$Recycler:
    public void setViewCacheSize(int)
    public java.util.List getScrapList()
    public boolean validateViewHolderForOffsetPosition(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public android.view.View getViewForPosition(int)
    public android.view.View getViewForPosition(int,boolean)
    public void quickRecycleScrapView(android.view.View)
    public int getScrapCount()
    public android.view.View getScrapViewAt(int)
    public void clearScrap()
    public androidx.recyclerview.widget.RecyclerView$ViewHolder getChangedScrapViewForPosition(int)
    public androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrHiddenOrCachedHolderForPosition(int,boolean)
    public androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrCachedViewForId(long,int,boolean)
    public void dispatchViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean)
    public void offsetPositionRecordsForMove(int,int)
    public void offsetPositionRecordsForInsert(int,int)
    public void offsetPositionRecordsForRemove(int,int,boolean)
    public void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension)
    public void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool)
    public void viewRangeUpdate(int,int)
    public void markKnownViewsInvalid()
    public void clearOldPositions()
    public void markItemDecorInsetsDirty()
    public final boolean tryBindViewHolderByDeadline(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,long)
    public final void attachAccessibilityDelegateOnBind(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public final void invalidateDisplayListInt(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public androidx.recyclerview.widget.RecyclerView$ViewCacheExtension mViewCacheExtension
androidx.navigation.NavType:
    public static androidx.navigation.NavType inferFromValue(java.lang.String)
    public boolean isNullableAllowed()
    public java.lang.Object parseAndPut(android.os.Bundle,java.lang.String,java.lang.String)
androidx.navigation.fragment.FragmentNavigator:
    public androidx.navigation.fragment.FragmentNavigator$Destination createDestination()
    public androidx.fragment.app.Fragment instantiateFragment(android.content.Context,androidx.fragment.app.FragmentManager,java.lang.String)
    public androidx.navigation.NavDestination navigate(androidx.navigation.fragment.FragmentNavigator$Destination,android.os.Bundle,androidx.navigation.NavOptions,androidx.navigation.Navigator$Extras)
com.google.android.material.datepicker.MaterialCalendarGridView$1:
    public final synthetic com.google.android.material.datepicker.MaterialCalendarGridView this$0
com.google.android.material.circularreveal.CircularRevealFrameLayout:
    public final com.google.android.material.circularreveal.CircularRevealHelper helper
androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo:
    public android.widget.ListView getListView()
androidx.loader.app.LoaderManagerImpl$LoaderViewModel:
    public static androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)
    public void markForRedelivery()
    public void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
    public boolean mCreatingLoader
androidx.constraintlayout.solver.widgets.WidgetContainer:
    public void add(androidx.constraintlayout.solver.widgets.ConstraintWidget)
    public void remove(androidx.constraintlayout.solver.widgets.ConstraintWidget)
    public androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer getRootConstraintContainer()
    public void removeAllChildren()
androidx.appcompat.widget.ActionMenuView:
    public boolean isOverflowReserved()
    public androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet)
    public androidx.appcompat.widget.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams()
    public void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback)
    public androidx.appcompat.view.menu.MenuBuilder peekMenu()
    public boolean showOverflowMenu()
    public boolean hideOverflowMenu()
    public boolean isOverflowMenuShowing()
    public boolean isOverflowMenuShowPending()
    public void dismissPopupMenus()
    public final void onMeasureExactFormat(int,int)
kotlin.random.Random:
    public static final synthetic kotlin.random.Random access$getDefaultRandom$cp()
    public static final kotlin.random.Random$Companion Companion
androidx.recyclerview.widget.ViewInfoStore:
    public void clear()
    public androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPostLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public void addToOldChangeHolders(long,androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public void addToAppearedInPreLayoutHolders(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public boolean isInPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public androidx.recyclerview.widget.RecyclerView$ViewHolder getFromOldChangeHolders(long)
    public void process(androidx.recyclerview.widget.ViewInfoStore$ProcessCallback)
    public void onDetach()
    public void onViewDetached(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.google.android.material.card.MaterialCardViewHelper
androidx.lifecycle.ClassesInfoCache$CallbackInfo:
    public void invokeCallbacks(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object)
com.google.android.material.chip.ChipGroup:
    public static synthetic boolean access$300(com.google.android.material.chip.ChipGroup)
    public static synthetic int access$400(com.google.android.material.chip.ChipGroup)
    public static synthetic boolean access$500(com.google.android.material.chip.ChipGroup)
    public static synthetic void access$600(com.google.android.material.chip.ChipGroup,int,boolean)
    public static synthetic com.google.android.material.chip.ChipGroup$CheckedStateTracker access$800(com.google.android.material.chip.ChipGroup)
    public void clearCheck()
com.czluciusdev.diceroller.databinding.DiceFragmentBinding:
    public final android.widget.LinearLayout diceNumHolder
    public final android.widget.ImageView imageView
    public final android.widget.TextView textView
androidx.recyclerview.widget.LinearSmoothScroller:
    public void onStart()
    public void onSeekTargetStep(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action)
    public void onStop()
    public int calculateTimeForDeceleration(int)
    public int getHorizontalSnapPreference()
    public int getVerticalSnapPreference()
    public void updateActionForInterimTarget(androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action)
    public int calculateDyToMakeVisible(android.view.View,int)
    public int calculateDxToMakeVisible(android.view.View,int)
    public final float getSpeedPerPixel()
    public final int clampApplyScroll(int,int)
androidx.navigation.NavType$6:
    public void put(android.os.Bundle,java.lang.String,java.lang.Float)
    public java.lang.Float get(android.os.Bundle,java.lang.String)
    public java.lang.Float parseValue(java.lang.String)
com.google.android.material.appbar.AppBarLayout$LayoutParams:
    public int getScrollFlags()
    public android.view.animation.Interpolator getScrollInterpolator()
    public boolean isCollapsible()
androidx.appcompat.widget.Toolbar$1:
    public boolean onMenuItemClick(android.view.MenuItem)
androidx.constraintlayout.solver.widgets.ResolutionAnchor:
    public void setType(int)
    public void update()
    public void setOpposite(androidx.constraintlayout.solver.widgets.ResolutionAnchor,float)
    public void setOpposite(androidx.constraintlayout.solver.widgets.ResolutionAnchor,int,androidx.constraintlayout.solver.widgets.ResolutionDimension)
    public float getResolvedValue()
    public float computedValue
    public float oppositeOffset
androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback:
    public abstract androidx.appcompat.view.menu.ShowableListMenu getPopup()
androidx.recyclerview.widget.SimpleItemAnimator:
    public boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public boolean animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public boolean animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public boolean animatePersistence(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public abstract boolean animateRemove(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public abstract boolean animateAdd(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public abstract boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int)
    public final void dispatchRemoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public final void dispatchMoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public final void dispatchAddFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public final void dispatchChangeFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean)
    public final void dispatchRemoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public final void dispatchMoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public final void dispatchAddStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public final void dispatchChangeStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean)
    public void onRemoveStarting()
    public void onRemoveFinished()
    public void onAddStarting()
    public void onAddFinished()
    public void onMoveStarting()
    public void onMoveFinished()
    public void onChangeStarting()
    public void onChangeFinished()
androidx.core.provider.FontsContractCompat$5:
    public int compare(byte[],byte[])
androidx.core.view.accessibility.AccessibilityNodeProviderCompat:
    public java.lang.Object getProvider()
    public java.util.List findAccessibilityNodeInfosByText()
androidx.fragment.app.Fragment$OnStartEnterTransitionListener:
    public abstract void onStartEnterTransition()
    public abstract void startListening()
com.google.android.material.transformation.FabTransformationBehavior$3:
    public final synthetic com.google.android.material.transformation.FabTransformationBehavior this$0
com.google.android.material.floatingactionbutton.BorderDrawable$BorderState:
    public void <init>(com.google.android.material.floatingactionbutton.BorderDrawable)
androidx.databinding.DataBinderMapper:
    public abstract androidx.databinding.ViewDataBinding getDataBinder(androidx.databinding.DataBindingComponent,android.view.View[],int)
com.google.android.material.appbar.AppBarLayout$BaseOnOffsetChangedListener
androidx.appcompat.app.AlertDialog$Builder:
    public void <init>(android.content.Context,int)
    public android.content.Context getContext()
    public androidx.appcompat.app.AlertDialog$Builder setTitle(java.lang.CharSequence)
    public androidx.appcompat.app.AlertDialog$Builder setCustomTitle(android.view.View)
    public androidx.appcompat.app.AlertDialog$Builder setIcon(android.graphics.drawable.Drawable)
    public androidx.appcompat.app.AlertDialog$Builder setOnKeyListener(android.content.DialogInterface$OnKeyListener)
    public androidx.appcompat.app.AlertDialog$Builder setAdapter(android.widget.ListAdapter,android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface$OnClickListener)
androidx.navigation.NavDestination:
    public void <init>(java.lang.String)
    public final java.util.Map getArguments()
    public final void setParent(androidx.navigation.NavGraph)
    public final androidx.navigation.NavGraph getParent()
    public final int getId()
    public final void setId(int)
    public java.lang.String getDisplayName()
    public final void setLabel(java.lang.CharSequence)
    public final java.lang.CharSequence getLabel()
    public final java.lang.String getNavigatorName()
    public final void addDeepLink(java.lang.String)
    public final void putAction(int,androidx.navigation.NavAction)
    public final void addArgument(java.lang.String,androidx.navigation.NavArgument)
    public static final java.util.HashMap sClasses
androidx.constraintlayout.widget.ConstraintHelper:
    public void updatePostLayout()
    public void updatePostMeasure()
androidx.loader.app.LoaderManagerImpl$LoaderObserver:
    public boolean hasDeliveredData()
    public void reset()
    public void dump(java.lang.String,java.io.PrintWriter)
com.czluciusdev.diceroller.UtilKt
androidx.core.graphics.TypefaceCompatBaseImpl:
    public static java.lang.Object findBestFont(java.lang.Object[],int,androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor)
    public androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry getFontFamily(android.graphics.Typeface)
    public final androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry findBestEntry(androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,int)
    public final void addFontFamily(android.graphics.Typeface,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry)
com.google.android.material.appbar.AppBarLayout$BaseBehavior$BaseDragCallback
androidx.recyclerview.widget.RecyclerView$ViewHolder:
    public void flagRemovedAndOffsetPosition(int,int,boolean)
    public void saveOldPosition()
    public final int getOldPosition()
    public final long getItemId()
    public final int getItemViewType()
    public void unScrap()
    public void clearTmpDetachFlag()
    public void setScrapContainer(androidx.recyclerview.widget.RecyclerView$Recycler,boolean)
    public boolean needsUpdate()
    public boolean isAdapterPositionUnknown()
    public void clearPayload()
    public void onEnteredHiddenState(androidx.recyclerview.widget.RecyclerView)
    public void onLeftHiddenState(androidx.recyclerview.widget.RecyclerView)
    public boolean shouldBeKeptAsChild()
    public boolean doesTransientStatePreventRecycling()
    public final void createPayloadsIfNeeded()
androidx.lifecycle.LifecycleDispatcher:
    public static void init(android.content.Context)
kotlin.collections.ArraysKt___ArraysKt
androidx.constraintlayout.solver.widgets.Optimizer:
    public static void checkMatchParent(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.widgets.ConstraintWidget)
    public static void analyze(int,androidx.constraintlayout.solver.widgets.ConstraintWidget)
    public static boolean applyChainOptimized(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.solver.LinearSystem,int,int,androidx.constraintlayout.solver.widgets.ChainHead)
com.czluciusdev.diceroller.DiceFragment:
    public static final synthetic void access$removeAll(com.czluciusdev.diceroller.DiceFragment)
    public static final synthetic void access$rollDice(com.czluciusdev.diceroller.DiceFragment)
    public static final synthetic com.czluciusdev.diceroller.databinding.DiceFragmentBinding access$getBinding$p(com.czluciusdev.diceroller.DiceFragment)
    public android.view.View _$_findCachedViewById(int)
    public void _$_clearFindViewByIdCache()
    public final void removeAll()
    public final void infoNav()
    public final void removeDice(com.czluciusdev.diceroller.DiceImage)
    public final void renderDice(float,float,com.czluciusdev.diceroller.DiceImage,int)
    public final void addDice()
    public final void rollDice()
    public final void restoreDice()
androidx.fragment.app.FragmentContainer:
    public androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)
android.support.v4.os.ResultReceiver:
    public final boolean mLocal
androidx.lifecycle.LifecycleRegistry:
    public static androidx.lifecycle.Lifecycle$Event downEvent(androidx.lifecycle.Lifecycle$State)
    public void markState(androidx.lifecycle.Lifecycle$State)
    public void setCurrentState(androidx.lifecycle.Lifecycle$State)
    public void removeObserver(androidx.lifecycle.LifecycleObserver)
    public androidx.lifecycle.Lifecycle$State getCurrentState()
    public final boolean isSynced()
    public final void pushParentState(androidx.lifecycle.Lifecycle$State)
    public final void forwardPass(androidx.lifecycle.LifecycleOwner)
    public final void backwardPass(androidx.lifecycle.LifecycleOwner)
androidx.appcompat.widget.ActionBarContextView:
    public void closeMode()
    public boolean showOverflowMenu()
    public boolean isTitleOptional()
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealProperty:
    public com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo get(com.google.android.material.circularreveal.CircularRevealWidget)
    public void set(com.google.android.material.circularreveal.CircularRevealWidget,com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
androidx.fragment.app.FragmentHostCallback:
    public void <init>(android.app.Activity,android.content.Context,android.os.Handler,int)
    public boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment)
    public android.view.LayoutInflater onGetLayoutInflater()
    public abstract java.lang.Object onGetHost()
    public void onSupportInvalidateOptionsMenu()
    public android.view.View onFindViewById(int)
    public boolean onHasView()
    public android.app.Activity getActivity()
    public android.content.Context getContext()
    public android.os.Handler getHandler()
    public void onAttachFragment(androidx.fragment.app.Fragment)
    public final int mWindowAnimations
android.support.v4.media.session.IMediaControllerCallback$Stub
androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback:
    public androidx.appcompat.view.menu.ShowableListMenu getPopup()
androidx.fragment.app.FragmentTransaction:
    public androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String)
    public androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment,java.lang.String)
    public androidx.fragment.app.FragmentTransaction add(android.view.ViewGroup,androidx.fragment.app.Fragment,java.lang.String)
    public androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment,java.lang.String)
    public androidx.fragment.app.FragmentTransaction remove(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction setCustomAnimations(int,int,int,int)
    public androidx.fragment.app.FragmentTransaction addSharedElement(android.view.View,java.lang.String)
    public androidx.fragment.app.FragmentTransaction addToBackStack(java.lang.String)
    public androidx.fragment.app.FragmentTransaction disallowAddToBackStack()
    public androidx.fragment.app.FragmentTransaction setReorderingAllowed(boolean)
    public abstract int commitAllowingStateLoss()
    public abstract void commitNow()
    public abstract void commitNowAllowingStateLoss()
    public final androidx.fragment.app.FragmentFactory mFragmentFactory
    public final java.lang.ClassLoader mClassLoader
com.google.android.material.stateful.ExtendableSavedState:
    public void <init>(android.os.Parcel,java.lang.ClassLoader)
com.google.android.material.datepicker.SmoothCalendarLayoutManager$1:
    public final synthetic com.google.android.material.datepicker.SmoothCalendarLayoutManager this$0
androidx.core.content.res.GrowingArrayUtils
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1:
    public final synthetic androidx.appcompat.widget.AppCompatSpinner val$this$0
androidx.appcompat.view.menu.MenuItemWrapperICS:
    public void setExclusiveCheckable(boolean)
androidx.drawerlayout.widget.DrawerLayout:
    public static java.lang.String gravityToString(int)
    public static boolean hasOpaqueBackground(android.view.View)
    public void addDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener)
    public void removeDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener)
    public int getDrawerLockMode(int)
    public void updateDrawerState(int,android.view.View)
    public void dispatchOnDrawerClosed(android.view.View)
    public void dispatchOnDrawerOpened(android.view.View)
    public void dispatchOnDrawerSlide(android.view.View,float)
    public float getDrawerViewOffset(android.view.View)
    public void moveDrawerToOffset(android.view.View,float)
    public void closeDrawers()
    public void openDrawer(android.view.View,boolean)
    public void closeDrawer(android.view.View)
    public void closeDrawer(android.view.View,boolean)
    public boolean isDrawerOpen(android.view.View)
    public boolean isDrawerVisible(android.view.View)
    public final boolean isInBoundsOfChild(float,float,android.view.View)
    public final boolean dispatchTransformedGenericPointerEvent(android.view.MotionEvent,android.view.View)
    public final android.view.MotionEvent getTransformedMotionEvent(android.view.MotionEvent,android.view.View)
    public final void resolveShadowDrawables()
    public final android.graphics.drawable.Drawable resolveLeftShadow()
    public final android.graphics.drawable.Drawable resolveRightShadow()
    public final boolean mirror(android.graphics.drawable.Drawable,int)
    public final boolean hasPeekingDrawer()
    public final boolean hasVisibleDrawer()
    public final androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate mChildAccessibilityDelegate
    public int mMinDrawerMargin
    public android.graphics.Paint mScrimPaint
    public final androidx.customview.widget.ViewDragHelper mLeftDragger
    public final androidx.customview.widget.ViewDragHelper mRightDragger
    public final androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback mLeftCallback
    public final androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback mRightCallback
    public int mDrawerState
    public boolean mDisallowInterceptRequested
    public boolean mChildrenCanceledTouch
    public float mInitialMotionX
    public float mInitialMotionY
    public java.lang.Object mLastInsets
    public boolean mDrawStatusBarBackground
    public android.graphics.drawable.Drawable mShadowStart
    public android.graphics.drawable.Drawable mShadowEnd
    public android.graphics.drawable.Drawable mShadowLeft
    public android.graphics.drawable.Drawable mShadowRight
    public final java.util.ArrayList mNonDrawerViews
    public static final int[] THEME_ATTRS
androidx.core.view.ViewCompat$5:
    public java.lang.Boolean frameworkGet(android.view.View)
    public void frameworkSet(android.view.View,java.lang.Boolean)
    public boolean shouldUpdate(java.lang.Boolean,java.lang.Boolean)
androidx.core.text.ICUCompat:
    public static java.lang.String getScript(java.lang.String)
    public static java.lang.String addLikelySubtags(java.util.Locale)
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21
androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry:
    public androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[] getEntries()
com.google.android.material.internal.ViewUtils$OnApplyWindowInsetsListener:
    public abstract androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,com.google.android.material.internal.ViewUtils$RelativePadding)
androidx.fragment.app.FragmentManager:
    public static androidx.fragment.app.Fragment getViewFragment(android.view.View)
    public static void executeOps(java.util.ArrayList,java.util.ArrayList,int,int)
    public static int reverseTransit(int)
    public static void <clinit>()
    public androidx.fragment.app.FragmentTransaction beginTransaction()
    public void handleOnBackPressed()
    public void popBackStack(java.lang.String,int)
    public void popBackStack(int,int)
    public int getBackStackEntryCount()
    public void addCancellationSignal(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal)
    public void removeCancellationSignal(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal)
    public java.util.List getFragments()
    public androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment)
    public void addRetainedFragment(androidx.fragment.app.Fragment)
    public boolean isDestroyed()
    public void performPendingDeferredStart(androidx.fragment.app.Fragment)
    public boolean isStateAtLeast(int)
    public void moveToState(androidx.fragment.app.Fragment)
    public int allocBackStackIndex()
    public void addBackStackState(androidx.fragment.app.BackStackRecord)
    public androidx.fragment.app.Fragment getParent()
    public void dispatchActivityCreated()
    public void dispatchStart()
    public void dispatchResume()
    public void dispatchPause()
    public void dispatchStop()
    public void dispatchDestroyView()
    public void dispatchPrimaryNavigationFragmentChanged()
    public androidx.fragment.app.Fragment getPrimaryNavigationFragment()
    public androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher()
    public boolean checkForMenus()
    public android.view.LayoutInflater$Factory2 getLayoutInflaterFactory()
    public final boolean popBackStackImmediate(java.lang.String,int,int)
    public final androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment)
    public final void completeShowHideFragment(androidx.fragment.app.Fragment)
    public final void makeInactive(androidx.fragment.app.FragmentStateManager)
    public final void checkStateLoss()
    public final void makeRemovedFragmentsInvisible(androidx.collection.ArraySet)
    public final int postponePostponableTransactions(java.util.ArrayList,java.util.ArrayList,int,int,androidx.collection.ArraySet)
    public final void forcePostponedTransactions()
    public final boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList)
    public final void reportBackStackChanged()
    public java.util.ArrayList mBackStackChangeListeners
    public static boolean DEBUG
androidx.core.graphics.drawable.WrappedDrawableApi14:
    public final void updateLocalState(android.content.res.Resources)
    public final androidx.core.graphics.drawable.WrappedDrawableState mutateConstantState()
kotlin.ranges.RangesKt__RangesKt
androidx.fragment.app.FragmentTransition:
    public static androidx.fragment.app.FragmentTransitionImpl resolveSupportImpl()
    public static androidx.collection.ArrayMap calculateNameOverrides(int,java.util.ArrayList,java.util.ArrayList,int,int)
    public static void configureTransitionsReordered(androidx.fragment.app.FragmentManager,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$Callback)
    public static void replaceHide(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList)
    public static void configureTransitionsOrdered(androidx.fragment.app.FragmentManager,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$Callback)
    public static void scheduleTargetChange(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,androidx.fragment.app.Fragment,android.view.View,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList)
    public static java.lang.Object configureSharedElementsReordered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object)
    public static java.lang.Object configureSharedElementsOrdered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object)
    public static java.lang.String findKeyForValue(androidx.collection.ArrayMap,java.lang.String)
    public static void retainValues(androidx.collection.ArrayMap,androidx.collection.ArrayMap)
    public static void calculateFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean)
    public static void calculatePopFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean)
    public static boolean supportsTransition()
    public static androidx.fragment.app.FragmentTransition$FragmentContainerTransition ensureContainer(androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.util.SparseArray,int)
kotlin.ranges.IntRange$Companion
com.google.android.material.textfield.ClearTextEndIconDelegate:
    public static boolean hasText(android.text.Editable)
    public static synthetic boolean access$000(android.text.Editable)
    public static synthetic android.animation.ValueAnimator access$100(com.google.android.material.textfield.ClearTextEndIconDelegate)
    public static synthetic android.animation.AnimatorSet access$200(com.google.android.material.textfield.ClearTextEndIconDelegate)
    public static synthetic android.text.TextWatcher access$300(com.google.android.material.textfield.ClearTextEndIconDelegate)
    public final void initAnimators()
    public final varargs android.animation.ValueAnimator getAlphaAnimator(float[])
    public final android.animation.ValueAnimator getScaleAnimator()
androidx.appcompat.widget.AppCompatSeekBar:
    public void <init>(android.content.Context,android.util.AttributeSet,int)
androidx.arch.core.executor.ArchTaskExecutor$1
androidx.lifecycle.ProcessLifecycleOwner$2:
    public void onCreate()
    public void onStart()
    public void onResume()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback
com.google.android.material.datepicker.CalendarConstraints:
    public void <init>(com.google.android.material.datepicker.Month,com.google.android.material.datepicker.Month,com.google.android.material.datepicker.Month,com.google.android.material.datepicker.CalendarConstraints$DateValidator)
    public static synthetic com.google.android.material.datepicker.Month access$100(com.google.android.material.datepicker.CalendarConstraints)
    public static synthetic com.google.android.material.datepicker.Month access$200(com.google.android.material.datepicker.CalendarConstraints)
    public static synthetic com.google.android.material.datepicker.Month access$300(com.google.android.material.datepicker.CalendarConstraints)
    public static synthetic com.google.android.material.datepicker.CalendarConstraints$DateValidator access$400(com.google.android.material.datepicker.CalendarConstraints)
    public com.google.android.material.datepicker.CalendarConstraints$DateValidator getDateValidator()
    public com.google.android.material.datepicker.Month getStart()
    public com.google.android.material.datepicker.Month getEnd()
    public com.google.android.material.datepicker.Month getOpenAt()
    public int getMonthSpan()
    public int getYearSpan()
androidx.core.widget.NestedScrollView$OnScrollChangeListener:
    public abstract void onScrollChange(androidx.core.widget.NestedScrollView,int,int,int,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer:
    public static float cross(float,float,float,float)
    public void draw(android.graphics.Canvas,int,int,android.graphics.ColorFilter)
    public boolean isStateful()
    public boolean onStateChanged(int[])
    public final void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)
    public final float getMatrixScale(android.graphics.Matrix)
android.support.v4.media.MediaBrowserCompat$CustomActionResultReceiver:
    public final java.lang.String mAction
    public final android.os.Bundle mExtras
    public final android.support.v4.media.MediaBrowserCompat$CustomActionCallback mCallback
androidx.databinding.CallbackRegistry:
    public void <init>(androidx.databinding.CallbackRegistry$NotifierCallback)
    public synchronized void add(java.lang.Object)
    public synchronized void remove(java.lang.Object)
    public synchronized androidx.databinding.CallbackRegistry clone()
    public java.lang.Object clone()
    public final void notifyFirst64(java.lang.Object,int,java.lang.Object)
    public final void notifyRecurse(java.lang.Object,int,java.lang.Object)
    public final void notifyRemainder(java.lang.Object,int,java.lang.Object,int)
    public final void notifyCallbacks(java.lang.Object,int,java.lang.Object,int,int,long)
    public final boolean isRemoved(int)
    public final void removeRemovedCallbacks(int,long)
    public final void setRemovalBit(int)
    public java.util.List mCallbacks
    public long mFirst64Removed
    public long[] mRemainderRemoved
    public int mNotificationLevel
    public final androidx.databinding.CallbackRegistry$NotifierCallback mNotifier
androidx.navigation.NavDeepLinkBuilder
androidx.databinding.ObservableList
androidx.constraintlayout.solver.SolverVariable:
    public static void increaseErrorId()
    public static void <clinit>()
    public void setType(androidx.constraintlayout.solver.SolverVariable$Type)
    public static int uniqueSlackId
    public static int uniqueUnrestrictedId
    public static int uniqueConstantId
    public static int uniqueId
androidx.appcompat.widget.AppCompatSpinner$SavedState$1:
    public androidx.appcompat.widget.AppCompatSpinner$SavedState createFromParcel(android.os.Parcel)
    public androidx.appcompat.widget.AppCompatSpinner$SavedState[] newArray(int)
androidx.recyclerview.widget.OrientationHelper:
    public void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager)
    public static androidx.recyclerview.widget.OrientationHelper createHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager)
    public static androidx.recyclerview.widget.OrientationHelper createVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager)
    public void onLayoutComplete()
android.support.v4.media.MediaDescriptionCompatApi23$Builder
kotlin.text.StringsKt__RegexExtensionsKt
com.google.android.material.floatingactionbutton.BorderDrawable:
    public void setBorderWidth(float)
    public void setGradientColors(int,int,int,int)
    public void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
    public final android.graphics.Shader createGradientShader()
androidx.core.math.MathUtils
androidx.core.os.TraceCompat:
    public static long sTraceTagApp
    public static java.lang.reflect.Method sIsTagEnabledMethod
    public static java.lang.reflect.Method sAsyncTraceBeginMethod
    public static java.lang.reflect.Method sAsyncTraceEndMethod
    public static java.lang.reflect.Method sTraceCounterMethod
androidx.core.app.ActivityCompat:
    public static androidx.core.app.ActivityCompat$PermissionCompatDelegate sDelegate
androidx.appcompat.app.AlertController$AlertParams:
    public void apply(androidx.appcompat.app.AlertController)
    public final void createListView(androidx.appcompat.app.AlertController)
    public java.lang.CharSequence mMessage
    public java.lang.CharSequence mPositiveButtonText
    public android.graphics.drawable.Drawable mPositiveButtonIcon
    public android.content.DialogInterface$OnClickListener mPositiveButtonListener
    public java.lang.CharSequence mNegativeButtonText
    public android.graphics.drawable.Drawable mNegativeButtonIcon
    public android.content.DialogInterface$OnClickListener mNegativeButtonListener
    public java.lang.CharSequence mNeutralButtonText
    public android.graphics.drawable.Drawable mNeutralButtonIcon
    public android.content.DialogInterface$OnClickListener mNeutralButtonListener
    public java.lang.CharSequence[] mItems
    public int mViewLayoutResId
    public android.view.View mView
    public int mViewSpacingLeft
    public int mViewSpacingTop
    public int mViewSpacingRight
    public int mViewSpacingBottom
    public boolean[] mCheckedItems
    public boolean mIsMultiChoice
    public android.content.DialogInterface$OnMultiChoiceClickListener mOnCheckboxClickListener
    public android.database.Cursor mCursor
    public java.lang.String mLabelColumn
    public java.lang.String mIsCheckedColumn
    public android.widget.AdapterView$OnItemSelectedListener mOnItemSelectedListener
    public androidx.appcompat.app.AlertController$AlertParams$OnPrepareListViewListener mOnPrepareListViewListener
    public boolean mRecycleOnMeasure
androidx.recyclerview.widget.StaggeredGridLayoutManager:
    public void setSpanCount(int)
    public void setOrientation(int)
    public void setReverseLayout(boolean)
    public void invalidateSpanAssignments()
    public void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo)
    public boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo)
    public void updateMeasureSpecs(int)
    public int findFirstVisibleItemPositionInt()
    public boolean areAllEndsEqual()
    public boolean areAllStartsEqual()
    public final void createOrientationHelpers()
    public final boolean checkSpanForGap(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span)
    public final void repositionToWrapContentIfNecessary()
    public final void applyPendingSavedState(androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo)
    public final boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo)
    public final void measureChildWithDecorationsAndMargin(android.view.View,androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams,boolean)
    public final androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromEnd(int)
    public final androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromStart(int)
    public final void attachViewToSpans(android.view.View,androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams,androidx.recyclerview.widget.LayoutState)
    public final void appendViewToAllSpans(android.view.View)
    public final void prependViewToAllSpans(android.view.View)
    public final int getMaxStart(int)
    public final int getMinEnd(int)
    public final androidx.recyclerview.widget.StaggeredGridLayoutManager$Span getNextSpan(androidx.recyclerview.widget.LayoutState)
    public final int findFirstReferenceChildPosition(int)
    public final int findLastReferenceChildPosition(int)
    public final int convertFocusDirectionToLayoutDirection(int)
androidx.core.util.ObjectsCompat
android.support.v4.os.ResultReceiver$1:
    public android.support.v4.os.ResultReceiver createFromParcel(android.os.Parcel)
    public android.support.v4.os.ResultReceiver[] newArray(int)
androidx.databinding.ObservableMap$OnMapChangedCallback
androidx.navigation.ui.ActionBarOnDestinationChangedListener:
    public void setTitle(java.lang.CharSequence)
com.google.android.material.shape.ShapeAppearanceModel$Builder:
    public static synthetic com.google.android.material.shape.CornerTreatment access$100(com.google.android.material.shape.ShapeAppearanceModel$Builder)
    public static synthetic com.google.android.material.shape.CornerTreatment access$200(com.google.android.material.shape.ShapeAppearanceModel$Builder)
    public static synthetic com.google.android.material.shape.CornerTreatment access$300(com.google.android.material.shape.ShapeAppearanceModel$Builder)
    public static synthetic com.google.android.material.shape.CornerTreatment access$400(com.google.android.material.shape.ShapeAppearanceModel$Builder)
    public static synthetic com.google.android.material.shape.CornerSize access$500(com.google.android.material.shape.ShapeAppearanceModel$Builder)
    public static synthetic com.google.android.material.shape.CornerSize access$600(com.google.android.material.shape.ShapeAppearanceModel$Builder)
    public static synthetic com.google.android.material.shape.CornerSize access$700(com.google.android.material.shape.ShapeAppearanceModel$Builder)
    public static synthetic com.google.android.material.shape.CornerSize access$800(com.google.android.material.shape.ShapeAppearanceModel$Builder)
    public static synthetic com.google.android.material.shape.EdgeTreatment access$900(com.google.android.material.shape.ShapeAppearanceModel$Builder)
    public static synthetic com.google.android.material.shape.EdgeTreatment access$1000(com.google.android.material.shape.ShapeAppearanceModel$Builder)
    public static synthetic com.google.android.material.shape.EdgeTreatment access$1100(com.google.android.material.shape.ShapeAppearanceModel$Builder)
    public static synthetic com.google.android.material.shape.EdgeTreatment access$1200(com.google.android.material.shape.ShapeAppearanceModel$Builder)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setAllCornerSizes(float)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCornerSize(com.google.android.material.shape.CornerSize)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCornerSize(com.google.android.material.shape.CornerSize)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCornerSize(com.google.android.material.shape.CornerSize)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCornerSize(com.google.android.material.shape.CornerSize)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCorner(int,com.google.android.material.shape.CornerSize)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCorner(com.google.android.material.shape.CornerTreatment)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCorner(int,com.google.android.material.shape.CornerSize)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCorner(com.google.android.material.shape.CornerTreatment)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCorner(int,com.google.android.material.shape.CornerSize)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCorner(com.google.android.material.shape.CornerTreatment)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCorner(int,com.google.android.material.shape.CornerSize)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCorner(com.google.android.material.shape.CornerTreatment)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setTopEdge(com.google.android.material.shape.EdgeTreatment)
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory:
    public static androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory getInstance(android.app.Application)
androidx.databinding.MergedDataBinderMapper
com.google.android.material.datepicker.DateValidatorPointForward$1:
    public com.google.android.material.datepicker.DateValidatorPointForward createFromParcel(android.os.Parcel)
    public com.google.android.material.datepicker.DateValidatorPointForward[] newArray(int)
androidx.recyclerview.widget.RecyclerView$State:
    public void prepareForNestedPrefetch(androidx.recyclerview.widget.RecyclerView$Adapter)
    public boolean isPreLayout()
    public boolean willRunPredictiveAnimations()
    public int getTargetScrollPosition()
    public boolean hasTargetScrollPosition()
    public android.util.SparseArray mData
    public int mRemainingScrollVertical
com.google.android.material.card.MaterialCardView:
    public static synthetic float access$001(com.google.android.material.card.MaterialCardView)
    public boolean isDragged()
    public boolean isCheckable()
    public final void forceRippleRedrawIfNeeded()
    public final com.google.android.material.card.MaterialCardViewHelper cardViewHelper
    public boolean isParentCardViewDoneInitializing
    public static final int DEF_STYLE_RES
com.google.android.material.transformation.FabTransformationSheetBehavior:
    public com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec onCreateMotionSpec(android.content.Context,boolean)
    public final void updateImportantForAccessibility(android.view.View,boolean)
com.google.android.material.shape.ShapeAppearanceModel$CornerSizeUnaryOperator
androidx.transition.TransitionManager:
    public static void sceneChangeRunTransition(android.view.ViewGroup,androidx.transition.Transition)
    public static void sceneChangeSetup(android.view.ViewGroup,androidx.transition.Transition)
    public static void beginDelayedTransition(android.view.ViewGroup,androidx.transition.Transition)
com.google.android.material.appbar.AppBarLayout$BaseBehavior:
    public static android.view.View getAppBarChildOnOffset(com.google.android.material.appbar.AppBarLayout,int)
    public static synthetic int access$000(com.google.android.material.appbar.AppBarLayout$BaseBehavior)
    public boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int)
    public void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int[])
    public void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int[])
    public void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int)
    public boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,int,int)
    public boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int)
    public boolean canDragView(com.google.android.material.appbar.AppBarLayout)
    public void onFlingFinished(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout)
    public int getMaxDragOffset(com.google.android.material.appbar.AppBarLayout)
    public int getScrollRangeForDragFling(com.google.android.material.appbar.AppBarLayout)
    public int setHeaderTopBottomOffset(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,int)
    public android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout)
    public void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.os.Parcelable)
    public int getScrollRangeForDragFling(android.view.View)
    public int getMaxDragOffset(android.view.View)
    public void onFlingFinished(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View)
    public final boolean canScrollChildren(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View)
    public final void animateOffsetWithDuration(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int)
    public final int getChildIndexOnOffset(com.google.android.material.appbar.AppBarLayout,int)
    public final int interpolateOffset(com.google.android.material.appbar.AppBarLayout,int)
    public final boolean shouldJumpElevationState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout)
    public com.google.android.material.appbar.AppBarLayout$BaseBehavior$BaseDragCallback onDragCallback
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver:
    public void onChanged()
com.google.android.material.bottomsheet.BottomSheetDialogFragment:
    public static synthetic void access$100(com.google.android.material.bottomsheet.BottomSheetDialogFragment)
    public final boolean tryDismissWithAnimation(boolean)
    public final void dismissWithAnimation(com.google.android.material.bottomsheet.BottomSheetBehavior,boolean)
    public final void dismissAfterAnimation()
    public boolean waitingForDismissAllowingStateLoss
androidx.drawerlayout.widget.DrawerLayout$SavedState$1:
    public androidx.drawerlayout.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public androidx.drawerlayout.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel)
    public androidx.drawerlayout.widget.DrawerLayout$SavedState[] newArray(int)
androidx.recyclerview.widget.ChildHelper$Callback:
    public abstract int getChildCount()
    public abstract void addView(android.view.View,int)
    public abstract int indexOfChild(android.view.View)
    public abstract void removeViewAt(int)
    public abstract android.view.View getChildAt(int)
    public abstract void removeAllViews()
    public abstract androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View)
    public abstract void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams)
    public abstract void detachViewFromParent(int)
    public abstract void onEnteredHiddenState(android.view.View)
    public abstract void onLeftHiddenState(android.view.View)
androidx.lifecycle.LifecycleController
androidx.cardview.widget.CardView:
    public int mUserSetMinWidth
    public int mUserSetMinHeight
    public final android.graphics.Rect mContentPadding
    public final androidx.cardview.widget.CardViewDelegate mCardViewDelegate
    public static final int[] COLOR_BACKGROUND_ATTR
androidx.databinding.adapters.TextViewBindingAdapter
androidx.appcompat.widget.ActionMenuPresenter:
    public static synthetic androidx.appcompat.view.menu.MenuBuilder access$000(androidx.appcompat.widget.ActionMenuPresenter)
    public static synthetic androidx.appcompat.view.menu.MenuBuilder access$100(androidx.appcompat.widget.ActionMenuPresenter)
    public static synthetic androidx.appcompat.view.menu.MenuView access$200(androidx.appcompat.widget.ActionMenuPresenter)
    public static synthetic androidx.appcompat.view.menu.MenuBuilder access$300(androidx.appcompat.widget.ActionMenuPresenter)
    public static synthetic androidx.appcompat.view.menu.MenuBuilder access$400(androidx.appcompat.widget.ActionMenuPresenter)
    public static synthetic androidx.appcompat.view.menu.MenuView access$500(androidx.appcompat.widget.ActionMenuPresenter)
    public void onConfigurationChanged()
    public void setReserveOverflow(boolean)
    public void setExpandedActionViewsExclusive(boolean)
    public void setOverflowIcon(android.graphics.drawable.Drawable)
    public android.graphics.drawable.Drawable getOverflowIcon()
    public androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
    public void bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)
    public boolean shouldIncludeItem(int,androidx.appcompat.view.menu.MenuItemImpl)
    public boolean filterLeftoverView(android.view.ViewGroup,int)
    public boolean isOverflowMenuShowPending()
    public void setMenuView(androidx.appcompat.widget.ActionMenuView)
    public final android.view.View findViewForItem(android.view.MenuItem)
    public boolean mMaxItemsSet
    public boolean mStrictWidthLimit
    public boolean mWidthLimitSet
androidx.constraintlayout.solver.Metrics
androidx.transition.TransitionManager$MultiListener:
    public final void removeListeners()
com.google.android.material.appbar.HeaderScrollingViewBehavior:
    public static int resolveGravity(int)
    public boolean shouldHeaderOverlapScrollingChild()
    public abstract float getOverlapRatioForOffset(android.view.View)
    public abstract android.view.View findFirstDependency(java.util.List)
    public int getScrollRange(android.view.View)
    public final int getVerticalLayoutGap()
    public final void setOverlayTop(int)
    public final int getOverlayTop()
androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView:
    public final boolean isOutOfBounds(int,int)
androidx.fragment.app.BackStackRecord:
    public void dump(java.lang.String,java.io.PrintWriter)
    public androidx.fragment.app.FragmentTransaction remove(androidx.fragment.app.Fragment)
    public void runOnCommitRunnables()
    public int commitAllowingStateLoss()
    public void commitNow()
    public void commitNowAllowingStateLoss()
    public androidx.fragment.app.Fragment expandOps(java.util.ArrayList,androidx.fragment.app.Fragment)
    public androidx.fragment.app.Fragment trackAddedFragmentsInPop(java.util.ArrayList,androidx.fragment.app.Fragment)
    public boolean isPostponed()
    public void setOnStartPostponedListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener)
    public java.lang.String getName()
com.google.android.material.snackbar.BaseTransientBottomBar$OnAttachStateChangeListener:
    public abstract void onViewAttachedToWindow(android.view.View)
    public abstract void onViewDetachedFromWindow(android.view.View)
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo:
    public androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom1(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public int right
    public int bottom
kotlin.text.CharsKt__CharKt
com.google.android.material.internal.CheckableImageButton:
    public boolean isCheckable()
com.google.android.material.textfield.DropdownMenuEndIconDelegate:
    public static synthetic boolean access$202(com.google.android.material.textfield.DropdownMenuEndIconDelegate,boolean)
    public static synthetic android.view.accessibility.AccessibilityManager access$300(com.google.android.material.textfield.DropdownMenuEndIconDelegate)
    public static synthetic void access$500(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.widget.AutoCompleteTextView)
    public static synthetic void access$600(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.widget.AutoCompleteTextView)
    public static synthetic void access$700(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.widget.AutoCompleteTextView)
    public static synthetic android.text.TextWatcher access$800(com.google.android.material.textfield.DropdownMenuEndIconDelegate)
    public static synthetic com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate access$900(com.google.android.material.textfield.DropdownMenuEndIconDelegate)
    public static synthetic boolean access$1000(com.google.android.material.textfield.DropdownMenuEndIconDelegate)
    public static synthetic long access$1102(com.google.android.material.textfield.DropdownMenuEndIconDelegate,long)
    public static synthetic boolean access$1200(com.google.android.material.textfield.DropdownMenuEndIconDelegate)
    public static synthetic android.animation.ValueAnimator access$1300(com.google.android.material.textfield.DropdownMenuEndIconDelegate)
    public final void showHideDropdown(android.widget.AutoCompleteTextView)
    public final void setPopupBackground(android.widget.AutoCompleteTextView)
    public final void addRippleEffect(android.widget.AutoCompleteTextView)
    public final void addRippleEffectOnOutlinedLayout(android.widget.AutoCompleteTextView,int,int[][],com.google.android.material.shape.MaterialShapeDrawable)
    public final void addRippleEffectOnFilledLayout(android.widget.AutoCompleteTextView,int,int[][],com.google.android.material.shape.MaterialShapeDrawable)
    public final void setUpDropdownShowHideBehavior(android.widget.AutoCompleteTextView)
    public final android.widget.AutoCompleteTextView castAutoCompleteTextViewOrThrow(android.widget.EditText)
    public final void setEndIconChecked(boolean)
    public final void initAnimators()
    public final varargs android.animation.ValueAnimator getAlphaAnimator(int,float[])
androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache:
    public static int generateCacheKey(int,android.graphics.PorterDuff$Mode)
    public android.graphics.PorterDuffColorFilter get(int,android.graphics.PorterDuff$Mode)
    public android.graphics.PorterDuffColorFilter put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter)
androidx.navigation.NavType$SerializableType:
    public void put(android.os.Bundle,java.lang.String,java.io.Serializable)
    public java.io.Serializable get(android.os.Bundle,java.lang.String)
androidx.appcompat.view.menu.MenuPopupHelper:
    public void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int)
    public void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)
    public void setAnchorView(android.view.View)
    public void setForceShowIcon(boolean)
    public void setGravity(int)
    public void show()
    public boolean tryShow(int,int)
    public void dismiss()
    public final androidx.appcompat.view.menu.MenuPopup createPopup()
androidx.appcompat.app.AlertController$AlertParams$4
kotlin.coroutines.CoroutineContext$Element$DefaultImpls
androidx.core.view.ViewPropertyAnimatorCompat$1:
    public final synthetic androidx.core.view.ViewPropertyAnimatorCompat this$0
androidx.navigation.NavType$8:
    public void put(android.os.Bundle,java.lang.String,java.lang.Boolean)
    public java.lang.Boolean get(android.os.Bundle,java.lang.String)
    public java.lang.Boolean parseValue(java.lang.String)
com.google.android.material.textfield.PasswordToggleEndIconDelegate:
    public static synthetic android.text.TextWatcher access$100(com.google.android.material.textfield.PasswordToggleEndIconDelegate)
    public final boolean hasPasswordTransformation()
com.google.android.material.shape.ShapeAppearancePathProvider:
    public void calculatePath(com.google.android.material.shape.ShapeAppearanceModel,float,android.graphics.RectF,android.graphics.Path)
    public final void setCornerPathAndTransform(com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec,int)
    public final void setEdgePathAndTransform(int)
    public final void appendCornerPath(com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec,int)
    public final void appendEdgePath(com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec,int)
    public final float getEdgeCenterForIndex(android.graphics.RectF,int)
    public final com.google.android.material.shape.CornerTreatment getCornerTreatmentForIndex(int,com.google.android.material.shape.ShapeAppearanceModel)
    public final com.google.android.material.shape.CornerSize getCornerSizeForIndex(int,com.google.android.material.shape.ShapeAppearanceModel)
    public final com.google.android.material.shape.EdgeTreatment getEdgeTreatmentForIndex(int,com.google.android.material.shape.ShapeAppearanceModel)
    public final void getCoordinatesOfCorner(int,android.graphics.RectF,android.graphics.PointF)
    public final float angleOfEdge(int)
com.google.android.material.internal.ViewUtils
androidx.appcompat.widget.TooltipCompat
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton:
    public static synthetic android.graphics.Rect access$500(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)
    public final void performMotion(com.google.android.material.floatingactionbutton.MotionStrategy,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback)
    public final boolean shouldAnimateVisibilityChange()
    public final android.graphics.Rect shadowPadding
    public final com.google.android.material.floatingactionbutton.MotionStrategy shrinkStrategy
    public final com.google.android.material.floatingactionbutton.MotionStrategy extendStrategy
    public final com.google.android.material.floatingactionbutton.MotionStrategy showStrategy
    public final com.google.android.material.floatingactionbutton.MotionStrategy hideStrategy
    public final androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior behavior
    public static final int DEF_STYLE_RES
    public static final android.util.Property WIDTH
    public static final android.util.Property HEIGHT
com.google.android.material.animation.DrawableAlphaProperty:
    public java.lang.Integer get(android.graphics.drawable.Drawable)
    public void set(android.graphics.drawable.Drawable,java.lang.Integer)
androidx.appcompat.widget.ResourceManagerInternal:
    public static void installDefaultInflateDelegates(androidx.appcompat.widget.ResourceManagerInternal)
    public static long createCacheKey(android.util.TypedValue)
    public static android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int[])
    public static boolean isVectorDrawable(android.graphics.drawable.Drawable)
    public synchronized void setHooks(androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks)
    public synchronized void onConfigurationChanged(android.content.Context)
    public synchronized android.graphics.drawable.Drawable onDrawableLoadedFromResources(android.content.Context,androidx.appcompat.widget.VectorEnabledTintResources,int)
    public android.graphics.PorterDuff$Mode getTintMode(int)
    public final android.content.res.ColorStateList getTintListFromCache(android.content.Context,int)
    public final void addTintListToCache(android.content.Context,int,android.content.res.ColorStateList)
    public final void checkVectorDrawableSetup(android.content.Context)
androidx.lifecycle.Transformations
android.support.v4.media.session.IMediaSession$Stub$Proxy
androidx.fragment.app.FragmentTransitionCompat21$2:
    public final synthetic androidx.fragment.app.FragmentTransitionCompat21 this$0
androidx.core.app.TaskStackBuilder:
    public static androidx.core.app.TaskStackBuilder create(android.content.Context)
    public androidx.core.app.TaskStackBuilder addNextIntent(android.content.Intent)
    public androidx.core.app.TaskStackBuilder addParentStack(android.app.Activity)
    public int getIntentCount()
    public android.content.Intent editIntentAt(int)
    public void startActivities(android.os.Bundle)
androidx.coordinatorlayout.widget.CoordinatorLayout$ViewElevationComparator:
    public int compare(android.view.View,android.view.View)
android.support.v4.media.session.PlaybackStateCompat$1:
    public android.support.v4.media.session.PlaybackStateCompat createFromParcel(android.os.Parcel)
    public android.support.v4.media.session.PlaybackStateCompat[] newArray(int)
androidx.databinding.PropertyChangeRegistry:
    public void <init>()
androidx.navigation.NavAction:
    public void <init>(int,androidx.navigation.NavOptions)
    public void <init>(int,androidx.navigation.NavOptions,android.os.Bundle)
    public int getDestinationId()
    public void setNavOptions(androidx.navigation.NavOptions)
    public androidx.navigation.NavOptions getNavOptions()
    public android.os.Bundle getDefaultArguments()
    public void setDefaultArguments(android.os.Bundle)
androidx.core.provider.SelfDestructiveThread$3:
    public final synthetic androidx.core.provider.SelfDestructiveThread this$0
androidx.navigation.NavType$ParcelableArrayType:
    public void put(android.os.Bundle,java.lang.String,android.os.Parcelable[])
    public android.os.Parcelable[] get(android.os.Bundle,java.lang.String)
    public android.os.Parcelable[] parseValue()
androidx.fragment.app.FragmentTransitionImpl$3:
    public final synthetic androidx.fragment.app.FragmentTransitionImpl this$0
androidx.appcompat.view.menu.MenuItemImpl$1:
    public void onActionProviderVisibilityChanged(boolean)
androidx.transition.ChangeBounds$9:
    public final synthetic androidx.transition.ChangeBounds this$0
androidx.core.view.ViewPropertyAnimatorUpdateListener:
    public abstract void onAnimationUpdate(android.view.View)
com.czluciusdev.diceroller.DiceFragment$OrientationListener:
    public final android.content.Context context
androidx.customview.widget.ViewDragHelper$Callback:
    public void onEdgeTouched()
    public boolean onEdgeLock()
    public void onEdgeDragStarted()
    public int getOrderedChildIndex(int)
androidx.fragment.app.BackStackState:
    public androidx.fragment.app.BackStackRecord instantiate(androidx.fragment.app.FragmentManager)
androidx.versionedparcelable.ParcelImpl$1:
    public androidx.versionedparcelable.ParcelImpl createFromParcel(android.os.Parcel)
    public androidx.versionedparcelable.ParcelImpl[] newArray(int)
android.support.v4.media.session.PlaybackStateCompat$CustomAction:
    public void <init>(java.lang.String,java.lang.CharSequence,int,android.os.Bundle)
    public static android.support.v4.media.session.PlaybackStateCompat$CustomAction fromCustomAction(java.lang.Object)
    public java.lang.Object mCustomActionObj
kotlin.jvm.internal.Reflection:
    public static java.lang.String renderLambdaToString(kotlin.jvm.internal.Lambda)
    public static final kotlin.reflect.KClass[] EMPTY_K_CLASS_ARRAY
androidx.appcompat.app.WindowDecorActionBar$3:
    public void onAnimationUpdate(android.view.View)
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1:
    public final synthetic androidx.appcompat.widget.ActionMenuPresenter val$this$0
androidx.recyclerview.widget.RecyclerView$LayoutParams:
    public boolean isViewInvalid()
kotlin.collections.ArraysKt__ArraysKt
com.google.android.material.chip.ChipGroup$OnCheckedChangeListener:
    public abstract void onCheckedChanged(com.google.android.material.chip.ChipGroup,int)
com.google.android.material.floatingactionbutton.FloatingActionButton$1:
    public void onShown()
    public void onHidden()
com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener:
    public void <init>(com.google.android.material.chip.ChipGroup)
    public static synthetic android.view.ViewGroup$OnHierarchyChangeListener access$202(com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener,android.view.ViewGroup$OnHierarchyChangeListener)
androidx.appcompat.widget.SearchView:
    public void setQuery(java.lang.CharSequence,boolean)
    public boolean isIconified()
    public boolean onSuggestionsKey(int,android.view.KeyEvent)
    public void onTextChanged(java.lang.CharSequence)
    public void onVoiceClicked()
    public void onTextFocusChanged()
    public void adjustDropDownSizeAndPosition()
    public final void getChildBoundsWithinSearchView(android.view.View,android.graphics.Rect)
    public final boolean hasVoiceSearch()
    public final boolean isSubmitAreaEnabled()
    public final void postUpdateFocusedState()
    public final java.lang.CharSequence getDecoratedHint(java.lang.CharSequence)
    public final void updateSearchAutoComplete()
    public final void dismissSuggestions()
    public final void rewriteQueryFromSuggestion(int)
    public final boolean launchSuggestion(int,int,java.lang.String)
    public final void launchIntent(android.content.Intent)
    public final android.content.Intent createVoiceWebSearchIntent(android.content.Intent,android.app.SearchableInfo)
    public final android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String)
androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback:
    public abstract int onGetChildDrawingOrder(int,int)
androidx.customview.widget.FocusStrategy
com.google.android.material.resources.CancelableFontCallback$ApplyFont:
    public abstract void apply(android.graphics.Typeface)
androidx.core.provider.FontsContractCompat$FontFamilyResult:
    public int getStatusCode()
    public androidx.core.provider.FontsContractCompat$FontInfo[] getFonts()
com.google.android.material.bottomsheet.BottomSheetBehavior$4:
    public boolean perform(android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments)
android.support.v4.media.session.PlaybackStateCompat$CustomAction$1:
    public android.support.v4.media.session.PlaybackStateCompat$CustomAction createFromParcel(android.os.Parcel)
    public android.support.v4.media.session.PlaybackStateCompat$CustomAction[] newArray(int)
androidx.recyclerview.widget.LayoutState:
    public boolean hasMore(androidx.recyclerview.widget.RecyclerView$State)
    public android.view.View next(androidx.recyclerview.widget.RecyclerView$Recycler)
androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback$TypefaceApplyCallback:
    public final synthetic androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback this$0
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo:
    public boolean isViewValidAsAnchor(android.view.View,androidx.recyclerview.widget.RecyclerView$State)
androidx.appcompat.widget.AlertDialogLayout:
    private void setChildFrame(android.view.View,int,int,int,int)
    public final boolean tryOnMeasure(int,int)
com.google.android.material.math.MathUtils
androidx.activity.ComponentActivity:
    public java.lang.Object onRetainCustomNonConfigurationInstance()
    public int mContentLayoutId
androidx.media.AudioAttributesCompat:
    public static final int[] SDK_USAGES
com.google.android.material.transformation.FabTransformationScrimBehavior$1:
    public final synthetic com.google.android.material.transformation.FabTransformationScrimBehavior this$0
androidx.core.view.accessibility.AccessibilityRecordCompat
com.google.android.material.datepicker.MaterialCalendar$1:
    public final synthetic com.google.android.material.datepicker.MaterialCalendar this$0
com.google.android.material.chip.Chip$ChipTouchHelper:
    public int getVirtualViewAt(float,float)
    public void onVirtualViewKeyboardFocusChanged(int,boolean)
    public void onPopulateNodeForHost(androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat
androidx.databinding.library.baseAdapters.DataBinderMapperImpl:
    public androidx.databinding.ViewDataBinding getDataBinder(androidx.databinding.DataBindingComponent,android.view.View[],int)
androidx.appcompat.app.ActionBar$Tab:
    public void <init>()
    public abstract android.graphics.drawable.Drawable getIcon()
    public abstract java.lang.CharSequence getText()
    public abstract android.view.View getCustomView()
    public abstract java.lang.CharSequence getContentDescription()
com.google.android.material.theme.MaterialComponentsViewInflater:
    public static void <clinit>()
androidx.transition.Transition:
    public long getDuration()
    public long getStartDelay()
    public android.animation.TimeInterpolator getInterpolator()
    public java.util.List getTargetIds()
    public java.util.List getTargets()
    public java.util.List getTargetNames()
    public java.util.List getTargetTypes()
    public void playTransition(android.view.ViewGroup)
    public void animate(android.animation.Animator)
    public androidx.transition.PathMotion getPathMotion()
    public androidx.transition.Transition$EpicenterCallback getEpicenterCallback()
    public void getPropagation()
    public java.lang.String getName()
    public final void matchInstances(androidx.collection.ArrayMap,androidx.collection.ArrayMap)
    public final void matchItemIds(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.LongSparseArray,androidx.collection.LongSparseArray)
    public final void matchIds(androidx.collection.ArrayMap,androidx.collection.ArrayMap,android.util.SparseArray,android.util.SparseArray)
    public final void matchNames(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap)
    public final void addUnmatched(androidx.collection.ArrayMap,androidx.collection.ArrayMap)
    public final void matchStartAndEnd(androidx.transition.TransitionValuesMaps,androidx.transition.TransitionValuesMaps)
    public final void runAnimator(android.animation.Animator,androidx.collection.ArrayMap)
    public android.view.ViewGroup mSceneRoot
    public androidx.collection.ArrayMap mNameOverrides
kotlin.jvm.internal.FunctionBase
androidx.transition.TransitionUtils:
    public static android.graphics.Bitmap createViewBitmap(android.view.View,android.graphics.Matrix,android.graphics.RectF,android.view.ViewGroup)
androidx.core.view.ViewPropertyAnimatorCompat:
    public long getDuration()
    public androidx.core.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator)
    public androidx.core.view.ViewPropertyAnimatorCompat setStartDelay(long)
    public void start()
androidx.constraintlayout.solver.widgets.ConstraintAnchor$1
androidx.core.content.res.ComplexColorCompat:
    public static androidx.core.content.res.ComplexColorCompat from(android.graphics.Shader)
    public static androidx.core.content.res.ComplexColorCompat from(android.content.res.ColorStateList)
    public static androidx.core.content.res.ComplexColorCompat from(int)
    public static androidx.core.content.res.ComplexColorCompat inflate(android.content.res.Resources,int,android.content.res.Resources$Theme)
    public android.graphics.Shader getShader()
    public int getColor()
    public void setColor(int)
    public boolean willDraw()
android.support.v4.media.MediaBrowserCompat$ItemReceiver:
    public final java.lang.String mMediaId
    public final android.support.v4.media.MediaBrowserCompat$ItemCallback mCallback
androidx.recyclerview.widget.GapWorker$Task:
    public void clear()
androidx.recyclerview.widget.ViewInfoStore$ProcessCallback:
    public abstract void processDisappeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public abstract void processAppeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public abstract void processPersistent(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public abstract void unused(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.google.android.material.card.MaterialCardView$OnCheckedChangeListener:
    public abstract void onCheckedChanged(com.google.android.material.card.MaterialCardView,boolean)
com.google.android.material.datepicker.MaterialCalendar:
    public static com.google.android.material.datepicker.MaterialCalendar newInstance(com.google.android.material.datepicker.DateSelector,int,com.google.android.material.datepicker.CalendarConstraints)
    public static synthetic androidx.recyclerview.widget.RecyclerView access$000(com.google.android.material.datepicker.MaterialCalendar)
    public static synthetic com.google.android.material.datepicker.CalendarConstraints access$100(com.google.android.material.datepicker.MaterialCalendar)
    public static synthetic com.google.android.material.datepicker.DateSelector access$200(com.google.android.material.datepicker.MaterialCalendar)
    public static synthetic androidx.recyclerview.widget.RecyclerView access$300(com.google.android.material.datepicker.MaterialCalendar)
    public static synthetic com.google.android.material.datepicker.CalendarStyle access$400(com.google.android.material.datepicker.MaterialCalendar)
    public static synthetic android.view.View access$500(com.google.android.material.datepicker.MaterialCalendar)
    public static synthetic com.google.android.material.datepicker.Month access$602(com.google.android.material.datepicker.MaterialCalendar,com.google.android.material.datepicker.Month)
    public com.google.android.material.datepicker.Month getCurrentMonth()
    public com.google.android.material.datepicker.CalendarConstraints getCalendarConstraints()
    public com.google.android.material.datepicker.DateSelector getDateSelector()
    public com.google.android.material.datepicker.CalendarStyle getCalendarStyle()
    public void toggleVisibleSelector()
    public final androidx.recyclerview.widget.RecyclerView$ItemDecoration createItemDecoration()
    public final void addActionsToMonthNavigation(android.view.View,com.google.android.material.datepicker.MonthsPagerAdapter)
androidx.appcompat.widget.TintInfo:
    public void clear()
androidx.appcompat.widget.AppCompatCheckedTextView:
    public void <init>(android.content.Context,android.util.AttributeSet,int)
androidx.viewpager2.adapter.FragmentStateAdapter
androidx.customview.widget.ExploreByTouchHelper:
    public static int keyToDirection(int)
    public static android.graphics.Rect guessPreviouslyFocusedRect(android.view.View,int,android.graphics.Rect)
    public final boolean dispatchHoverEvent(android.view.MotionEvent)
    public final boolean dispatchKeyEvent(android.view.KeyEvent)
    public final void onFocusChanged(boolean,int,android.graphics.Rect)
    public final int getAccessibilityFocusedVirtualViewId()
    public final int getKeyboardFocusedVirtualViewId()
    public void onVirtualViewKeyboardFocusChanged(int,boolean)
    public boolean performAction(int,int,android.os.Bundle)
    public abstract int getVirtualViewAt(float,float)
    public void onPopulateEventForVirtualView()
    public void onPopulateEventForHost()
    public void onPopulateNodeForHost(androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
    public final void getBoundsInParent(int,android.graphics.Rect)
    public final androidx.collection.SparseArrayCompat getAllNodes()
    public final boolean clickKeyboardFocusedVirtualView()
    public final android.view.accessibility.AccessibilityEvent createEvent(int,int)
    public final android.view.accessibility.AccessibilityEvent createEventForHost(int)
    public final android.view.accessibility.AccessibilityEvent createEventForChild(int,int)
    public final androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForHost()
    public final boolean performActionForHost(int,android.os.Bundle)
    public final boolean performActionForChild(int,int,android.os.Bundle)
    public final boolean isVisibleToUser(android.graphics.Rect)
    public final boolean requestAccessibilityFocus(int)
androidx.appcompat.widget.AppCompatCompoundButtonHelper:
    public void setSupportButtonTintList(android.content.res.ColorStateList)
    public android.content.res.ColorStateList getSupportButtonTintList()
    public void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
    public android.graphics.PorterDuff$Mode getSupportButtonTintMode()
    public void onSetButtonDrawable()
com.google.android.material.resources.TextAppearanceConfig
androidx.core.graphics.TypefaceCompatBaseImpl$1
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener:
    public abstract void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.fragment.app.FragmentManagerState$1:
    public androidx.fragment.app.FragmentManagerState createFromParcel(android.os.Parcel)
    public androidx.fragment.app.FragmentManagerState[] newArray(int)
androidx.arch.core.internal.SafeIterableMap:
    public int size()
    public java.util.Iterator descendingIterator()
    public java.util.Map$Entry eldest()
    public java.util.Map$Entry newest()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper:
    public void loadFromAttributes(android.util.AttributeSet,int)
    public void setAutoSizeTextTypeWithDefaults(int)
    public void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)
    public void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)
    public int getAutoSizeTextType()
    public int getAutoSizeStepGranularity()
    public int getAutoSizeMinTextSize()
    public int getAutoSizeMaxTextSize()
    public int[] getAutoSizeTextAvailableSizes()
    public void initTempTextPaint(int)
    public android.text.StaticLayout createLayout(java.lang.CharSequence,android.text.Layout$Alignment,int,int)
    public boolean isAutoSizeEnabled()
    public final void setupAutoSizeUniformPresetSizes(android.content.res.TypedArray)
    public final void clearAutoSizeConfiguration()
    public final void setRawTextSize(float)
    public final boolean suggestedSizeFitsInSpace(int,android.graphics.RectF)
    public final android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int)
    public final android.text.StaticLayout createStaticLayoutForMeasuringPre23(java.lang.CharSequence,android.text.Layout$Alignment,int)
    public final android.text.StaticLayout createStaticLayoutForMeasuringPre16(java.lang.CharSequence,android.text.Layout$Alignment,int)
androidx.lifecycle.SavedStateHandleController:
    public static androidx.lifecycle.SavedStateHandleController create(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle,java.lang.String,android.os.Bundle)
    public boolean isAttached()
    public androidx.lifecycle.SavedStateHandle getHandle()
androidx.cursoradapter.widget.CursorFilter$CursorFilterClient:
    public abstract java.lang.CharSequence convertToString(android.database.Cursor)
    public abstract android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)
    public abstract android.database.Cursor getCursor()
    public abstract void changeCursor(android.database.Cursor)
androidx.constraintlayout.solver.widgets.Rectangle
com.google.android.material.chip.Chip:
    public static synthetic com.google.android.material.chip.ChipDrawable access$000(com.google.android.material.chip.Chip)
    public static synthetic boolean access$302(com.google.android.material.chip.Chip,boolean)
    public static synthetic android.graphics.Rect access$500()
    public boolean performCloseIconClick()
    public boolean isCloseIconVisible()
    public boolean shouldEnsureMinTouchTargetSize()
    public final void initMinTouchTarget(android.content.Context,android.util.AttributeSet,int)
    public final void validateAttributes(android.util.AttributeSet)
    public final void initOutlineProvider()
    public final void ensureChipDrawableHasCallback()
    public final void unapplyChipDrawable(com.google.android.material.chip.ChipDrawable)
    public final void applyChipDrawable(com.google.android.material.chip.ChipDrawable)
    public final boolean handleAccessibilityExit(android.view.MotionEvent)
    public final int[] createCloseIconDrawableState()
    public final void insetChipBackgroundDrawable(int,int,int,int)
androidx.databinding.ViewDataBinding$WeakPropertyListener
kotlin.internal.PlatformImplementations:
    public kotlin.random.Random defaultPlatformRandom()
androidx.navigation.NavArgument$Builder
androidx.customview.widget.ExploreByTouchHelper$2:
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat get(androidx.collection.SparseArrayCompat,int)
    public int size(androidx.collection.SparseArrayCompat)
    public int size(java.lang.Object)
    public java.lang.Object get(java.lang.Object,int)
androidx.transition.ChangeBounds$1:
    public void set(android.graphics.drawable.Drawable,android.graphics.PointF)
    public android.graphics.PointF get(android.graphics.drawable.Drawable)
androidx.core.app.ActivityRecreator:
    public static boolean queueOnStopIfNecessary(java.lang.Object,android.app.Activity)
    public static java.lang.reflect.Method getPerformStopActivity3Params(java.lang.Class)
    public static java.lang.reflect.Method getPerformStopActivity2Params(java.lang.Class)
    public static java.lang.reflect.Method getRequestRelaunchActivityMethod(java.lang.Class)
    public static java.lang.reflect.Field getMainThreadField()
    public static java.lang.reflect.Field getTokenField()
    public static java.lang.Class getActivityThreadClass()
androidx.transition.ChangeBounds$ViewBounds:
    public void setTopLeft(android.graphics.PointF)
    public void setBottomRight(android.graphics.PointF)
    public final void setLeftTopRightBottom()
androidx.databinding.BaseObservable:
    public void addOnPropertyChangedCallback(androidx.databinding.Observable$OnPropertyChangedCallback)
    public void removeOnPropertyChangedCallback(androidx.databinding.Observable$OnPropertyChangedCallback)
    public void notifyPropertyChanged(int)
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions:
    public java.util.Map$Entry next()
androidx.navigation.NavBackStackEntry$1
kotlin.jvm.functions.Function1
android.support.v4.media.session.MediaControllerCompat$PlaybackInfo
androidx.transition.PropertyValuesHolderUtils
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem:
    public int getGapForSpan(int)
androidx.core.graphics.TypefaceCompatApi24Impl:
    public static boolean isUsable()
    public static java.lang.Object newFamily()
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup:
    public int getSpan(int)
    public void setSpan(int,androidx.recyclerview.widget.StaggeredGridLayoutManager$Span)
    public int sizeForPosition(int)
    public final void offsetFullSpansForRemoval(int,int)
    public final void offsetFullSpansForAddition(int,int)
    public final int invalidateFullSpansAfter(int)
androidx.recyclerview.widget.LinearLayoutManager$SavedState:
    public void invalidateAnchor()
com.google.android.material.datepicker.Month:
    public long getStableId()
    public long getDay(int)
    public java.lang.String getLongName()
androidx.appcompat.widget.DropDownListView:
    public final void clickPressedItem(android.view.View,int)
    public final void drawSelectorCompat(android.graphics.Canvas)
    public final void positionSelectorLikeTouchCompat(int,android.view.View,float,float)
    public final void positionSelectorLikeFocusCompat(int,android.view.View)
    public final void positionSelectorCompat(int,android.view.View)
    public final void clearPressedItem()
    public final void setPressedItem(android.view.View,int,float,float)
    public final boolean touchModeDrawsInPressedStateCompat()
android.support.v4.media.MediaBrowserCompat$SearchResultReceiver:
    public final java.lang.String mQuery
    public final android.os.Bundle mExtras
    public final android.support.v4.media.MediaBrowserCompat$SearchCallback mCallback
androidx.appcompat.graphics.drawable.DrawerArrowDrawable:
    public void setColor(int)
    public void setBarThickness(float)
    public void setGapSize(float)
    public void setSpinEnabled(boolean)
    public float getProgress()
androidx.coordinatorlayout.widget.CoordinatorLayout:
    public static int resolveGravity(int)
    public static int resolveKeylineGravity(int)
    public static int resolveAnchoredChildGravity(int)
    public static int clamp(int,int,int)
    public final androidx.core.view.WindowInsetsCompat setWindowInsets(androidx.core.view.WindowInsetsCompat)
    public void getDescendantRect(android.view.View,android.graphics.Rect)
    public void recordLastChildRect(android.view.View,android.graphics.Rect)
    public void getLastChildRect(android.view.View,android.graphics.Rect)
    public void getDesiredAnchoredChildRect(android.view.View,int,android.graphics.Rect,android.graphics.Rect)
    public void ensurePreDrawListener()
    public void addPreDrawListener()
    public void removePreDrawListener()
    public void offsetChildToAnchor(android.view.View,int)
    public androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)
    public androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    public androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateDefaultLayoutParams()
    public final androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsetsToBehaviors(androidx.core.view.WindowInsetsCompat)
    public final void layoutChildWithAnchor(android.view.View,android.view.View,int)
    public final void layoutChildWithKeyline(android.view.View,int,int)
    public final void layoutChild(android.view.View,int)
    public final void offsetChildByInset(android.view.View,android.graphics.Rect,int)
    public final boolean hasDependencies(android.view.View)
    public android.graphics.Paint mScrimPaint
androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl:
    public void setPrefetchVector(int,int)
    public void clearPrefetchPositions()
androidx.navigation.NavType$9:
    public void put(android.os.Bundle,java.lang.String,boolean[])
    public boolean[] get(android.os.Bundle,java.lang.String)
    public boolean[] parseValue()
androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult:
    public void resetInternal()
androidx.navigation.NavGraphNavigator:
    public androidx.navigation.NavGraph createDestination()
    public androidx.navigation.NavDestination navigate(androidx.navigation.NavGraph,android.os.Bundle,androidx.navigation.NavOptions,androidx.navigation.Navigator$Extras)
androidx.core.view.ViewPropertyAnimatorCompat$2:
    public final synthetic androidx.core.view.ViewPropertyAnimatorCompat this$0
androidx.appcompat.view.menu.ListMenuItemView:
    public void setShortcut(boolean)
    public final void addContentView(android.view.View)
    public final void addContentView(android.view.View,int)
    public final void insertIconView()
    public int mMenuType
com.google.android.material.shape.CornerTreatment:
    public void getCornerPath(com.google.android.material.shape.ShapePath,float,float,android.graphics.RectF,com.google.android.material.shape.CornerSize)
androidx.databinding.ViewDataBinding$WeakMapListener
androidx.arch.core.internal.SafeIterableMap$ListIterator:
    public java.util.Map$Entry next()
    public final androidx.arch.core.internal.SafeIterableMap$Entry nextNode()
androidx.core.provider.FontsContractCompat:
    public static android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources)
    public static java.util.List getCertificates(androidx.core.provider.FontRequest,android.content.res.Resources)
    public static boolean equalsByteArrayList(java.util.List,java.util.List)
    public static java.util.List convertToByteArrayList(android.content.pm.Signature[])
    public static androidx.core.provider.FontsContractCompat$FontInfo[] getFontFromProvider(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal)
androidx.appcompat.graphics.drawable.DrawableWrapper:
    public android.graphics.drawable.Drawable getWrappedDrawable()
    public void setWrappedDrawable(android.graphics.drawable.Drawable)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior:
    public static boolean isBottomSheet(android.view.View)
    public boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,android.view.View)
    public void shrinkOrHide(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)
    public void extendOrShow(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)
    public boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,int)
    public boolean getInsetDodgeRect(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,android.graphics.Rect)
    public final void offsetIfNeeded(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)
    public com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback internalAutoHideCallback
    public com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback internalAutoShrinkCallback
androidx.constraintlayout.widget.ConstraintSet$1
com.czluciusdev.diceroller.DiceFragment$$special$$inlined$viewModels$1:
    public final androidx.fragment.app.Fragment invoke()
androidx.core.app.AppOpsManagerCompat
androidx.recyclerview.widget.LinearLayoutManager:
    public int getOrientation()
    public void setReverseLayout(boolean)
    public int getExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State)
    public androidx.recyclerview.widget.LinearLayoutManager$LayoutState createLayoutState()
    public boolean isSmoothScrollbarEnabled()
    public final void layoutForPredictiveAnimations(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int)
    public final void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)
    public final boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)
    public final boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)
    public final void updateLayoutStateToFillEnd(androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)
    public final void updateLayoutStateToFillStart(androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)
    public final void recycleViewsFromStart(androidx.recyclerview.widget.RecyclerView$Recycler,int,int)
    public final void recycleViewsFromEnd(androidx.recyclerview.widget.RecyclerView$Recycler,int,int)
    public final android.view.View findReferenceChildClosestToEnd(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
    public final android.view.View findReferenceChildClosestToStart(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
    public final android.view.View findPartiallyOrCompletelyInvisibleChildClosestToEnd()
    public final android.view.View findPartiallyOrCompletelyInvisibleChildClosestToStart()
    public final android.view.View findFirstPartiallyOrCompletelyInvisibleChild()
    public final android.view.View findLastPartiallyOrCompletelyInvisibleChild()
    public boolean mRecycleChildrenOnDetach
androidx.navigation.ActivityNavigator$Destination:
    public final android.content.Intent getIntent()
    public final androidx.navigation.ActivityNavigator$Destination setTargetPackage(java.lang.String)
    public final androidx.navigation.ActivityNavigator$Destination setComponentName(android.content.ComponentName)
    public final android.content.ComponentName getComponent()
    public final androidx.navigation.ActivityNavigator$Destination setAction(java.lang.String)
    public final java.lang.String getAction()
    public final androidx.navigation.ActivityNavigator$Destination setData(android.net.Uri)
    public final androidx.navigation.ActivityNavigator$Destination setDataPattern(java.lang.String)
    public final java.lang.String getDataPattern()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat:
    public static android.graphics.PorterDuff$Mode parseTintModeCompat(int,android.graphics.PorterDuff$Mode)
    public java.lang.Object getTargetByName(java.lang.String)
    public void setAllowCaching(boolean)
    public final void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)
    public final void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    public final boolean needMirroring()
    public android.graphics.drawable.Drawable$ConstantState mCachedConstantStateDelegate
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1:
    public androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState createFromParcel(android.os.Parcel)
    public androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState[] newArray(int)
kotlin.ranges.RangesKt__RangesJVMKt
com.google.android.material.button.MaterialButton:
    public final boolean isLayoutRTL()
    public final void resetIconDrawable(boolean)
androidx.transition.Visibility:
    public void setMode(int)
    public void captureStartValues(androidx.transition.TransitionValues)
    public android.animation.Animator onAppear(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues)
    public abstract android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues)
    public android.animation.Animator onDisappear(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues,int)
kotlin.UninitializedPropertyAccessException:
    public void <init>()
androidx.fragment.app.FragmentTransitionCompat21$4:
    public final synthetic androidx.fragment.app.FragmentTransitionCompat21 this$0
androidx.constraintlayout.solver.LinearSystem$Row:
    public abstract androidx.constraintlayout.solver.SolverVariable getPivotCandidate(androidx.constraintlayout.solver.LinearSystem,boolean[])
    public abstract void clear()
    public abstract void initFromRow(androidx.constraintlayout.solver.LinearSystem$Row)
    public abstract androidx.constraintlayout.solver.SolverVariable getKey()
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior:
    public static int getAppBarLayoutOffset(com.google.android.material.appbar.AppBarLayout)
    public float getOverlapRatioForOffset(android.view.View)
    public int getScrollRange(android.view.View)
    public synthetic bridge android.view.View findFirstDependency(java.util.List)
    public final void offsetChildAsNeeded(android.view.View,android.view.View)
    public final void updateLiftedStateIfNeeded(android.view.View,android.view.View)
com.google.android.material.shape.MaterialShapeDrawable:
    public void <init>(android.content.Context,android.util.AttributeSet,int,int)
    public static int modulateAlpha(int,int)
    public static synthetic com.google.android.material.shape.ShapePath$ShadowCompatOperation[] access$000(com.google.android.material.shape.MaterialShapeDrawable)
    public static synthetic com.google.android.material.shape.ShapePath$ShadowCompatOperation[] access$100(com.google.android.material.shape.MaterialShapeDrawable)
    public synthetic void <init>(com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState,com.google.android.material.shape.MaterialShapeDrawable$1)
    public static synthetic boolean access$302(com.google.android.material.shape.MaterialShapeDrawable,boolean)
    public com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
    public android.content.res.ColorStateList getFillColor()
    public android.content.res.ColorStateList getTintList()
    public void setStrokeWidth(float)
    public void setPadding(int,int,int,int)
    public boolean isElevationOverlayEnabled()
    public float getParentAbsoluteElevation()
    public void setParentAbsoluteElevation(float)
    public float getElevation()
    public float getTranslationZ()
    public float getZ()
    public int getShadowRadius()
    public void drawShape(android.graphics.Canvas,android.graphics.Paint,android.graphics.Path,android.graphics.RectF)
    public float getTopRightCornerResolvedSize()
    public float getBottomLeftCornerResolvedSize()
    public float getBottomRightCornerResolvedSize()
    public boolean isRoundRect()
    public final boolean requiresCompatShadow()
    public final void invalidateSelfIgnoreShape()
    public final boolean hasCompatShadow()
    public final boolean hasFill()
    public final void drawFillShape(android.graphics.Canvas)
    public final void drawStrokeShape(android.graphics.Canvas)
    public final void prepareCanvasForShadow(android.graphics.Canvas)
    public final void drawCompatShadow(android.graphics.Canvas)
    public final void calculateStrokePath()
    public final android.graphics.PorterDuffColorFilter calculatePaintColorTintFilter(android.graphics.Paint,boolean)
    public final android.graphics.PorterDuffColorFilter calculateTintColorTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,boolean)
androidx.recyclerview.widget.RecyclerView$ItemAnimator:
    public long getMoveDuration()
    public long getAddDuration()
    public long getRemoveDuration()
    public long getChangeDuration()
    public void setListener(androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener)
    public androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPostLayoutInformation(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public abstract boolean animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public abstract boolean animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public abstract boolean animatePersistence(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public abstract void runPendingAnimations()
    public void onAnimationFinished()
    public abstract boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo obtainHolderInfo()
androidx.constraintlayout.solver.widgets.Chain
com.google.android.material.textfield.TextInputLayout:
    public static void updateCounterContentDescription(android.content.Context,android.widget.TextView,int,int,boolean)
    public static void setIconOnClickListener(com.google.android.material.internal.CheckableImageButton,android.view.View$OnClickListener,android.view.View$OnLongClickListener)
    public static void setIconOnLongClickListener(com.google.android.material.internal.CheckableImageButton,android.view.View$OnLongClickListener)
    public static synthetic boolean access$000(com.google.android.material.textfield.TextInputLayout)
    public static synthetic com.google.android.material.internal.CheckableImageButton access$100(com.google.android.material.textfield.TextInputLayout)
    public void updateLabelState(boolean)
    public boolean isProvidingHint()
    public boolean isHelperTextEnabled()
    public boolean isStartIconVisible()
    public void addOnEndIconChangedListener(com.google.android.material.textfield.TextInputLayout$OnEndIconChangedListener)
    public final void assignBoxBackgroundByMode()
    public final void setEditTextBoxBackground()
    public final boolean shouldUseEditTextBackgroundForBoxBackground()
    public final android.graphics.Rect calculateCollapsedTextBounds(android.graphics.Rect)
    public final android.graphics.Rect calculateExpandedTextBounds(android.graphics.Rect)
    public final int calculateExpandedLabelTop(android.graphics.Rect,float)
    public final int calculateExpandedLabelBottom(android.graphics.Rect,android.graphics.Rect,float)
    public final boolean isSingleLineFilledTextField()
    public final int calculateBoxBackgroundColor()
    public final void applyBoxUnderlineAttributes()
    public final boolean canDrawOutlineStroke()
    public final boolean canDrawStroke()
    public final boolean updateEditTextHeightBasedOnIcon()
    public final void dispatchOnEditTextAttached()
    public final boolean hasStartIcon()
    public final void dispatchOnEndIconChanged(int)
    public final void tintEndIconOnError(boolean)
    public final void updateBoxUnderlineBounds(android.graphics.Rect)
    public final void drawHint(android.graphics.Canvas)
    public final void drawBoxUnderline(android.graphics.Canvas)
    public final void collapseHint(boolean)
    public final void closeCutout()
    public final void applyCutoutPadding(android.graphics.RectF)
    public final void expandHint(boolean)
com.google.android.material.datepicker.DateValidatorPointForward:
    public static com.google.android.material.datepicker.DateValidatorPointForward from(long)
kotlin.Pair:
    public final java.lang.Object getFirst()
    public final java.lang.Object getSecond()
com.google.android.material.datepicker.YearGridAdapter:
    public static synthetic com.google.android.material.datepicker.MaterialCalendar access$000(com.google.android.material.datepicker.YearGridAdapter)
    public com.google.android.material.datepicker.YearGridAdapter$ViewHolder onCreateViewHolder(android.view.ViewGroup)
    public void onBindViewHolder(com.google.android.material.datepicker.YearGridAdapter$ViewHolder,int)
    public int getYearForPosition(int)
    public final android.view.View$OnClickListener createYearClickListener(int)
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup:
    public static int findFirstKeyLessThan(android.util.SparseIntArray,int)
    public abstract int getSpanSize(int)
    public void invalidateSpanIndexCache()
    public void invalidateSpanGroupIndexCache()
    public abstract int getSpanIndex(int,int)
androidx.recyclerview.widget.FastScroller:
    public void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)
    public void requestRedraw()
    public void hide(int)
    public void updateScrollPosition(int,int)
    public final void setupCallbacks()
    public final void destroyCallbacks()
    public final boolean isLayoutRTL()
    public final void resetHideDelay(int)
    public final void drawVerticalScrollbar(android.graphics.Canvas)
    public final void drawHorizontalScrollbar(android.graphics.Canvas)
    public final void verticalScrollTo(float)
    public final void horizontalScrollTo(float)
    public final int[] getVerticalRange()
    public final int[] getHorizontalRange()
com.google.android.material.bottomappbar.BottomAppBar$AnimationListener
android.support.v4.media.MediaMetadataCompat$1:
    public android.support.v4.media.MediaMetadataCompat createFromParcel(android.os.Parcel)
    public android.support.v4.media.MediaMetadataCompat[] newArray(int)
com.czluciusdev.diceroller.DiceViewModel:
    public final androidx.lifecycle.MutableLiveData getTotalDiceNumber()
    public final androidx.lifecycle.LiveData getDiceNumberString()
    public final java.util.Collection getDiceCollection()
androidx.core.provider.FontRequest:
    public java.lang.String getProviderAuthority()
    public java.lang.String getProviderPackage()
    public java.lang.String getQuery()
    public java.util.List getCertificates()
    public int getCertificatesArrayResId()
    public java.lang.String getIdentifier()
kotlin.coroutines.CombinedContext$toString$1:
    public final java.lang.String invoke(java.lang.String,kotlin.coroutines.CoroutineContext$Element)
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span:
    public int getStartLine()
    public int getEndLine()
    public void cacheReferenceLineAndClear(boolean,int)
    public void invalidateCache()
    public void setLine(int)
    public int getDeletedSize()
    public void onOffset(int)
    public int findOnePartiallyOrCompletelyVisibleChild(int,int,boolean,boolean,boolean)
android.support.v4.media.MediaBrowserCompat$ItemCallback
androidx.loader.app.LoaderManagerImpl$LoaderInfo:
    public void getLoader()
    public void markForRedelivery()
    public void destroy(boolean)
    public void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
    public final int mId
    public final android.os.Bundle mArgs
    public final androidx.loader.content.Loader mLoader
    public androidx.loader.content.Loader mPriorLoader
kotlin.coroutines.CoroutineContext$plus$1:
    public final kotlin.coroutines.CoroutineContext invoke(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element)
com.google.android.material.shape.MaterialShapeDrawable$1:
    public void onCornerPathCreated(com.google.android.material.shape.ShapePath,android.graphics.Matrix,int)
    public void onEdgePathCreated(com.google.android.material.shape.ShapePath,android.graphics.Matrix,int)
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB:
    public final synthetic androidx.appcompat.view.menu.MenuItemWrapperICS this$0
androidx.recyclerview.widget.ChildHelper:
    public void addView(android.view.View,boolean)
    public void removeView(android.view.View)
    public void removeViewAt(int)
    public void removeAllViewsUnfiltered()
    public android.view.View findHiddenNonRemovedView(int)
    public void hide(android.view.View)
    public void unhide(android.view.View)
    public boolean removeViewIfHidden(android.view.View)
com.czluciusdev.diceroller.DiceViewModel$diceNumberString$1:
    public final java.lang.String apply(java.lang.Integer)
android.support.v4.media.session.PlaybackStateCompatApi21$CustomAction
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator:
    public androidx.core.graphics.PathParser$PathDataNode[] evaluate(float,androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[])
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams:
    public float dimensionRatioValue
androidx.lifecycle.ViewModelProvider
androidx.loader.app.LoaderManagerImpl:
    public static void <clinit>()
    public void markForRedelivery()
    public static boolean DEBUG
androidx.loader.app.LoaderManager:
    public abstract void markForRedelivery()
androidx.core.provider.SelfDestructiveThread$2:
    public final synthetic androidx.core.provider.SelfDestructiveThread this$0
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl:
    public boolean dispatchOnCreate()
androidx.core.graphics.TypefaceCompatApi26Impl:
    public java.lang.Class obtainFontFamily()
    public java.lang.reflect.Constructor obtainFontFamilyCtor(java.lang.Class)
    public java.lang.reflect.Method obtainFreezeMethod(java.lang.Class)
    public java.lang.reflect.Method obtainAbortCreationMethod(java.lang.Class)
    public final boolean addFontFromBuffer(java.lang.Object,java.nio.ByteBuffer,int,int,int)
androidx.core.graphics.drawable.IconCompat:
    public static java.lang.String typeToString(int)
    public static java.lang.String getResPackage(android.graphics.drawable.Icon)
    public static int getResId(android.graphics.drawable.Icon)
    public java.lang.String getResPackage()
    public int getResId()
    public void onPreParceling(boolean)
    public void onPostParceling()
androidx.core.content.res.GradientColorInflaterCompat
com.google.android.material.textview.MaterialTextView:
    public static boolean canApplyTextAppearanceLineHeight(android.content.Context)
    public static boolean viewAttrsHasLineHeight(android.content.Context,android.content.res.Resources$Theme,android.util.AttributeSet,int,int)
    public static int findViewAppearanceResourceId(android.content.res.Resources$Theme,android.util.AttributeSet,int,int)
androidx.recyclerview.widget.GapWorker$1:
    public int compare(androidx.recyclerview.widget.GapWorker$Task,androidx.recyclerview.widget.GapWorker$Task)
androidx.appcompat.widget.TintContextWrapper:
    public static boolean shouldWrap(android.content.Context)
androidx.customview.view.AbsSavedState:
    public void <init>()
    public final android.os.Parcelable getSuperState()
com.czluciusdev.diceroller.DataBinderMapperImpl:
    public androidx.databinding.ViewDataBinding getDataBinder(androidx.databinding.DataBindingComponent,android.view.View[],int)
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState$1:
    public androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState createFromParcel(android.os.Parcel)
    public androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState[] newArray(int)
androidx.appcompat.widget.AppCompatProgressBarHelper:
    public android.graphics.Bitmap getSampleTile()
    public final android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable)
    public final android.graphics.drawable.shapes.Shape getDrawableShape()
android.support.v4.media.MediaDescriptionCompat$1:
    public android.support.v4.media.MediaDescriptionCompat createFromParcel(android.os.Parcel)
    public android.support.v4.media.MediaDescriptionCompat[] newArray(int)
com.google.android.material.shape.ShapePath$PathLineOperation:
    public static synthetic float access$002(com.google.android.material.shape.ShapePath$PathLineOperation,float)
    public static synthetic float access$102(com.google.android.material.shape.ShapePath$PathLineOperation,float)
    public static synthetic float access$100(com.google.android.material.shape.ShapePath$PathLineOperation)
    public static synthetic float access$000(com.google.android.material.shape.ShapePath$PathLineOperation)
androidx.appcompat.view.menu.MenuItemImpl:
    public boolean invoke()
    public int getOrdering()
    public java.lang.String getShortcutLabel()
    public void setSubMenu(androidx.appcompat.view.menu.SubMenuBuilder)
    public java.lang.CharSequence getTitleForItemView(androidx.appcompat.view.menu.MenuView$ItemView)
    public void setExclusiveCheckable(boolean)
    public void setMenuInfo(android.view.ContextMenu$ContextMenuInfo)
    public void actionFormatChanged()
    public boolean shouldShowIcon()
    public boolean requestsActionButton()
    public boolean requiresActionButton()
    public boolean showsTextAsAction()
    public androidx.core.internal.view.SupportMenuItem setActionView(int)
    public androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int)
    public void setActionViewExpanded(boolean)
    public java.lang.Runnable mItemCallback
com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState:
    public com.google.android.material.ripple.RippleDrawableCompat newDrawable()
android.support.v4.media.RatingCompat$1:
    public android.support.v4.media.RatingCompat createFromParcel(android.os.Parcel)
    public android.support.v4.media.RatingCompat[] newArray(int)
androidx.versionedparcelable.VersionedParcel:
    public boolean isStream()
    public abstract void writeByteArray(byte[])
    public abstract void writeCharSequence(java.lang.CharSequence)
    public abstract void writeInt(int)
    public abstract void writeString(java.lang.String)
    public abstract void writeParcelable(android.os.Parcelable)
    public abstract void writeBoolean(boolean)
    public abstract int readInt()
    public abstract java.lang.String readString()
    public abstract byte[] readByteArray()
    public abstract java.lang.CharSequence readCharSequence()
    public abstract android.os.Parcelable readParcelable()
    public abstract boolean readBoolean()
    public void setSerializationFlags()
    public void writeBoolean(boolean,int)
    public void writeByteArray(byte[],int)
    public void writeCharSequence(java.lang.CharSequence,int)
    public void writeString(java.lang.String,int)
    public java.lang.String readString(java.lang.String,int)
    public byte[] readByteArray(byte[],int)
    public void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int)
    public androidx.versionedparcelable.VersionedParcelable readVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int)
    public androidx.versionedparcelable.VersionedParcelable readFromParcel(java.lang.String,androidx.versionedparcelable.VersionedParcel)
    public void writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel)
    public final void writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable)
androidx.core.provider.FontsContractCompat$3:
    public void onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)
androidx.core.text.TextDirectionHeuristicCompat:
    public abstract boolean isRtl(java.lang.CharSequence,int,int)
androidx.customview.widget.ExploreByTouchHelper$1:
    public void obtainBounds(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,android.graphics.Rect)
androidx.core.app.SharedElementCallback:
    public abstract void onSharedElementStart(java.util.List,java.util.List,java.util.List)
    public abstract void onSharedElementEnd(java.util.List,java.util.List,java.util.List)
    public abstract void onMapSharedElements(java.util.List,java.util.Map)
com.google.android.material.stateful.ExtendableSavedState$1:
    public com.google.android.material.stateful.ExtendableSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public com.google.android.material.stateful.ExtendableSavedState createFromParcel(android.os.Parcel)
    public com.google.android.material.stateful.ExtendableSavedState[] newArray(int)
androidx.recyclerview.widget.OpReorderer:
    public void reorderOps(java.util.List)
    public void swapMoveRemove(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    public void swapMoveUpdate(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    public final void swapMoveOp(java.util.List,int,int)
    public final void swapMoveAdd(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    public final int getLastMoveOutOfOrder(java.util.List)
android.support.v4.media.MediaMetadataCompatApi21
androidx.transition.ViewUtilsApi21:
    public static void <clinit>()
    public static boolean sTryHiddenSetAnimationMatrix
androidx.appcompat.view.SupportMenuInflater$MenuState:
    public void resetGroup()
    public void readGroup(android.util.AttributeSet)
    public void readItem(android.util.AttributeSet)
    public void addItem()
    public boolean hasAddedItem()
    public final char getShortcut(java.lang.String)
androidx.recyclerview.widget.GridLayoutManager$LayoutParams:
    public int getSpanIndex()
    public int getSpanSize()
com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable:
    public static synthetic boolean access$100(com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable)
    public static synthetic boolean access$102(com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable,boolean)
androidx.appcompat.view.menu.StandardMenuPopup:
    public final boolean tryShow()
androidx.lifecycle.LifecycleCoroutineScopeImpl:
    public androidx.lifecycle.Lifecycle getLifecycle$lifecycle_runtime_ktx_release()
    public kotlin.coroutines.CoroutineContext getCoroutineContext()
    public final androidx.lifecycle.Lifecycle lifecycle
    public final kotlin.coroutines.CoroutineContext coroutineContext
androidx.core.app.ActivityOptionsCompat
androidx.customview.widget.FocusStrategy$BoundsAdapter:
    public abstract void obtainBounds(java.lang.Object,android.graphics.Rect)
androidx.transition.RectEvaluator:
    public android.graphics.Rect evaluate(float,android.graphics.Rect,android.graphics.Rect)
    public android.graphics.Rect mRect
com.google.android.material.shape.ShapePath:
    public void reset(float,float)
    public com.google.android.material.shape.ShapePath$ShadowCompatOperation createShadowCompatOperation(android.graphics.Matrix)
    public float getStartX()
    public float getStartY()
    public float getEndX()
    public float getEndY()
    public final void addShadowCompatOperation(com.google.android.material.shape.ShapePath$ShadowCompatOperation,float,float)
    public final float getCurrentShadowAngle()
    public final float getEndShadowAngle()
    public final void setStartX(float)
    public final void setStartY(float)
    public final void setEndX(float)
    public final void setEndY(float)
    public final void setCurrentShadowAngle(float)
    public final void setEndShadowAngle(float)
androidx.databinding.DataBindingUtil:
    public static androidx.databinding.ViewDataBinding inflate(android.view.LayoutInflater,int,android.view.ViewGroup,boolean)
    public static androidx.databinding.ViewDataBinding inflate(android.view.LayoutInflater,int,android.view.ViewGroup,boolean,androidx.databinding.DataBindingComponent)
    public static androidx.databinding.ViewDataBinding bind(androidx.databinding.DataBindingComponent,android.view.View[],int)
    public static androidx.databinding.ViewDataBinding bindToAddedViews(androidx.databinding.DataBindingComponent,android.view.ViewGroup,int,int)
androidx.core.text.PrecomputedTextCompat:
    public static void <clinit>()
    public android.text.PrecomputedText getPrecomputedText()
    public androidx.core.text.PrecomputedTextCompat$Params getParams()
    public final android.text.Spannable mText
    public final androidx.core.text.PrecomputedTextCompat$Params mParams
    public final android.text.PrecomputedText mWrapped
    public static final java.lang.Object sLock
    public static java.util.concurrent.Executor sExecutor
androidx.appcompat.widget.AbsActionBarView:
    public static int next(int,int,boolean)
androidx.core.view.LayoutInflaterCompat
android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat
androidx.core.view.MotionEventCompat
androidx.core.view.NestedScrollingChildHelper:
    public void setNestedScrollingEnabled(boolean)
    public boolean isNestedScrollingEnabled()
    public boolean hasNestedScrollingParent()
    public boolean startNestedScroll(int)
    public void stopNestedScroll()
    public boolean dispatchNestedScroll(int,int,int,int,int[],int)
    public void dispatchNestedScroll(int,int,int,int,int[],int,int[])
    public boolean dispatchNestedPreScroll(int,int,int[],int[])
    public final void setNestedScrollingParentForType(int,android.view.ViewParent)
    public final int[] getTempNestedScrollConsumed()
com.google.android.material.internal.CollapsingTextHelper:
    public static boolean isClose(float,float)
    public void setTextSizeInterpolator(android.animation.TimeInterpolator)
    public void setPositionInterpolator(android.animation.TimeInterpolator)
    public void setExpandedTextSize(float)
    public void setExpandedTextColor(android.content.res.ColorStateList)
    public void setExpandedBounds(int,int,int,int)
    public void setExpandedBounds(android.graphics.Rect)
    public void setCollapsedBounds(int,int,int,int)
    public void setCollapsedBounds(android.graphics.Rect)
    public void getCollapsedTextActualBounds(android.graphics.RectF)
    public float getExpandedTextHeight()
    public void setExpandedTextGravity(int)
    public void setCollapsedTextGravity(int)
    public void setCollapsedTextAppearance(int)
    public void setCollapsedTypeface(android.graphics.Typeface)
    public final boolean setState(int[])
    public final boolean isStateful()
    public float getExpansionFraction()
    public void draw(android.graphics.Canvas)
    public void setText(java.lang.CharSequence)
    public android.content.res.ColorStateList getCollapsedTextColor()
    public final void getTextPaintExpanded(android.text.TextPaint)
    public final void getTextPaintCollapsed(android.text.TextPaint)
    public final boolean setCollapsedTypefaceInternal(android.graphics.Typeface)
    public final boolean setExpandedTypefaceInternal(android.graphics.Typeface)
    public final void calculateCurrentOffsets()
    public final int getCurrentExpandedTextColor()
    public final void calculateBaseOffsets()
    public final void interpolateBounds(float)
    public final void ensureExpandedTexture()
    public final void clearTexture()
    public com.google.android.material.resources.CancelableFontCallback expandedFontCallback
    public float expandedShadowRadius
    public float expandedShadowDx
    public float expandedShadowDy
    public android.content.res.ColorStateList expandedShadowColor
androidx.appcompat.widget.AppCompatRadioButton:
    public void <init>(android.content.Context,android.util.AttributeSet)
androidx.navigation.ui.AppBarConfiguration$Builder
androidx.appcompat.app.AppCompatDelegateImpl:
    public void <init>(android.app.Activity,androidx.appcompat.app.AppCompatCallback)
    public void <init>(android.app.Dialog,androidx.appcompat.app.AppCompatCallback)
    public void attachBaseContext(android.content.Context)
    public void onPostCreate(android.os.Bundle)
    public androidx.appcompat.app.ActionBar getSupportActionBar()
    public final androidx.appcompat.app.ActionBar peekSupportActionBar()
    public android.view.MenuInflater getMenuInflater()
    public android.view.View findViewById(int)
    public void onConfigurationChanged(android.content.res.Configuration)
    public void onStart()
    public void onPostResume()
    public void onSaveInstanceState(android.os.Bundle)
    public void onDestroy()
    public void setTheme(int)
    public void onSubDecorInstalled()
    public final java.lang.CharSequence getTitle()
    public void onPanelClosed(int)
    public void onMenuOpened(int)
    public androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback)
    public androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback)
    public boolean isHandleNativeActionModesEnabled()
    public boolean onBackPressed()
    public boolean onKeyShortcut(int,android.view.KeyEvent)
    public boolean onKeyUp(int,android.view.KeyEvent)
    public boolean onKeyDown(int,android.view.KeyEvent)
    public android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
    public void closePanel(int)
    public void dismissPopups()
    public int getLocalNightMode()
    public int mapNightMode(int)
    public final androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate()
    public final void cleanupAutoManagers()
    public final android.view.ViewGroup createSubDecor()
    public final void applyFixedSizeWindow()
    public final boolean shouldInheritContext(android.view.ViewParent)
    public final androidx.appcompat.app.AppCompatActivity tryUnwrapContext()
    public final boolean initializePanelDecor(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)
    public final void reopenMenu(boolean)
    public final boolean initializePanelMenu(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)
    public final boolean initializePanelContent(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)
    public final boolean onKeyDownPanel(int,android.view.KeyEvent)
    public final boolean onKeyUpPanel(int,android.view.KeyEvent)
    public final int sanitizeWindowFeatureId(int)
    public final int calculateNightMode()
    public final boolean updateForNightMode(int,boolean)
    public final void updateResourcesConfigurationForNightMode(int,boolean)
    public final androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoBatteryNightModeManager()
    public final boolean isActivityManifestHandlingUiMode()
com.google.android.material.snackbar.BaseTransientBottomBar$BehaviorDelegate:
    public boolean canSwipeDismissView(android.view.View)
    public void onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)
    public com.google.android.material.snackbar.SnackbarManager$Callback managerCallback
com.google.android.material.floatingactionbutton.FloatingActionButton$ShadowDelegateImpl:
    public void setShadowPadding(int,int,int,int)
    public void setBackgroundDrawable(android.graphics.drawable.Drawable)
    public boolean isCompatPaddingEnabled()
com.google.android.material.animation.MatrixEvaluator:
    public android.graphics.Matrix evaluate(float,android.graphics.Matrix,android.graphics.Matrix)
androidx.transition.PathProperty:
    public java.lang.Float get()
    public void set(java.lang.Object,java.lang.Float)
com.google.android.material.internal.CheckableImageButton$SavedState:
    public final void readFromParcel(android.os.Parcel)
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate:
    public void saveOriginalDelegate(android.view.View)
    public androidx.core.view.AccessibilityDelegateCompat getAndRemoveOriginalDelegateForItem(android.view.View)
androidx.core.graphics.TypefaceCompatUtil
androidx.appcompat.app.AppCompatDelegateImpl$1:
    public final boolean shouldWrapException(java.lang.Throwable)
androidx.appcompat.app.ResourcesFlusher
androidx.databinding.ViewDataBinding$LiveDataListener:
    public androidx.databinding.ViewDataBinding$WeakListener getListener()
    public void addListener(androidx.lifecycle.LiveData)
    public void removeListener(androidx.lifecycle.LiveData)
androidx.appcompat.widget.SearchView$AutoCompleteTextViewReflector:
    public void doBeforeTextChanged(android.widget.AutoCompleteTextView)
    public void doAfterTextChanged(android.widget.AutoCompleteTextView)
    public void ensureImeVisible(android.widget.AutoCompleteTextView,boolean)
kotlin.text.CharsKt
com.google.android.material.bottomappbar.BottomAppBar$3:
    public androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,com.google.android.material.internal.ViewUtils$RelativePadding)
androidx.core.view.accessibility.AccessibilityEventCompat
kotlin.text.StringsKt__IndentKt
androidx.core.content.res.FontResourcesParserCompat
com.google.android.material.datepicker.MaterialCalendar$OnDayClickListener:
    public abstract void onDayClick(long)
androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable:
    public void cancel()
    public void post()
androidx.fragment.app.FragmentActivity$HostCallbacks:
    public boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment)
    public android.view.LayoutInflater onGetLayoutInflater()
    public androidx.fragment.app.FragmentActivity onGetHost()
    public void onSupportInvalidateOptionsMenu()
    public void onAttachFragment(androidx.fragment.app.Fragment)
    public java.lang.Object onGetHost()
androidx.recyclerview.widget.AdapterHelper:
    public void <init>(androidx.recyclerview.widget.AdapterHelper$Callback,boolean)
    public void reset()
    public boolean hasAnyUpdateTypes(int)
    public int findPositionOffset(int)
    public int applyPendingUpdatesToPosition(int)
    public boolean hasUpdates()
    public final void applyMove(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    public final void applyRemove(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    public final void applyUpdate(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    public final void applyAdd(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    public java.lang.Runnable mOnItemProcessedCallback
androidx.core.widget.TextViewCompat
androidx.core.graphics.PathParser
com.google.android.material.datepicker.MaterialCalendarGridView:
    public static boolean skipMonth(java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Long)
    public static int horizontalMidPoint(android.view.View)
    public final void gainFocus(int,android.graphics.Rect)
androidx.core.graphics.TypefaceCompatBaseImpl$2
androidx.core.content.PermissionChecker
androidx.navigation.NavType$10:
    public void put(android.os.Bundle,java.lang.String,java.lang.String)
    public java.lang.String get(android.os.Bundle,java.lang.String)
    public java.lang.String parseValue(java.lang.String)
androidx.cardview.widget.CardViewDelegate:
    public abstract void setMinWidthHeightInternal(int,int)
    public abstract android.view.View getCardView()
androidx.transition.AutoTransition:
    public final void init()
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager
androidx.lifecycle.Lifecycle:
    public abstract void removeObserver(androidx.lifecycle.LifecycleObserver)
    public abstract androidx.lifecycle.Lifecycle$State getCurrentState()
    public java.util.concurrent.atomic.AtomicReference mInternalScopeRef
androidx.appcompat.view.ActionMode:
    public void setTag(java.lang.Object)
    public java.lang.Object getTag()
    public boolean getTitleOptionalHint()
androidx.recyclerview.widget.RecyclerView$OnFlingListener:
    public abstract boolean onFling(int,int)
androidx.recyclerview.widget.GapWorker:
    public static boolean isPrefetchPositionAttached(androidx.recyclerview.widget.RecyclerView,int)
    public void add(androidx.recyclerview.widget.RecyclerView)
    public void remove(androidx.recyclerview.widget.RecyclerView)
    public final void buildTaskList()
    public final void prefetchInnerRecyclerViewWithDeadline(androidx.recyclerview.widget.RecyclerView,long)
    public final void flushTaskWithDeadline(androidx.recyclerview.widget.GapWorker$Task,long)
    public final void flushTasksWithDeadline(long)
androidx.navigation.NavHostController:
    public void setLifecycleOwner(androidx.lifecycle.LifecycleOwner)
    public void setOnBackPressedDispatcher(androidx.activity.OnBackPressedDispatcher)
    public void enableOnBackPressed(boolean)
    public void setViewModelStore(androidx.lifecycle.ViewModelStore)
androidx.constraintlayout.solver.Pools$SimplePool:
    public void releaseAll(java.lang.Object[],int)
androidx.appcompat.widget.AppCompatTextView:
    public final void consumeTextFutureAndSetBlocking()
com.google.android.material.appbar.MaterialToolbar:
    public final void initBackground(android.content.Context)
androidx.appcompat.widget.AppCompatImageHelper:
    public android.content.res.ColorStateList getSupportImageTintList()
    public android.graphics.PorterDuff$Mode getSupportImageTintMode()
    public final boolean shouldApplyFrameworkTintUsingColorFilter()
    public final boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable)
    public androidx.appcompat.widget.TintInfo mInternalImageTint
android.support.v4.media.session.IMediaSession:
    public abstract void registerCallbackListener(android.support.v4.media.session.IMediaControllerCallback)
androidx.fragment.app.FragmentController:
    public static androidx.fragment.app.FragmentController createController(androidx.fragment.app.FragmentHostCallback)
    public androidx.fragment.app.FragmentManager getSupportFragmentManager()
    public androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)
    public void attachHost(androidx.fragment.app.Fragment)
    public android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
    public android.os.Parcelable saveAllState()
    public void restoreSaveState(android.os.Parcelable)
    public void dispatchCreate()
    public void dispatchActivityCreated()
    public void dispatchStart()
    public void dispatchResume()
    public void dispatchPause()
    public void dispatchStop()
    public void dispatchDestroy()
    public void dispatchMultiWindowModeChanged(boolean)
    public void dispatchPictureInPictureModeChanged(boolean)
    public void dispatchConfigurationChanged(android.content.res.Configuration)
    public void dispatchLowMemory()
    public boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
    public boolean dispatchPrepareOptionsMenu(android.view.Menu)
    public boolean dispatchOptionsItemSelected(android.view.MenuItem)
    public boolean dispatchContextItemSelected(android.view.MenuItem)
    public void dispatchOptionsMenuClosed(android.view.Menu)
    public boolean execPendingActions()
com.google.android.material.bottomsheet.BottomSheetBehavior:
    public static synthetic com.google.android.material.shape.MaterialShapeDrawable access$000(com.google.android.material.bottomsheet.BottomSheetBehavior)
    public static synthetic boolean access$200(com.google.android.material.bottomsheet.BottomSheetBehavior)
    public static synthetic int access$400(com.google.android.material.bottomsheet.BottomSheetBehavior)
    public static synthetic boolean access$500(com.google.android.material.bottomsheet.BottomSheetBehavior)
    public void setFitToContents(boolean)
    public final void setPeekHeight(int,boolean)
    public void setHalfExpandedRatio(float)
    public void setExpandedOffset(int)
    public boolean isHideable()
    public void setSkipCollapsed(boolean)
    public void setSaveFlags(int)
    public void addBottomSheetCallback(com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback)
    public void removeBottomSheetCallback(com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback)
    public int getState()
    public final void calculateHalfExpandedOffset()
    public final void reset()
    public final void restoreOptionalState(com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState)
    public final void createMaterialShapeDrawable(android.content.Context,android.util.AttributeSet,boolean)
    public final void createShapeValueAnimator()
    public final float getYVelocity()
androidx.constraintlayout.solver.widgets.ChainHead:
    public static boolean isMatchConstraintEqualityCandidate(androidx.constraintlayout.solver.widgets.ConstraintWidget,int)
    public void define()
    public final void defineChainProperties()
android.support.v4.media.session.IMediaControllerCallback
androidx.fragment.app.BackStackState$1:
    public androidx.fragment.app.BackStackState createFromParcel(android.os.Parcel)
    public androidx.fragment.app.BackStackState[] newArray(int)
androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback:
    public androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback wrap(android.graphics.drawable.Drawable$Callback)
    public android.graphics.drawable.Drawable$Callback unwrap()
androidx.appcompat.widget.ActionBarOverlayLayout:
    public boolean isInOverlayMode()
    public androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateDefaultLayoutParams()
    public androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)
    public final androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View)
    public final void postRemoveActionBarHideOffset()
    public final void postAddActionBarHideOffset()
    public final void removeActionBarHideOffset()
    public final void addActionBarHideOffset()
    public final boolean shouldHideActionBarOnFling(float)
androidx.core.app.BundleCompat$BundleCompatBaseImpl
androidx.databinding.ViewDataBinding$OnStartListener:
    public void <init>(androidx.databinding.ViewDataBinding)
com.google.android.material.ripple.RippleDrawableCompat:
    public void <init>(com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState)
    public com.google.android.material.ripple.RippleDrawableCompat mutate()
androidx.core.text.BidiFormatter$Builder
kotlin.random.RandomKt
kotlin.jvm.internal.PropertyReference1
androidx.arch.core.executor.DefaultTaskExecutor$1:
    public final synthetic androidx.arch.core.executor.DefaultTaskExecutor this$0
androidx.core.util.Pools$SimplePool:
    public final boolean isInPool(java.lang.Object)
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl:
    public final boolean doCheck(java.lang.CharSequence,int,int)
androidx.savedstate.Recreator$SavedStateProvider:
    public void add(java.lang.String)
androidx.fragment.app.FragmentManager$5:
    public final synthetic androidx.fragment.app.FragmentManager this$0
com.google.android.material.datepicker.PickerFragment:
    public boolean addOnSelectionChangedListener(com.google.android.material.datepicker.OnSelectionChangedListener)
    public void clearOnSelectionChangedListeners()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat:
    public void <init>(java.lang.Object)
    public java.lang.CharSequence getLabel()
    public boolean perform(android.view.View,android.os.Bundle)
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat createReplacementAction(java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand)
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_FOCUS
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_FOCUS
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SELECT
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_SELECTION
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_LONG_CLICK
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_ACCESSIBILITY_FOCUS
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_ACCESSIBILITY_FOCUS
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_NEXT_AT_MOVEMENT_GRANULARITY
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_NEXT_HTML_ELEMENT
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PREVIOUS_HTML_ELEMENT
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_COPY
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PASTE
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CUT
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_SELECTION
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_TEXT
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SHOW_ON_SCREEN
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_TO_POSITION
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_LEFT
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_RIGHT
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PAGE_UP
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PAGE_DOWN
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PAGE_LEFT
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PAGE_RIGHT
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CONTEXT_CLICK
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_PROGRESS
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_MOVE_WINDOW
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SHOW_TOOLTIP
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_HIDE_TOOLTIP
androidx.fragment.app.FragmentAnim
androidx.core.util.Pools$Pool
androidx.recyclerview.widget.RecyclerView$Adapter:
    public void onBindViewHolder1(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)
    public final androidx.recyclerview.widget.RecyclerView$ViewHolder createViewHolder(android.view.ViewGroup,int)
    public final void bindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)
    public int getItemViewType()
    public void setHasStableIds(boolean)
    public final boolean hasStableIds()
    public void onViewRecycled()
    public boolean onFailedToRecycleView()
    public void onViewAttachedToWindow()
    public void onViewDetachedFromWindow()
    public final boolean hasObservers()
    public void registerAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver)
    public void unregisterAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver)
    public void onAttachedToRecyclerView()
    public void onDetachedFromRecyclerView()
    public final void notifyDataSetChanged()
androidx.fragment.app.Fragment:
    public androidx.lifecycle.ViewModelProvider$Factory getDefaultViewModelProviderFactory()
    public final void restoreViewState(android.os.Bundle)
    public final int getId()
    public final android.os.Bundle getArguments()
    public final boolean isStateSaved()
    public final androidx.fragment.app.Fragment getTargetFragment()
    public final androidx.fragment.app.FragmentActivity getActivity()
    public final java.lang.Object getHost()
    public final androidx.fragment.app.Fragment getParentFragment()
    public final boolean isRemoving()
    public void onHiddenChanged()
    public final boolean getRetainInstance()
    public void onActivityResult()
    public void onRequestPermissionsResult()
    public android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle)
    public android.view.LayoutInflater getLayoutInflater()
    public void onInflate()
    public void onAttachFragment()
    public void onAttach()
    public android.view.animation.Animation onCreateAnimation()
    public android.animation.Animator onCreateAnimator()
    public void restoreChildFragmentState(android.os.Bundle)
    public android.view.View getView()
    public void onViewStateRestored()
    public void onResume()
    public void onMultiWindowModeChanged()
    public void onPictureInPictureModeChanged()
    public void onPause()
    public void onDestroy()
    public void initState()
    public void onCreateOptionsMenu()
    public void onPrepareOptionsMenu()
    public void onDestroyOptionsMenu()
    public boolean onOptionsItemSelected()
    public void onOptionsMenuClosed()
    public boolean onContextItemSelected()
    public java.lang.Object getReturnTransition()
    public java.lang.Object getReenterTransition()
    public java.lang.Object getSharedElementReturnTransition()
    public boolean getAllowEnterTransitionOverlap()
    public boolean getAllowReturnTransitionOverlap()
    public void performAttach()
    public void performCreate(android.os.Bundle)
    public void performActivityCreated(android.os.Bundle)
    public void performStart()
    public void performResume()
    public void noteStateNotSaved()
    public void performPrimaryNavigationFragmentChanged()
    public void performMultiWindowModeChanged(boolean)
    public void performPictureInPictureModeChanged(boolean)
    public void performConfigurationChanged(android.content.res.Configuration)
    public void performLowMemory()
    public boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
    public boolean performPrepareOptionsMenu(android.view.Menu)
    public boolean performOptionsItemSelected(android.view.MenuItem)
    public boolean performContextItemSelected(android.view.MenuItem)
    public void performOptionsMenuClosed(android.view.Menu)
    public void performSaveInstanceState(android.os.Bundle)
    public void performPause()
    public void performStop()
    public void performDestroyView()
    public void performDestroy()
    public void performDetach()
    public int getNextTransition()
    public void setNextTransition(int)
    public void getEnterTransitionCallback()
    public void getExitTransitionCallback()
    public android.animation.Animator getAnimator()
    public boolean isPostponed()
    public boolean mHasMenu
    public java.lang.Runnable mPostponedDurationRunnable
androidx.core.widget.NestedScrollView:
    public void dispatchNestedScroll(int,int,int,int,int[],int,int[])
    public boolean pageScroll(int)
    public final void smoothScrollBy(int,int)
    public void smoothScrollTo(int,int,boolean)
    public final void initScrollView()
    public final boolean canScroll()
    public final boolean inChild(int,int)
    public final void initOrResetVelocityTracker()
    public final void initVelocityTrackerIfNotExists()
    public final android.view.View findFocusableViewInBounds(boolean,int,int)
    public final boolean isOffScreen(android.view.View)
    public final boolean scrollToChildRect(android.graphics.Rect,boolean)
androidx.databinding.CallbackRegistry$NotifierCallback:
    public abstract void onNotifyCallback(java.lang.Object,java.lang.Object,int,java.lang.Object)
androidx.appcompat.app.AlertDialog:
    public android.widget.ListView getListView()
com.google.android.material.datepicker.CalendarItemStyle:
    public int getTopInset()
    public int getBottomInset()
androidx.collection.LruCache:
    public void entryRemoved()
    public java.lang.Object create()
    public int sizeOf()
    public final int safeSizeOf(java.lang.Object,java.lang.Object)
    public int createCount
androidx.appcompat.widget.AppCompatImageView:
    public void <init>(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate:
    public androidx.core.view.AccessibilityDelegateCompat getItemDelegate()
androidx.constraintlayout.solver.ArrayLinkedVariables:
    public final boolean containsKey(androidx.constraintlayout.solver.SolverVariable)
    public void invert()
    public void divideByAmount(float)
    public androidx.constraintlayout.solver.SolverVariable chooseSubject(androidx.constraintlayout.solver.LinearSystem)
    public final void updateFromRow(androidx.constraintlayout.solver.ArrayRow,androidx.constraintlayout.solver.ArrayRow,boolean)
    public void updateFromSystem(androidx.constraintlayout.solver.ArrayRow,androidx.constraintlayout.solver.ArrayRow[])
androidx.lifecycle.ReportFragment:
    public void setProcessListener(androidx.lifecycle.ReportFragment$ActivityInitializationListener)
    public final void dispatchCreate(androidx.lifecycle.ReportFragment$ActivityInitializationListener)
    public final void dispatchStart(androidx.lifecycle.ReportFragment$ActivityInitializationListener)
    public final void dispatchResume(androidx.lifecycle.ReportFragment$ActivityInitializationListener)
androidx.appcompat.widget.ActionBarContextView$1:
    public final synthetic androidx.appcompat.widget.ActionBarContextView this$0
kotlin.LazyKt__LazyJVMKt
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback
androidx.navigation.ui.AbstractAppBarOnDestinationChangedListener:
    public abstract void setTitle(java.lang.CharSequence)
    public final void setActionBarUpIndicator(boolean)
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry:
    public java.lang.String getFileName()
    public int getWeight()
    public boolean isItalic()
    public java.lang.String getVariationSettings()
    public int getTtcIndex()
    public int getResourceId()
androidx.navigation.fragment.DialogFragmentNavigator$Destination:
    public final androidx.navigation.fragment.DialogFragmentNavigator$Destination setClassName(java.lang.String)
    public final java.lang.String getClassName()
androidx.databinding.OnRebindCallback
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup:
    public void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)
    public final void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)
androidx.core.view.ViewParentCompat
androidx.core.widget.PopupWindowCompat
androidx.fragment.app.FragmentTransitionImpl$1:
    public final synthetic androidx.fragment.app.FragmentTransitionImpl this$0
com.google.android.material.datepicker.MaterialCalendar$3:
    public void onDayClick(long)
com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec
androidx.core.view.NestedScrollingParentHelper:
    public void onNestedScrollAccepted(android.view.View,android.view.View,int)
    public void onNestedScrollAccepted(int,int)
    public void onStopNestedScroll(int)
androidx.transition.ChangeBounds$7:
    public final synthetic androidx.transition.ChangeBounds this$0
androidx.appcompat.view.menu.CascadingMenuPopup:
    public final androidx.appcompat.widget.MenuPopupWindow createPopupWindow()
    public final int getInitialMenuPosition()
    public final int getNextMenuPosition(int)
    public final android.view.MenuItem findMenuItemForSubmenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuBuilder)
    public final android.view.View findParentViewForSubmenu(androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,androidx.appcompat.view.menu.MenuBuilder)
    public final int findIndexOfAddedMenu(androidx.appcompat.view.menu.MenuBuilder)
androidx.navigation.NavType$1:
    public void put(android.os.Bundle,java.lang.String,java.lang.Integer)
    public java.lang.Integer get(android.os.Bundle,java.lang.String)
    public java.lang.Integer parseValue(java.lang.String)
androidx.navigation.NavType$11:
    public void put(android.os.Bundle,java.lang.String,java.lang.String[])
    public java.lang.String[] get(android.os.Bundle,java.lang.String)
    public java.lang.String[] parseValue()
androidx.constraintlayout.widget.ConstraintSet:
    public static int lookupID(android.content.res.TypedArray,int,int)
    public void clone(androidx.constraintlayout.widget.Constraints)
    public void applyToInternal(androidx.constraintlayout.widget.ConstraintLayout)
    public final void populateConstraint(androidx.constraintlayout.widget.ConstraintSet$Constraint,android.content.res.TypedArray)
androidx.appcompat.content.res.AppCompatResources:
    public static android.content.res.ColorStateList inflateColorStateList(android.content.Context,int)
    public static android.content.res.ColorStateList getCachedColorStateList(android.content.Context,int)
    public static void addColorStateListToCache(android.content.Context,int,android.content.res.ColorStateList)
    public static boolean isColorInt(android.content.Context,int)
    public static android.util.TypedValue getTypedValue()
androidx.lifecycle.ViewModel:
    public static void closeWithRuntimeException(java.lang.Object)
    public final void clear()
    public java.lang.Object getTag(java.lang.String)
androidx.appcompat.widget.SearchView$OnCloseListener:
    public abstract boolean onClose()
androidx.lifecycle.Lifecycling$1:
    public final synthetic androidx.lifecycle.LifecycleEventObserver val$observer
androidx.fragment.app.FragmentViewLifecycleOwner:
    public void initialize()
    public boolean isInitialized()
    public void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)
androidx.cardview.widget.CardViewBaseImpl$1:
    public void drawRoundRect(android.graphics.Canvas,android.graphics.RectF,float,android.graphics.Paint)
androidx.core.view.ViewConfigurationCompat:
    public static float getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context)
androidx.constraintlayout.solver.widgets.ConstraintWidget:
    public static void <clinit>()
    public void setMaxWidth(int)
    public void setMaxHeight(int)
    public boolean isSpreadWidth()
    public boolean isSpreadHeight()
    public void updateResolutionNodes()
    public androidx.constraintlayout.solver.widgets.ConstraintWidget getParent()
    public void setParent(androidx.constraintlayout.solver.widgets.ConstraintWidget)
    public void setWidthWrapContent(boolean)
    public void setHeightWrapContent(boolean)
    public void connectCircularConstraint(androidx.constraintlayout.solver.widgets.ConstraintWidget,float,int)
    public void setVisibility(int)
    public int getVisibility()
    public java.lang.String getDebugName()
    public void setDebugName(java.lang.String)
    public int getX()
    public int getY()
    public int getWrapWidth()
    public int getWrapHeight()
    public int getDrawX()
    public int getDrawY()
    public int getRootX()
    public int getRootY()
    public int getRight()
    public int getBottom()
    public float getBiasPercent(int)
    public boolean hasBaseline()
    public int getBaselineDistance()
    public java.lang.Object getCompanionWidget()
    public java.util.ArrayList getAnchors()
    public void setX(int)
    public void setY(int)
    public void setOrigin(int,int)
    public void setHorizontalMatchStyle(int,int,int,float)
    public void setVerticalMatchStyle(int,int,int,float)
    public void setDimensionRatio(java.lang.String)
    public void setHorizontalBiasPercent(float)
    public void setVerticalBiasPercent(float)
    public void setMinWidth(int)
    public void setMinHeight(int)
    public void setWrapWidth(int)
    public void setWrapHeight(int)
    public void setFrame(int,int,int,int)
    public int getRelativePositioning(int)
    public void setRelativePositioning(int,int)
    public void setBaselineDistance(int)
    public void setCompanionWidget(java.lang.Object)
    public void setHorizontalWeight(float)
    public void setVerticalWeight(float)
    public void setHorizontalChainStyle(int)
    public void setVerticalChainStyle(int)
    public void resetAnchors()
    public boolean isInHorizontalChain()
    public boolean isInVerticalChain()
    public void setupDimensionRatio(boolean,boolean,boolean,boolean)
    public final void addAnchors()
    public boolean mIsWidthWrapContent
    public boolean mIsHeightWrapContent
    public int mDrawWidth
    public int mDrawHeight
    public int mContainerItemSkip
    public boolean mHorizontalWrapVisited
    public boolean mVerticalWrapVisited
    public boolean mHorizontalChainFixedPosition
    public boolean mVerticalChainFixedPosition
    public androidx.constraintlayout.solver.widgets.ConstraintWidget mHorizontalNextWidget
    public androidx.constraintlayout.solver.widgets.ConstraintWidget mVerticalNextWidget
    public static float DEFAULT_BIAS
androidx.recyclerview.widget.SnapHelper:
    public boolean onFling(int,int)
    public void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)
    public int[] calculateScrollDistance(int,int)
    public androidx.recyclerview.widget.RecyclerView$SmoothScroller createScroller(androidx.recyclerview.widget.RecyclerView$LayoutManager)
    public androidx.recyclerview.widget.LinearSmoothScroller createSnapScroller(androidx.recyclerview.widget.RecyclerView$LayoutManager)
    public abstract int findTargetSnapPosition(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int)
    public final void setupCallbacks()
    public final void destroyCallbacks()
    public final boolean snapFromFling(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int)
com.google.android.material.expandable.ExpandableWidgetHelper:
    public boolean isExpanded()
    public android.os.Bundle onSaveInstanceState()
    public void onRestoreInstanceState(android.os.Bundle)
    public void setExpandedComponentIdHint(int)
    public int getExpandedComponentIdHint()
    public final void dispatchExpandedStateChanged()
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer:
    public void setOptimizationLevel(int)
    public int getOptimizationLevel()
    public boolean isWidthMeasuredTooSmall()
    public boolean isHeightMeasuredTooSmall()
    public void updateChildrenFromSolver(androidx.constraintlayout.solver.LinearSystem,boolean[])
    public void setRtl(boolean)
    public boolean isRtl()
    public void preOptimize()
    public void optimizeForDimensions(int,int)
    public void optimize()
    public boolean handlesInternalConstraints()
    public final void addHorizontalChain(androidx.constraintlayout.solver.widgets.ConstraintWidget)
    public final void addVerticalChain(androidx.constraintlayout.solver.widgets.ConstraintWidget)
    public int mDebugSolverPassCount
kotlin.jvm.internal.Intrinsics:
    public static void throwUninitializedProperty(java.lang.String)
    public static void checkParameterIsNotNull(java.lang.Object,java.lang.String)
    public static java.lang.Throwable sanitizeStackTrace(java.lang.Throwable,java.lang.String)
kotlin.random.AbstractPlatformRandom:
    public abstract java.util.Random getImpl()
androidx.databinding.PropertyChangeRegistry$1:
    public void onNotifyCallback(androidx.databinding.Observable$OnPropertyChangedCallback,androidx.databinding.Observable,int)
    public void onNotifyCallback(java.lang.Object,java.lang.Object,int,java.lang.Object)
androidx.appcompat.view.menu.SubMenuBuilder:
    public android.view.Menu getParentMenu()
    public void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback)
androidx.core.provider.FontsContractCompat$2:
    public void onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ShadowAnimatorImpl:
    public void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl)
com.google.android.material.circularreveal.CircularRevealCompat
androidx.cursoradapter.widget.CursorAdapter:
    public void init(android.content.Context,android.database.Cursor,int)
    public android.database.Cursor getCursor()
    public abstract android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup)
    public android.database.Cursor swapCursor(android.database.Cursor)
    public void onContentChanged()
androidx.recyclerview.widget.LinearLayoutManager$SavedState$1:
    public androidx.recyclerview.widget.LinearLayoutManager$SavedState createFromParcel(android.os.Parcel)
    public androidx.recyclerview.widget.LinearLayoutManager$SavedState[] newArray(int)
android.support.v4.media.MediaMetadataCompat:
    public static android.support.v4.media.MediaMetadataCompat fromMediaMetadata(java.lang.Object)
    public java.lang.Object mMetadataObj
    public static final java.lang.String[] PREFERRED_DESCRIPTION_ORDER
    public static final java.lang.String[] PREFERRED_BITMAP_ORDER
    public static final java.lang.String[] PREFERRED_URI_ORDER
androidx.navigation.ActivityNavigator$Extras:
    public int getFlags()
    public void getActivityOptions()
    public final int mFlags
    public final androidx.core.app.ActivityOptionsCompat mActivityOptions
androidx.databinding.ViewDataBinding:
    public void <init>(androidx.databinding.DataBindingComponent,android.view.View,int)
    public static androidx.databinding.DataBindingComponent checkAndCastToBindingComponent(java.lang.Object)
    public static androidx.databinding.ViewDataBinding getBinding(android.view.View)
    public static java.lang.Object[] mapBindings(androidx.databinding.DataBindingComponent,android.view.View,int,android.util.SparseIntArray)
    public static int findIncludeIndex(java.lang.String,int,int)
    public static int findLastMatching(android.view.ViewGroup,int)
    public static void processReferenceQueue()
    public static synthetic boolean access$002(androidx.databinding.ViewDataBinding,boolean)
    public static synthetic java.lang.Runnable access$100(androidx.databinding.ViewDataBinding)
    public static synthetic boolean access$202(androidx.databinding.ViewDataBinding,boolean)
    public static synthetic void access$300()
    public static synthetic android.view.View access$400(androidx.databinding.ViewDataBinding)
    public static synthetic android.view.View$OnAttachStateChangeListener access$500()
    public static synthetic java.lang.ref.ReferenceQueue access$700()
    public void setRootTag(android.view.View)
    public abstract boolean onFieldChange(int,java.lang.Object,int)
    public void setLifecycleOwner(androidx.lifecycle.LifecycleOwner)
    public abstract void executeBindings()
    public abstract boolean hasPendingBindings()
    public android.view.View getRoot()
    public boolean unregisterFrom(int)
    public boolean updateLiveDataRegistration(int,androidx.lifecycle.LiveData)
    public final void executeBindingsInternal()
    public final void handleFieldChange(int,java.lang.Object,int)
    public final boolean updateRegistration(int,java.lang.Object,androidx.databinding.ViewDataBinding$CreateWeakListener)
    public androidx.databinding.CallbackRegistry mRebindCallbacks
    public final androidx.databinding.DataBindingComponent mBindingComponent
    public androidx.databinding.ViewDataBinding mContainingBinding
    public static final int BINDING_NUMBER_START
    public static final androidx.databinding.ViewDataBinding$CreateWeakListener CREATE_PROPERTY_LISTENER
    public static final androidx.databinding.ViewDataBinding$CreateWeakListener CREATE_LIST_LISTENER
    public static final androidx.databinding.ViewDataBinding$CreateWeakListener CREATE_MAP_LISTENER
    public static final androidx.databinding.CallbackRegistry$NotifierCallback REBIND_NOTIFIER
androidx.recyclerview.widget.DefaultItemAnimator:
    public void runPendingAnimations()
    public boolean animateRemove(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public boolean animateAdd(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public void animateAddImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public void animateMoveImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int)
    public boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int)
    public void animateChangeImpl(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo)
    public final void animateRemoveImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public final void endChangeAnimationIfNecessary(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo)
androidx.core.view.ViewGroupCompat
androidx.appcompat.widget.ContentFrameLayout$OnAttachListener:
    public abstract void onDetachedFromWindow()
    public abstract void onAttachedFromWindow()
androidx.appcompat.app.AlertController$AlertParams$OnPrepareListViewListener
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat:
    public void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser)
    public final void parseInterpolatorFromTypeArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)
    public final void initQuad(float,float)
    public final void initCubic(float,float,float,float)
androidx.lifecycle.LifecycleController$observer$1:
    public final synthetic androidx.lifecycle.LifecycleController this$0
    public final synthetic kotlinx.coroutines.Job $parentJob
androidx.lifecycle.ProcessLifecycleOwner:
    public static void init(android.content.Context)
    public void activityPaused()
    public void activityStopped()
    public void dispatchPauseIfNeeded()
    public void dispatchStopIfNeeded()
    public void attach(android.content.Context)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1:
    public androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFromParcel(android.os.Parcel)
    public androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem[] newArray(int)
androidx.transition.TransitionSet$1:
    public final synthetic androidx.transition.TransitionSet this$0
androidx.customview.view.AbsSavedState$2:
    public androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel)
    public androidx.customview.view.AbsSavedState[] newArray(int)
androidx.fragment.app.FragmentState$1:
    public androidx.fragment.app.FragmentState createFromParcel(android.os.Parcel)
    public androidx.fragment.app.FragmentState[] newArray(int)
androidx.recyclerview.widget.AdapterHelper$Callback:
    public abstract androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolder(int)
    public abstract void offsetPositionsForRemovingInvisible(int,int)
    public abstract void offsetPositionsForRemovingLaidOutOrNewView(int,int)
    public abstract void markViewHoldersUpdated(int,int,java.lang.Object)
    public abstract void onDispatchFirstPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    public abstract void onDispatchSecondPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    public abstract void offsetPositionsForAdd(int,int)
    public abstract void offsetPositionsForMove(int,int)
kotlinx.coroutines.Job$DefaultImpls
androidx.recyclerview.widget.RecyclerView$RecycledViewPool:
    public void clear()
    public androidx.recyclerview.widget.RecyclerView$ViewHolder getRecycledView(int)
    public void putRecycledView(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public void factorInCreateTime(int,long)
    public void factorInBindTime(int,long)
    public boolean willCreateInTime(int,long,long)
    public boolean willBindInTime(int,long,long)
    public void attach()
    public void detach()
    public void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean)
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action:
    public void <init>(int,int,int,android.view.animation.Interpolator)
    public void jumpTo(int)
    public boolean hasJumpTarget()
    public final void validate()
androidx.appcompat.view.menu.BaseMenuWrapper:
    public final void internalClear()
    public final void internalRemoveGroup(int)
    public final void internalRemoveItem(int)
com.google.android.material.bottomappbar.BottomAppBar$2:
    public void onScaleChanged(com.google.android.material.floatingactionbutton.FloatingActionButton)
    public void onTranslationChanged(com.google.android.material.floatingactionbutton.FloatingActionButton)
    public void onScaleChanged(android.view.View)
    public void onTranslationChanged(android.view.View)
androidx.appcompat.view.ActionBarPolicy
android.support.v4.media.session.MediaControllerCompat$Callback$StubApi21
androidx.arch.core.executor.ArchTaskExecutor$2
androidx.appcompat.widget.SearchView$SearchAutoComplete:
    public boolean isEmpty()
    public void showSoftInputIfNecessary()
androidx.recyclerview.widget.AdapterHelper$UpdateOp:
    public java.lang.String cmdToString()
androidx.appcompat.view.WindowCallbackWrapper:
    public boolean dispatchKeyEvent(android.view.KeyEvent)
    public boolean dispatchKeyShortcutEvent(android.view.KeyEvent)
    public boolean onCreatePanelMenu(int,android.view.Menu)
    public boolean onPreparePanel(int,android.view.View,android.view.Menu)
    public boolean onMenuOpened(int,android.view.Menu)
    public void onPanelClosed(int,android.view.Menu)
    public android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback)
    public android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int)
    public void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int)
    public final android.view.Window$Callback getWrapped()
androidx.lifecycle.MethodCallsLogger:
    public java.util.Map mCalledMethods
kotlin.coroutines.CoroutineContext$DefaultImpls
androidx.appcompat.widget.ListPopupWindow:
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    public void setPromptPosition(int)
    public boolean isModal()
    public void setAnimationStyle(int)
    public android.view.View getAnchorView()
    public void setAnchorView(android.view.View)
    public void setEpicenterBounds(android.graphics.Rect)
    public void setDropDownGravity(int)
    public int getWidth()
    public void setWidth(int)
    public void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)
    public void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)
    public void setInputMethodMode(int)
    public void setSelection(int)
    public void clearListSelection()
    public boolean isInputMethodNotNeeded()
    public void setOverlapAnchor(boolean)
    public final void removePromptView()
    public final int buildDropDown()
    public final void setPopupClipToScreenEnabled(boolean)
    public final int getMaxAvailableHeight(android.view.View,int,boolean)
    public boolean mIsAnimatedFromAnchor
    public android.view.View mPromptView
    public android.graphics.drawable.Drawable mDropDownListHighlight
    public android.widget.AdapterView$OnItemSelectedListener mItemSelectedListener
    public java.lang.Runnable mShowDropDownRunnable
androidx.appcompat.view.menu.ActionMenuItem:
    public androidx.core.internal.view.SupportMenuItem setActionView()
    public androidx.core.internal.view.SupportMenuItem setActionView1()
    public androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int)
    public final int mCategoryOrder
    public int mIconResId
    public android.view.MenuItem$OnMenuItemClickListener mClickListener
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams:
    public boolean isFullSpan()
    public final int getSpanIndex()
androidx.databinding.ViewDataBinding$1:
    public void <init>()
    public androidx.databinding.ViewDataBinding$WeakListener create(androidx.databinding.ViewDataBinding,int)
com.google.android.material.internal.ViewUtils$RelativePadding:
    public void <init>(com.google.android.material.internal.ViewUtils$RelativePadding)
    public void applyToView(android.view.View)
androidx.fragment.app.FragmentManager$OnBackStackChangedListener
androidx.fragment.app.DialogFragment:
    public void show(androidx.fragment.app.FragmentManager,java.lang.String)
    public void dismissAllowingStateLoss()
    public android.app.Dialog getDialog()
    public int getTheme()
androidx.appcompat.app.AlertController:
    public static boolean shouldCenterSingleButton(android.content.Context)
    public void installContent()
    public void setTitle(java.lang.CharSequence)
    public void setCustomTitle(android.view.View)
    public void setMessage(java.lang.CharSequence)
    public void setView(int)
    public void setView(android.view.View)
    public void setView(android.view.View,int,int,int,int)
    public void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener,android.os.Message,android.graphics.drawable.Drawable)
    public void setIcon(android.graphics.drawable.Drawable)
    public int getIconAttributeResId(int)
    public android.widget.ListView getListView()
    public boolean onKeyDown(android.view.KeyEvent)
    public boolean onKeyUp(android.view.KeyEvent)
    public final int selectContentView()
    public final void setupView()
    public final void setScrollIndicators(android.view.ViewGroup,android.view.View,int,int)
    public final void setupCustomContent(android.view.ViewGroup)
    public final void setupTitle(android.view.ViewGroup)
    public final void setupContent(android.view.ViewGroup)
    public final void setupButtons(android.view.ViewGroup)
android.support.v4.media.MediaBrowserCompat$SearchCallback
androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat
androidx.navigation.NavBackStackEntryState$1:
    public androidx.navigation.NavBackStackEntryState createFromParcel(android.os.Parcel)
    public androidx.navigation.NavBackStackEntryState[] newArray(int)
androidx.recyclerview.widget.RecyclerView$RecyclerListener:
    public abstract void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.transition.ChangeBounds$10:
    public final synthetic androidx.transition.ChangeBounds this$0
com.google.android.material.snackbar.SnackbarManager:
    public static com.google.android.material.snackbar.SnackbarManager getInstance()
    public void pauseTimeout(com.google.android.material.snackbar.SnackbarManager$Callback)
    public void restoreTimeoutIfPaused(com.google.android.material.snackbar.SnackbarManager$Callback)
    public void handleTimeout(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord)
    public final boolean cancelSnackbarLocked(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord,int)
    public final boolean isCurrentSnackbarLocked(com.google.android.material.snackbar.SnackbarManager$Callback)
    public final void scheduleTimeoutLocked(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord)
    public com.google.android.material.snackbar.SnackbarManager$SnackbarRecord currentSnackbar
    public com.google.android.material.snackbar.SnackbarManager$SnackbarRecord nextSnackbar
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState:
    public int addStateSet(int[],android.graphics.drawable.Drawable)
    public void growArray(int,int)
androidx.constraintlayout.solver.widgets.ResolutionDimension:
    public void reset()
    public void remove()
androidx.navigation.ui.NavigationUI
com.google.android.material.behavior.SwipeDismissBehavior:
    public static int clamp(int,int,int)
    public static float fraction(float,float,float)
    public void setSwipeDirection(int)
    public void setStartAlphaSwipeDistance(float)
    public void setEndAlphaSwipeDistance(float)
    public final void ensureViewDragHelper(android.view.ViewGroup)
    public com.google.android.material.behavior.SwipeDismissBehavior$OnDismissListener listener
    public boolean sensitivitySet
android.support.v4.media.session.MediaSessionCompat$QueueItem:
    public void <init>(java.lang.Object,android.support.v4.media.MediaDescriptionCompat,long)
    public static android.support.v4.media.session.MediaSessionCompat$QueueItem fromQueueItem(java.lang.Object)
    public static java.util.List fromQueueItemList(java.util.List)
    public java.lang.Object mItem
androidx.appcompat.view.menu.MenuBuilder:
    public static int getOrdering(int)
    public static int findInsertIndex(java.util.ArrayList,int)
    public androidx.appcompat.view.menu.MenuBuilder setDefaultShowAsAction(int)
    public void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter)
    public void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback)
    public void setExclusiveItemChecked(android.view.MenuItem)
    public int findItemIndex(int)
    public int findGroupIndex(int)
    public int findGroupIndex(int,int)
    public android.content.res.Resources getResources()
    public android.content.Context getContext()
    public void changeMenuMode()
    public void onItemVisibleChanged()
    public java.util.ArrayList getActionItems()
    public java.util.ArrayList getNonActionItems()
    public androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence)
    public androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(int)
    public androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable)
    public androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(int)
    public androidx.appcompat.view.menu.MenuBuilder setHeaderViewInt(android.view.View)
    public java.lang.CharSequence getHeaderTitle()
    public android.graphics.drawable.Drawable getHeaderIcon()
    public android.view.View getHeaderView()
    public boolean getOptionalIconsVisible()
    public androidx.appcompat.view.menu.MenuItemImpl getExpandedItem()
    public void setOverrideVisibleItems(boolean)
    public final void dispatchPresenterUpdate(boolean)
    public final boolean dispatchSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder,androidx.appcompat.view.menu.MenuPresenter)
    public final androidx.appcompat.view.menu.MenuItemImpl createNewMenuItem(int,int,int,int,java.lang.CharSequence,int)
    public final void setShortcutsVisibleInner(boolean)
    public android.view.ContextMenu$ContextMenuInfo mCurrentMenuInfo
androidx.recyclerview.widget.RecyclerView$ViewCacheExtension:
    public abstract android.view.View getViewForPositionAndType(androidx.recyclerview.widget.RecyclerView$Recycler,int,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat:
    public static androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean,int)
androidx.appcompat.widget.ThemeUtils:
    public static android.util.TypedValue getTypedValue()
    public static int getThemeAttrColor(android.content.Context,int,float)
    public static final int[] ACTIVATED_STATE_SET
    public static final int[] SELECTED_STATE_SET
    public static final int[] NOT_PRESSED_OR_FOCUSED_STATE_SET
androidx.appcompat.app.ActionBarDrawerToggle$Delegate
androidx.core.widget.AutoScrollHelper$ClampedScroller:
    public void setRampUpDuration(int)
    public void setRampDownDuration(int)
    public void start()
    public void requestStop()
    public boolean isFinished()
    public void computeScrollDelta()
    public void setTargetVelocity(float,float)
    public int getHorizontalDirection()
    public int getVerticalDirection()
    public int getDeltaX()
    public int getDeltaY()
    public final float interpolateValue(float)
androidx.appcompat.widget.RtlSpacingHelper:
    public int getLeft()
    public int getRight()
    public int getStart()
    public int getEnd()
    public void setAbsolute(int,int)
    public void setDirection(boolean)
com.google.android.material.behavior.SwipeDismissBehavior$1:
    public final boolean shouldDismiss(android.view.View,float)
androidx.recyclerview.widget.LinearLayoutManager$LayoutState:
    public void assignPositionFromScrapList()
    public android.view.View nextViewInLimitedList(android.view.View)
    public final android.view.View nextViewFromScrapList()
androidx.core.view.ActionProvider:
    public abstract android.view.View onCreateActionView()
    public boolean onPerformDefaultAction()
    public boolean hasSubMenu()
    public void onPrepareSubMenu(android.view.SubMenu)
    public void setSubUiVisibilityListener(androidx.core.view.ActionProvider$SubUiVisibilityListener)
    public void reset()
    public final android.content.Context mContext
    public androidx.core.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl:
    public static synthetic int access$002(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,int)
    public static synthetic android.animation.Animator access$102(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,android.animation.Animator)
    public static synthetic float access$202(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,float)
    public void setBackgroundTintList(android.content.res.ColorStateList)
    public void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
    public void setMinTouchTargetSize(int)
    public final void setElevation(float)
    public float getHoveredFocusedTranslationZ()
    public float getPressedTranslationZ()
    public final void setHoveredFocusedTranslationZ(float)
    public final void setPressedTranslationZ(float)
    public final void setMaxImageSize(int)
    public final void updateImageMatrixScale()
    public final com.google.android.material.shape.ShapeAppearanceModel getShapeAppearance()
    public final com.google.android.material.animation.MotionSpec getShowMotionSpec()
    public final void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
    public final com.google.android.material.animation.MotionSpec getHideMotionSpec()
    public final void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
    public boolean getEnsureMinTouchTargetSize()
    public void setEnsureMinTouchTargetSize(boolean)
    public void setShadowPaddingEnabled(boolean)
    public void addOnShowAnimationListener(android.animation.Animator$AnimatorListener)
    public void addOnHideAnimationListener(android.animation.Animator$AnimatorListener)
    public void hide(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean)
    public void show(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean)
    public void addTransformationCallback(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalTransformationCallback)
    public final android.graphics.drawable.Drawable getContentBackground()
    public void onPaddingUpdated(android.graphics.Rect)
    public void onAttachedToWindow()
    public void onDetachedFromWindow()
    public void onPreDraw()
    public final com.google.android.material.animation.MotionSpec getDefaultShowMotionSpec()
    public final com.google.android.material.animation.MotionSpec getDefaultHideMotionSpec()
    public final void workAroundOreoBug(android.animation.ObjectAnimator)
    public final android.view.ViewTreeObserver$OnPreDrawListener getOrCreatePreDrawListener()
androidx.collection.ArraySet:
    public void <init>(int)
    public void ensureCapacity(int)
    public java.lang.Object valueAt(int)
    public final androidx.collection.MapCollections getCollection()
com.google.android.material.datepicker.UtcDates
androidx.savedstate.SavedStateRegistry:
    public void registerSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider)
    public void performRestore(androidx.lifecycle.Lifecycle,android.os.Bundle)
    public void performSave(android.os.Bundle)
com.google.android.material.resources.MaterialResources
androidx.core.text.PrecomputedTextCompat$Params:
    public android.text.TextPaint getTextPaint()
    public android.text.TextDirectionHeuristic getTextDirection()
    public int getBreakStrategy()
    public int getHyphenationFrequency()
    public final android.text.PrecomputedText$Params mWrapped
com.czluciusdev.diceroller.AboutFragment:
    public void _$_clearFindViewByIdCache()
    public java.util.HashMap _$_findViewCache
androidx.viewpager2.adapter.FragmentStateAdapter$2:
    public final synthetic androidx.viewpager2.adapter.FragmentViewHolder val$holder
    public final synthetic androidx.viewpager2.adapter.FragmentStateAdapter this$0
androidx.appcompat.widget.AppCompatSpinner:
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int,int)
    public void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme)
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper:
    public android.view.View onCreateActionView()
    public boolean onPerformDefaultAction()
    public boolean hasSubMenu()
    public void onPrepareSubMenu(android.view.SubMenu)
kotlin.LazyKt
androidx.core.content.res.ColorStateListInflaterCompat
androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper:
    public android.view.View getWrappedView()
android.support.v4.media.session.MediaSessionCompat$Token$1:
    public android.support.v4.media.session.MediaSessionCompat$Token createFromParcel(android.os.Parcel)
    public android.support.v4.media.session.MediaSessionCompat$Token[] newArray(int)
androidx.transition.FragmentTransitionSupport$4:
    public final synthetic android.graphics.Rect val$epicenter
    public final synthetic androidx.transition.FragmentTransitionSupport this$0
androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor
kotlin.coroutines.CombinedContext:
    public final boolean contains(kotlin.coroutines.CoroutineContext$Element)
    public final boolean containsAll(kotlin.coroutines.CombinedContext)
androidx.appcompat.widget.ScrollingTabContainerView:
    public void animateToTab(int)
    public androidx.appcompat.widget.ScrollingTabContainerView$TabView createTabView(androidx.appcompat.app.ActionBar$Tab,boolean)
    public final boolean isCollapsed()
    public final void performCollapse()
    public final boolean performExpand()
    public final android.widget.Spinner createSpinner()
    public androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener mTabClickListener
    public androidx.appcompat.widget.LinearLayoutCompat mTabLayout
    public android.widget.Spinner mTabSpinner
    public static final android.view.animation.Interpolator sAlphaInterpolator
androidx.fragment.app.FragmentTransitionCompat21$1:
    public final synthetic androidx.fragment.app.FragmentTransitionCompat21 this$0
com.google.android.material.appbar.ViewUtilsLollipop
androidx.viewpager2.adapter.FragmentViewHolder
com.google.android.material.snackbar.BaseTransientBottomBar$OnLayoutChangeListener:
    public abstract void onLayoutChange(android.view.View,int,int,int,int)
kotlin.SynchronizedLazyImpl:
    public void <init>(kotlin.jvm.functions.Function0,java.lang.Object)
    public boolean isInitialized()
androidx.appcompat.view.menu.ListMenuPresenter:
    public void <init>(int,int)
    public androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
androidx.recyclerview.widget.GridLayoutManager:
    public static int[] calculateItemBorders(int[],int,int)
    public int getSpanCount()
    public final void clearPreLayoutSpanMappingCache()
    public final void cachePreLayoutSpanMapping()
    public final void ensureAnchorIsInCorrectSpan(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int)
    public final void guessMeasurement(float,int)
    public final void assignSpans(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,boolean)
    public final int computeScrollRangeWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State)
    public final int computeScrollOffsetWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State)
    public boolean mUsingSpansToEstimateScrollBarDimensions
androidx.lifecycle.ViewModelStore:
    public final void put(java.lang.String,androidx.lifecycle.ViewModel)
    public final androidx.lifecycle.ViewModel get(java.lang.String)
    public java.util.Set keys()
androidx.activity.OnBackPressedDispatcher:
    public androidx.activity.Cancellable addCancellableCallback(androidx.activity.OnBackPressedCallback)
androidx.core.os.CancellationSignal$OnCancelListener:
    public abstract void onCancel()
android.support.v4.media.session.MediaSessionCompatApi21$QueueItem
androidx.core.view.KeyEventDispatcher:
    public static boolean dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent)
    public static boolean actionBarOnMenuKeyEventPre28(android.app.ActionBar,android.view.KeyEvent)
    public static boolean activitySuperDispatchKeyEventPre28(android.app.Activity,android.view.KeyEvent)
    public static android.content.DialogInterface$OnKeyListener getDialogKeyListenerPre28(android.app.Dialog)
    public static boolean dialogSuperDispatchKeyEventPre28(android.app.Dialog,android.view.KeyEvent)
    public static void <clinit>()
android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo
androidx.core.content.res.TypedArrayUtils
androidx.navigation.ActivityKt
androidx.fragment.app.FragmentManager$StartEnterTransitionListener:
    public void onStartEnterTransition()
    public void startListening()
    public boolean isReady()
    public void cancelTransaction()
androidx.fragment.app.FragmentTransitionImpl$2:
    public final synthetic androidx.fragment.app.FragmentTransitionImpl this$0
androidx.transition.ChangeBounds$8:
    public final synthetic androidx.transition.ChangeBounds this$0
androidx.navigation.NavType$2:
    public void put(android.os.Bundle,java.lang.String,java.lang.Integer)
    public java.lang.Integer get(android.os.Bundle,java.lang.String)
    public java.lang.Integer parseValue()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState:
    public int addStateSet(int[],android.graphics.drawable.Drawable,int)
    public int indexOfTransition(int,int)
    public boolean isTransitionReversed(int,int)
    public boolean transitionHasReversibleFlag(int,int)
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener:
    public final void resolveMethod(android.content.Context)
androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl
android.support.v4.media.session.IMediaSession$Stub
com.google.android.material.internal.CollapsingTextHelper$1:
    public void apply(android.graphics.Typeface)
androidx.appcompat.widget.ToolbarWidgetWrapper:
    public void <init>(androidx.appcompat.widget.Toolbar,boolean,int)
    public void setDefaultNavigationContentDescription(int)
    public void setSubtitle(java.lang.CharSequence)
    public void setLogo(android.graphics.drawable.Drawable)
    public void setCustomView(android.view.View)
    public void setNavigationContentDescription(java.lang.CharSequence)
    public final int detectDisplayOptions()
    public final void setTitleInt(java.lang.CharSequence)
androidx.core.provider.FontsContractCompat$1:
    public androidx.core.provider.FontsContractCompat$TypefaceResult call()
androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate
com.google.android.material.datepicker.MaterialTextInputPicker:
    public static com.google.android.material.datepicker.MaterialTextInputPicker newInstance(com.google.android.material.datepicker.DateSelector,com.google.android.material.datepicker.CalendarConstraints)
androidx.navigation.fragment.NavHostFragment:
    public final androidx.navigation.NavController getNavController()
    public void onCreateNavController(androidx.navigation.NavController)
    public androidx.navigation.Navigator createFragmentNavigator()
    public final int getContainerId()
androidx.fragment.app.Fragment$1
com.google.android.material.circularreveal.cardview.CircularRevealCardView:
    public final com.google.android.material.circularreveal.CircularRevealHelper helper
androidx.loader.content.Loader
com.google.android.material.bottomsheet.BottomSheetDialog:
    public static int getThemeResId(android.content.Context,int)
    public com.google.android.material.bottomsheet.BottomSheetBehavior getBehavior()
    public boolean getDismissWithAnimation()
    public boolean shouldWindowCloseOnTouchOutside()
    public void removeDefaultCallback()
    public boolean dismissWithAnimation
androidx.lifecycle.ClassesInfoCache:
    public boolean hasLifecycleMethods(java.lang.Class)
    public final java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class)
androidx.constraintlayout.widget.ConstraintLayout:
    public void solveLinearSystem()
    public androidx.constraintlayout.widget.ConstraintLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)
    public android.view.View getViewById(int)
    public final void updateHierarchy()
    public final void setChildrenConstraints()
    public final void setSelfDimensionBehaviour(int,int)
    public int mLastMeasureWidthSize
    public int mLastMeasureHeightSize
    public int mLastMeasureWidthMode
    public int mLastMeasureHeightMode
    public androidx.constraintlayout.solver.Metrics mMetrics
androidx.core.view.MarginLayoutParamsCompat
androidx.databinding.ViewDataBinding$WeakListListener
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat:
    public void <init>(android.content.Context)
    public static androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    public final void setupAnimatorsForTarget(java.lang.String,android.animation.Animator)
    public android.animation.Animator$AnimatorListener mAnimatorListener
    public java.util.ArrayList mAnimationCallbacks
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry:
    public androidx.core.provider.FontRequest getRequest()
    public int getFetchStrategy()
    public int getTimeout()
androidx.appcompat.app.AlertController$RecycleListView:
    public void setHasDecor(boolean,boolean)
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState$1:
    public com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState createFromParcel(android.os.Parcel)
    public com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState[] newArray(int)
com.google.android.material.animation.AnimatorSetCompat
androidx.transition.ChangeBounds$4:
    public void set(android.view.View,android.graphics.PointF)
    public android.graphics.PointF get()
androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks:
    public abstract android.graphics.drawable.Drawable createDrawableFor(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)
    public abstract boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)
    public abstract android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int)
    public abstract boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)
    public abstract android.graphics.PorterDuff$Mode getTintModeForDrawableRes(int)
androidx.core.text.BidiFormatter$DirectionalityEstimator:
    public static byte getCachedDirectionality(char)
    public int getEntryDir()
    public int getExitDir()
    public byte dirTypeForward()
    public final byte skipTagForward()
    public final byte skipTagBackward()
    public final byte skipEntityForward()
    public final byte skipEntityBackward()
com.google.android.material.resources.MaterialAttributes
androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter
com.google.android.material.shape.ShapeAppearanceModel:
    public static com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,android.util.AttributeSet,int,int,int)
    public static com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,int,int,int)
    public void <init>(com.google.android.material.shape.ShapeAppearanceModel$Builder)
    public com.google.android.material.shape.CornerTreatment getTopLeftCorner()
    public com.google.android.material.shape.CornerTreatment getTopRightCorner()
    public com.google.android.material.shape.CornerTreatment getBottomRightCorner()
    public com.google.android.material.shape.CornerTreatment getBottomLeftCorner()
    public com.google.android.material.shape.CornerSize getTopLeftCornerSize()
    public com.google.android.material.shape.CornerSize getTopRightCornerSize()
    public com.google.android.material.shape.CornerSize getBottomRightCornerSize()
    public com.google.android.material.shape.CornerSize getBottomLeftCornerSize()
    public com.google.android.material.shape.EdgeTreatment getLeftEdge()
    public com.google.android.material.shape.EdgeTreatment getTopEdge()
    public com.google.android.material.shape.EdgeTreatment getRightEdge()
    public com.google.android.material.shape.EdgeTreatment getBottomEdge()
    public com.google.android.material.shape.ShapeAppearanceModel$Builder toBuilder()
    public com.google.android.material.shape.ShapeAppearanceModel withTransformedCornerSizes(com.google.android.material.shape.ShapeAppearanceModel$CornerSizeUnaryOperator)
com.google.android.material.button.MaterialButton$OnPressedChangeListener:
    public abstract void onPressedChanged(com.google.android.material.button.MaterialButton,boolean)
androidx.core.widget.ListViewCompat
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer
androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup:
    public int getSpanSize(int)
    public int getSpanIndex(int,int)
androidx.transition.ViewOverlayApi14$OverlayViewGroup:
    public void add(android.graphics.drawable.Drawable)
    public void remove(android.graphics.drawable.Drawable)
    public final void assertNotDisposed()
    public final void getOffset(int[])
    public static java.lang.reflect.Method sInvalidateChildInParentFastMethod
androidx.customview.widget.FocusStrategy$CollectionAdapter:
    public abstract java.lang.Object get(java.lang.Object,int)
    public abstract int size(java.lang.Object)
androidx.core.view.accessibility.AccessibilityViewCommand:
    public abstract boolean perform(android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments)
androidx.recyclerview.widget.RecyclerView$SavedState:
    public void copyFrom(androidx.recyclerview.widget.RecyclerView$SavedState)
androidx.vectordrawable.graphics.drawable.ArgbEvaluator:
    public static androidx.vectordrawable.graphics.drawable.ArgbEvaluator getInstance()
androidx.constraintlayout.solver.widgets.ConstraintWidget$1
androidx.appcompat.widget.AppCompatSeekBarHelper:
    public void setTickMark(android.graphics.drawable.Drawable)
    public void jumpDrawablesToCurrentState()
    public void drawableStateChanged()
kotlin.ranges.RangesKt___RangesKt
androidx.recyclerview.widget.RecyclerView$ViewFlinger:
    public void fling(int,int)
    public final void internalPostOnAnimation()
    public final float distanceInfluenceForSnapDuration(float)
    public final int computeScrollDuration(int,int,int,int)
androidx.core.text.PrecomputedTextCompat$Params$Builder
kotlin.collections.ArraysKt
androidx.appcompat.app.AlertController$4:
    public final synthetic androidx.appcompat.app.AlertController this$0
androidx.lifecycle.DispatchQueue
com.google.android.material.textfield.TextInputLayout$SavedState$1:
    public com.google.android.material.textfield.TextInputLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public com.google.android.material.textfield.TextInputLayout$SavedState createFromParcel(android.os.Parcel)
    public com.google.android.material.textfield.TextInputLayout$SavedState[] newArray(int)
androidx.constraintlayout.solver.widgets.ConstraintWidgetGroup:
    public java.util.List getStartWidgets(int)
    public java.util.Set getWidgetsToSet(int)
    public java.util.List getWidgetsToSolve()
    public void updateUnresolvedWidgets()
com.google.android.material.textfield.IndicatorViewController:
    public static synthetic int access$002(com.google.android.material.textfield.IndicatorViewController,int)
    public static synthetic android.animation.Animator access$102(com.google.android.material.textfield.IndicatorViewController,android.animation.Animator)
    public static synthetic android.widget.TextView access$200(com.google.android.material.textfield.IndicatorViewController)
    public void showHelper(java.lang.CharSequence)
    public void hideHelperText()
    public void showError(java.lang.CharSequence)
    public boolean isCaptionView(int)
    public void setErrorEnabled(boolean)
    public boolean isErrorEnabled()
    public boolean isHelperTextEnabled()
    public void setHelperTextEnabled(boolean)
    public java.lang.CharSequence getErrorText()
    public java.lang.CharSequence getHelperText()
    public void setTypefaces(android.graphics.Typeface)
    public android.content.res.ColorStateList getErrorViewTextColors()
    public void setErrorViewTextColor(android.content.res.ColorStateList)
    public void setErrorTextAppearance(int)
    public int getHelperTextViewCurrentTextColor()
    public void setHelperTextViewTextColor(android.content.res.ColorStateList)
    public void setHelperTextAppearance(int)
    public final void setCaptionViewVisibilities(int,int)
    public final android.animation.ObjectAnimator createCaptionOpacityAnimator(android.widget.TextView,boolean)
    public final android.animation.ObjectAnimator createCaptionTranslationYAnimator(android.widget.TextView)
    public final boolean canAdjustIndicatorPadding()
    public final void setViewGroupGoneIfEmpty(android.view.ViewGroup,int)
    public final boolean isCaptionStateError(int)
    public final void setTextViewTypeface(android.widget.TextView,android.graphics.Typeface)
kotlinx.coroutines.JobKt__JobKt
androidx.navigation.fragment.DialogFragmentNavigator$1:
    public final synthetic androidx.navigation.fragment.DialogFragmentNavigator this$0
com.google.android.material.internal.NavigationMenuItemView:
    public final boolean shouldExpandActionArea()
    public final void adjustAppearance()
    public final android.graphics.drawable.StateListDrawable createDefaultBackground()
androidx.navigation.Navigation
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealScrimColorProperty:
    public java.lang.Integer get(com.google.android.material.circularreveal.CircularRevealWidget)
    public void set(com.google.android.material.circularreveal.CircularRevealWidget,java.lang.Integer)
com.google.android.material.animation.MotionTiming:
    public static com.google.android.material.animation.MotionTiming createFromAnimator(android.animation.ValueAnimator)
    public static android.animation.TimeInterpolator getInterpolatorCompat(android.animation.ValueAnimator)
    public long getDelay()
    public long getDuration()
    public int getRepeatCount()
    public int getRepeatMode()
androidx.databinding.ViewDataBinding$2
com.google.android.material.internal.DescendantOffsetUtils:
    public static void offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect)
androidx.recyclerview.widget.OpReorderer$Callback:
    public abstract androidx.recyclerview.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int,java.lang.Object)
    public abstract void recycleUpdateOp(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
kotlin.jvm.internal.ReflectionFactory:
    public kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)
    public java.lang.String renderLambdaToString(kotlin.jvm.internal.Lambda)
    public java.lang.String renderLambdaToString(kotlin.jvm.internal.FunctionBase)
    public kotlin.reflect.KProperty1 property1(kotlin.jvm.internal.PropertyReference1Impl)
androidx.databinding.Observable
androidx.constraintlayout.solver.widgets.ConstraintAnchor:
    public androidx.constraintlayout.solver.widgets.ResolutionAnchor getResolutionNode()
    public androidx.constraintlayout.solver.SolverVariable getSolverVariable()
    public androidx.constraintlayout.solver.widgets.ConstraintWidget getOwner()
    public androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type getType()
    public androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength getStrength()
    public androidx.constraintlayout.solver.widgets.ConstraintAnchor getTarget()
    public int getConnectionCreator()
    public boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength,int)
    public boolean isValidConnection(androidx.constraintlayout.solver.widgets.ConstraintAnchor)
    public androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType mConnectionType
com.google.android.material.circularreveal.CircularRevealHelper:
    public void buildCircularRevealCache()
    public void destroyCircularRevealCache()
    public void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
    public com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo()
    public void setCircularRevealScrimColor(int)
    public int getCircularRevealScrimColor()
    public android.graphics.drawable.Drawable getCircularRevealOverlayDrawable()
    public void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable)
    public void draw(android.graphics.Canvas)
    public boolean isOpaque()
androidx.appcompat.app.TwilightManager$TwilightState:
    public long yesterdaySunset
    public long todaySunrise
    public long todaySunset
    public long tomorrowSunrise
androidx.core.content.ContextCompat:
    public static void startActivity(android.content.Context,android.content.Intent,android.os.Bundle)
com.google.android.material.animation.MotionSpec:
    public static void addInfoFromAnimator(com.google.android.material.animation.MotionSpec,android.animation.Animator)
    public boolean hasTiming(java.lang.String)
    public void setTiming(java.lang.String,com.google.android.material.animation.MotionTiming)
    public void setPropertyValues(java.lang.String,android.animation.PropertyValuesHolder[])
    public long getTotalDuration()
androidx.core.widget.EdgeEffectCompat
androidx.fragment.app.FragmentStateManager$1
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath:
    public void toPath(android.graphics.Path)
androidx.lifecycle.ReportFragment$ActivityInitializationListener:
    public abstract void onCreate()
    public abstract void onStart()
    public abstract void onResume()
com.google.android.material.floatingactionbutton.MotionStrategy:
    public abstract void setMotionSpec(com.google.android.material.animation.MotionSpec)
    public abstract com.google.android.material.animation.MotionSpec getMotionSpec()
    public abstract android.animation.AnimatorSet createAnimator()
    public abstract java.util.List getListeners()
    public abstract void onAnimationStart(android.animation.Animator)
    public abstract void onAnimationEnd()
    public abstract void onAnimationCancel()
    public abstract void onChange(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback)
androidx.collection.MapCollections:
    public static boolean containsAllHelper(java.util.Map,java.util.Collection)
    public static boolean removeAllHelper(java.util.Map,java.util.Collection)
    public java.util.Set getEntrySet()
    public java.util.Set getKeySet()
    public java.util.Collection getValues()
androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback:
    public abstract void onWindowVisibilityChanged(int)
    public abstract void showForSystem()
    public abstract void hideForSystem()
    public abstract void enableContentAnimations(boolean)
    public abstract void onContentScrollStarted()
    public abstract void onContentScrollStopped()
androidx.lifecycle.LiveData:
    public void observeForever(androidx.lifecycle.Observer)
    public void setValue(java.lang.Object)
    public int getVersion()
    public boolean hasActiveObservers()
    public final java.lang.Runnable mPostValueRunnable
androidx.appcompat.widget.SearchView$OnQueryTextListener:
    public abstract boolean onQueryTextSubmit(java.lang.String)
    public abstract boolean onQueryTextChange(java.lang.String)
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder:
    public final androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback
androidx.core.view.MenuItemCompat
kotlin.ranges.IntRange:
    public static final kotlin.ranges.IntRange EMPTY
    public static final kotlin.ranges.IntRange$Companion Companion
androidx.appcompat.app.ActionBar:
    public boolean openOptionsMenu()
    public boolean closeOptionsMenu()
    public boolean invalidateOptionsMenu()
    public boolean onMenuKeyEvent()
    public void onDestroy()
androidx.loader.content.Loader$OnLoadCompleteListener
android.support.v4.media.session.MediaSessionCompat$QueueItem$1:
    public android.support.v4.media.session.MediaSessionCompat$QueueItem createFromParcel(android.os.Parcel)
    public android.support.v4.media.session.MediaSessionCompat$QueueItem[] newArray(int)
androidx.appcompat.app.AppCompatDelegate:
    public static int getDefaultNightMode()
    public static void markStarted(androidx.appcompat.app.AppCompatDelegate)
    public static void markStopped(androidx.appcompat.app.AppCompatDelegate)
    public abstract androidx.appcompat.app.ActionBar getSupportActionBar()
    public abstract android.view.MenuInflater getMenuInflater()
    public abstract void onPostCreate(android.os.Bundle)
    public abstract void onConfigurationChanged(android.content.res.Configuration)
    public abstract void onStart()
    public abstract void onPostResume()
    public void setTheme(int)
    public abstract android.view.View findViewById(int)
    public void attachBaseContext(android.content.Context)
    public abstract void onDestroy()
    public abstract androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate()
    public abstract void onSaveInstanceState(android.os.Bundle)
    public int getLocalNightMode()
    public static int sDefaultNightMode
kotlin.jvm.internal.CallableReference$NoReceiver:
    public static synthetic kotlin.jvm.internal.CallableReference$NoReceiver access$000()
com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo:
    public void set(float,float,float)
androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener:
    public abstract void onFitSystemWindows(android.graphics.Rect)
androidx.constraintlayout.solver.widgets.Guideline$1
androidx.transition.ViewUtils$2:
    public android.graphics.Rect get(android.view.View)
    public void set(android.view.View,android.graphics.Rect)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$5:
    public void set(android.view.View,java.lang.Float)
    public java.lang.Float get(android.view.View)
android.support.v4.media.MediaDescriptionCompatApi21
androidx.databinding.DataBinderMapperImpl:
    private void constructor$androidx$databinding$MergedDataBinderMapper()
    private androidx.databinding.ViewDataBinding getDataBinder$androidx$databinding$MergedDataBinderMapper(androidx.databinding.DataBindingComponent,android.view.View,int)
    private androidx.databinding.ViewDataBinding getDataBinder$androidx$databinding$MergedDataBinderMapper(androidx.databinding.DataBindingComponent,android.view.View[],int)
    private final boolean loadFeatures$androidx$databinding$MergedDataBinderMapper()
    private void addMapper$androidx$databinding$MergedDataBinderMapper(androidx.databinding.DataBinderMapper)
    public androidx.databinding.ViewDataBinding getDataBinder(androidx.databinding.DataBindingComponent,android.view.View[],int)
androidx.navigation.NavOptions:
    public boolean shouldLaunchSingleTop()
    public int getPopUpTo()
    public boolean isPopUpToInclusive()
    public int getEnterAnim()
    public int getExitAnim()
    public int getPopEnterAnim()
    public int getPopExitAnim()
android.support.v4.media.session.MediaSessionCompat$Token:
    public void <init>(java.lang.Object,android.support.v4.media.session.IMediaSession,android.os.Bundle)
    public android.support.v4.media.session.IMediaSession getExtraBinder()
    public void setExtraBinder(android.support.v4.media.session.IMediaSession)
    public void setSessionToken2Bundle(android.os.Bundle)
    public android.os.Bundle mSessionToken2Bundle
androidx.core.provider.FontsContractCompat$FontInfo:
    public android.net.Uri getUri()
    public int getTtcIndex()
    public int getWeight()
    public boolean isItalic()
    public int getResultCode()
androidx.constraintlayout.solver.ArrayRow:
    public boolean hasKeyVariable()
    public java.lang.String toReadableString()
    public void reset()
    public boolean hasVariable(androidx.constraintlayout.solver.SolverVariable)
    public androidx.constraintlayout.solver.ArrayRow createRowDefinition(androidx.constraintlayout.solver.SolverVariable,int)
    public androidx.constraintlayout.solver.ArrayRow createRowEquals(androidx.constraintlayout.solver.SolverVariable,int)
    public androidx.constraintlayout.solver.ArrayRow createRowEquals(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int)
    public androidx.constraintlayout.solver.ArrayRow addSingleError(androidx.constraintlayout.solver.SolverVariable,int)
    public androidx.constraintlayout.solver.ArrayRow createRowEqualMatchDimensions(float,float,float,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable)
    public androidx.constraintlayout.solver.ArrayRow createRowCentering(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,float,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int)
    public androidx.constraintlayout.solver.ArrayRow createRowDimensionPercent(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,float)
    public void ensurePositiveConstant()
    public boolean chooseSubject(androidx.constraintlayout.solver.LinearSystem)
    public androidx.constraintlayout.solver.SolverVariable pickPivot(androidx.constraintlayout.solver.SolverVariable)
    public boolean isEmpty()
    public androidx.constraintlayout.solver.SolverVariable getPivotCandidate(androidx.constraintlayout.solver.LinearSystem,boolean[])
    public void clear()
    public void initFromRow(androidx.constraintlayout.solver.LinearSystem$Row)
    public androidx.constraintlayout.solver.SolverVariable getKey()
androidx.navigation.NavType$3:
    public void put(android.os.Bundle,java.lang.String,int[])
    public int[] get(android.os.Bundle,java.lang.String)
    public int[] parseValue()
androidx.transition.Fade$1:
    public final synthetic androidx.transition.Fade this$0
androidx.appcompat.app.ToolbarActionBar
com.google.android.material.shape.ShapePath$1:
    public final synthetic com.google.android.material.shape.ShapePath this$0
com.google.android.material.transformation.FabTransformationBehavior$2:
    public final synthetic com.google.android.material.transformation.FabTransformationBehavior this$0
androidx.fragment.app.FragmentViewModelLazyKt$createViewModelLazy$factoryPromise$1:
    public final androidx.lifecycle.ViewModelProvider$Factory invoke()
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo:
    public void saveSpanReferenceLines(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span[])
    public void assignCoordinateFromPadding(int)
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable:
    public void setEnabled(boolean)
androidx.core.util.Preconditions
androidx.core.widget.CompoundButtonCompat
androidx.core.text.TextUtilsCompat:
    public static int getLayoutDirectionFromFirstChar(java.util.Locale)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$DisabledElevationAnimation:
    public final synthetic com.google.android.material.floatingactionbutton.FloatingActionButtonImpl this$0
com.google.android.material.drawable.DrawableUtils
androidx.databinding.ViewDataBinding$WeakListener:
    public void setLifecycleOwner(androidx.lifecycle.LifecycleOwner)
    public void setTarget(java.lang.Object)
    public java.lang.Object getTarget()
    public androidx.databinding.ViewDataBinding getBinder()
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper$1:
    public android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper createFromParcel(android.os.Parcel)
    public android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper[] newArray(int)
androidx.navigation.fragment.FragmentKt
androidx.appcompat.app.AppCompatDialog:
    public static int getThemeResId(android.content.Context,int)
androidx.constraintlayout.solver.LinearSystem:
    public static void getMetrics()
    public static androidx.constraintlayout.solver.ArrayRow createRowDimensionPercent(androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,float,boolean)
    public static void <clinit>()
    public androidx.constraintlayout.solver.SolverVariable createExtraVariable()
    public void addSingleError(androidx.constraintlayout.solver.ArrayRow,int,int)
    public void minimize()
    public androidx.constraintlayout.solver.Cache getCache()
    public void addGreaterBarrier(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,boolean)
    public void addLowerBarrier(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,boolean)
    public void addCenterPoint(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintWidget,float,int)
    public final void addError(androidx.constraintlayout.solver.ArrayRow)
    public final int enforceBFS()
    public androidx.constraintlayout.solver.ArrayRow[] tempClientsCopy
    public static androidx.constraintlayout.solver.Metrics sMetrics
androidx.transition.ChangeBounds$5:
    public void set(android.view.View,android.graphics.PointF)
    public android.graphics.PointF get()
android.support.v4.media.MediaDescriptionCompat$Builder
androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo:
    public void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.fragment.app.FragmentActivity:
    public final android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
    public void onResumeFragments()
    public boolean onPrepareOptionsPanel(android.view.View,android.view.Menu)
    public void onAttachFragment()
    public androidx.fragment.app.FragmentManager getSupportFragmentManager()
    public final void markFragmentsCreated()
    public boolean mStartedIntentSenderFromFragment
    public boolean mStartedActivityFromFragment
androidx.navigation.ui.AppBarConfiguration:
    public void <init>(java.util.Set,androidx.drawerlayout.widget.DrawerLayout)
    public java.util.Set getTopLevelDestinations()
    public androidx.drawerlayout.widget.DrawerLayout getDrawerLayout()
    public final androidx.navigation.ui.AppBarConfiguration$OnNavigateUpListener mFallbackOnNavigateUpListener
androidx.appcompat.view.ViewPropertyAnimatorCompatSet:
    public androidx.appcompat.view.ViewPropertyAnimatorCompatSet play(androidx.core.view.ViewPropertyAnimatorCompat)
    public androidx.appcompat.view.ViewPropertyAnimatorCompatSet playSequentially(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorCompat)
    public void onAnimationsEnded()
    public androidx.appcompat.view.ViewPropertyAnimatorCompatSet setDuration(long)
    public androidx.appcompat.view.ViewPropertyAnimatorCompatSet setInterpolator(android.view.animation.Interpolator)
    public androidx.appcompat.view.ViewPropertyAnimatorCompatSet setListener(androidx.core.view.ViewPropertyAnimatorListener)
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState$1:
    public com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState createFromParcel(android.os.Parcel)
    public com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState[] newArray(int)
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState:
    public boolean hasPanelItems()
    public void setStyle(android.content.Context)
    public androidx.appcompat.view.menu.MenuView getListMenuView(androidx.appcompat.view.menu.MenuPresenter$Callback)
    public int x
    public int y
com.google.android.material.animation.TransformationCallback:
    public abstract void onTranslationChanged(android.view.View)
    public abstract void onScaleChanged(android.view.View)
com.google.android.material.shadow.ShadowViewDelegate:
    public abstract void setShadowPadding(int,int,int,int)
    public abstract void setBackgroundDrawable(android.graphics.drawable.Drawable)
    public abstract boolean isCompatPaddingEnabled()
androidx.navigation.NavOptions$Builder
androidx.core.view.ViewCompat$4:
    public java.lang.CharSequence frameworkGet(android.view.View)
    public void frameworkSet(android.view.View,java.lang.CharSequence)
    public boolean shouldUpdate(java.lang.CharSequence,java.lang.CharSequence)
androidx.arch.core.internal.FastSafeIterableMap:
    public java.util.Map$Entry ceil(java.lang.Object)
com.google.android.material.chip.ChipGroup$CheckedStateTracker:
    public void <init>(com.google.android.material.chip.ChipGroup)
androidx.appcompat.widget.Toolbar:
    public boolean canShowOverflowMenu()
    public boolean isOverflowMenuShowPending()
    public boolean hideOverflowMenu()
    public void setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)
    public void dismissPopupMenus()
    public boolean hasExpandedActionView()
    public void collapseActionView()
    public void setTitleTextAppearance(android.content.Context,int)
    public void setSubtitleTextAppearance(android.content.Context,int)
    public void inflateMenu(int)
    public void setContentInsetsRelative(int,int)
    public androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.util.AttributeSet)
    public void removeChildrenForExpandedActionView()
    public void addChildrenForExpandedActionView()
    public final void ensureLogoView()
    public final void postShowOverflowMenu()
    public final boolean shouldCollapse()
    public final int getViewListMeasuredWidth(java.util.List,int[])
    public final int getChildVerticalGravity(int)
    public androidx.appcompat.view.menu.MenuPresenter$Callback mActionMenuPresenterCallback
    public androidx.appcompat.view.menu.MenuBuilder$Callback mMenuBuilderCallback
com.google.android.material.shadow.ShadowRenderer:
    public void <init>(int)
    public void drawEdgeShadow(android.graphics.Canvas,android.graphics.Matrix,android.graphics.RectF,int)
    public void drawCornerShadow(android.graphics.Canvas,android.graphics.Matrix,android.graphics.RectF,int,float,float)
    public android.graphics.Paint getShadowPaint()
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$3:
    public android.graphics.Matrix evaluate(float,android.graphics.Matrix,android.graphics.Matrix)
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton:
    public final float[] mTempPts
androidx.navigation.NavControllerViewModel:
    public static androidx.navigation.NavControllerViewModel getInstance(androidx.lifecycle.ViewModelStore)
    public void clear(java.util.UUID)
    public androidx.lifecycle.ViewModelStore getViewModelStore(java.util.UUID)
androidx.transition.ViewOverlayApi14:
    public static android.view.ViewGroup getContentView(android.view.View)
androidx.fragment.app.FragmentManagerViewModel:
    public static androidx.fragment.app.FragmentManagerViewModel getInstance(androidx.lifecycle.ViewModelStore)
    public boolean isCleared()
    public boolean addRetainedFragment(androidx.fragment.app.Fragment)
    public androidx.fragment.app.Fragment findRetainedFragmentByWho(java.lang.String)
    public java.util.Collection getRetainedFragments()
    public boolean removeRetainedFragment(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment)
    public androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment)
    public void clearNonConfigState(androidx.fragment.app.Fragment)
androidx.lifecycle.LiveData$AlwaysActiveObserver:
    public final synthetic androidx.lifecycle.LiveData this$0
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale
androidx.appcompat.widget.AppCompatHintHelper
com.google.android.material.datepicker.DateStrings
androidx.transition.AnimatorUtils
androidx.recyclerview.widget.RecyclerView$LayoutManager:
    public final boolean isItemPrefetchEnabled()
    public void dispatchAttachedToWindow(androidx.recyclerview.widget.RecyclerView)
    public void dispatchDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler)
    public boolean isAttachedToWindow()
    public boolean removeCallbacks(java.lang.Runnable)
    public void onAttachedToWindow()
    public void onDetachedFromWindow()
    public boolean getClipToPadding()
    public boolean isSmoothScrolling()
    public void addDisappearingView(android.view.View)
    public void addDisappearingView(android.view.View,int)
    public void addView(android.view.View,int)
    public void removeView(android.view.View)
    public int getBaseline()
    public void detachViewAt(int)
    public void attachView(android.view.View,int,androidx.recyclerview.widget.RecyclerView$LayoutParams)
    public void attachView(android.view.View,int)
    public void moveView(int,int)
    public int getWidthMode()
    public int getHeightMode()
    public int getWidth()
    public int getHeight()
    public int getItemCount()
    public void measureChildWithMargins(android.view.View,int,int)
    public void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect)
    public void calculateItemDecorationsForChild(android.view.View,android.graphics.Rect)
    public int getTopDecorationHeight(android.view.View)
    public int getBottomDecorationHeight(android.view.View)
    public int getLeftDecorationWidth(android.view.View)
    public int getRightDecorationWidth(android.view.View)
    public android.view.View onInterceptFocusSearch()
    public boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean)
    public boolean isViewPartiallyVisible(android.view.View,boolean)
    public boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView)
    public boolean onRequestChildFocus1(androidx.recyclerview.widget.RecyclerView,android.view.View,android.view.View)
    public void onAdapterChanged()
    public boolean onAddFocusables()
    public void onItemsUpdated()
    public void onMeasure(int,int)
    public void setMeasuredDimension(int,int)
    public void stopSmoothScroller()
    public void onSmoothScrollerStopped(androidx.recyclerview.widget.RecyclerView$SmoothScroller)
    public void onInitializeAccessibilityNodeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
    public void onInitializeAccessibilityNodeInfo(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
    public void onInitializeAccessibilityEvent1(android.view.accessibility.AccessibilityEvent)
    public void requestSimpleAnimationsInNextLayout()
    public int getSelectionModeForAccessibility()
    public boolean isLayoutHierarchical()
    public boolean performAccessibilityAction(int,android.os.Bundle)
    public boolean performAccessibilityAction(int)
    public boolean performAccessibilityActionForItem(android.view.View,int,android.os.Bundle)
    public boolean performAccessibilityActionForItem()
    public boolean hasFlexibleChildInBothOrientations()
    public final void detachViewInternal(int)
    public final void scrapOrRecycleView(androidx.recyclerview.widget.RecyclerView$Recycler,int,android.view.View)
    public final int[] getChildRectangleOnScreenScrollAmount(android.view.View,android.graphics.Rect)
    public final boolean isFocusedChildVisibleAfterScrolling(androidx.recyclerview.widget.RecyclerView,int,int)
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraCallback
com.google.android.material.animation.ImageMatrixProperty:
    public void set(android.widget.ImageView,android.graphics.Matrix)
    public android.graphics.Matrix get(android.widget.ImageView)
com.google.android.material.datepicker.CalendarConstraints$Builder:
    public com.google.android.material.datepicker.CalendarConstraints$Builder setOpenAt(long)
    public com.google.android.material.datepicker.CalendarConstraints build()
kotlin.text.CharsKt__CharJVMKt
com.google.android.material.appbar.AppBarLayout:
    public com.google.android.material.appbar.AppBarLayout$LayoutParams generateDefaultLayoutParams()
    public com.google.android.material.appbar.AppBarLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)
    public boolean hasChildWithInterpolator()
    public boolean hasScrollableChildren()
    public void onOffsetChanged(int)
    public boolean isLiftOnScroll()
    public void resetPendingAction()
    public final void updateWillNotDraw()
    public final boolean shouldDrawStatusBarForeground()
    public final boolean hasCollapsibleChild()
    public final void invalidateScrollRanges()
    public final void setExpanded(boolean,boolean,boolean)
    public final boolean setLiftableState(boolean)
    public final void startLiftOnScrollElevationOverlayAnimation(com.google.android.material.shape.MaterialShapeDrawable,boolean)
    public final android.view.View findLiftOnScrollTargetView(android.view.View)
    public final void clearLiftOnScrollTargetView()
    public androidx.core.view.WindowInsetsCompat lastInsets
    public java.util.List listeners
    public boolean liftableOverride
androidx.navigation.NavDestination$DeepLinkMatch:
    public androidx.navigation.NavDestination getDestination()
    public android.os.Bundle getMatchingArgs()
com.google.android.material.behavior.SwipeDismissBehavior$OnDismissListener
kotlin.ranges.RangesKt
kotlin.random.FallbackThreadLocalRandom$implStorage$1:
    public java.util.Random initialValue()
androidx.core.view.GravityCompat
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState:
    public void invalidateCache()
    public final int getCapacity()
    public final int getChildCount()
    public final boolean setLayoutDirection(int,int)
    public final void applyTheme(android.content.res.Resources$Theme)
    public final void setVariablePadding(boolean)
    public final android.graphics.Rect getConstantPadding()
    public final void setConstantSize(boolean)
    public final boolean isConstantSize()
    public final int getConstantWidth()
    public final int getConstantHeight()
    public final int getConstantMinimumWidth()
    public final int getConstantMinimumHeight()
    public final void setEnterFadeDuration(int)
    public final void setExitFadeDuration(int)
    public final int getOpacity()
    public void growArray(int,int)
    public synchronized boolean canConstantState()
    public final android.graphics.drawable.Drawable prepareDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.app.AlertController$AlertParams$1
androidx.recyclerview.widget.ScrollbarHelper
com.google.android.material.internal.StateListAnimator:
    public void setState(int[])
    public void jumpToCurrentState()
    public final void start(com.google.android.material.internal.StateListAnimator$Tuple)
    public final void cancel()
androidx.arch.core.executor.DefaultTaskExecutor:
    public static android.os.Handler createAsync(android.os.Looper)
    public void executeOnDiskIO(java.lang.Runnable)
    public void postToMainThread(java.lang.Runnable)
    public volatile android.os.Handler mMainHandler
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener:
    public androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(androidx.core.view.ViewPropertyAnimatorCompat,int)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior:
    public int getScrimColor()
    public float getScrimOpacity()
    public boolean blocksInteractionBelow(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View)
    public void onDependentViewRemoved()
    public void onNestedScrollAccepted()
    public void onNestedScrollAccepted(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int)
    public void onStopNestedScroll()
    public void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int)
    public void onNestedPreScroll()
    public boolean onNestedFling()
    public androidx.core.view.WindowInsetsCompat onApplyWindowInsets(androidx.core.view.WindowInsetsCompat)
androidx.fragment.app.ListFragment:
    public void onListItemClick()
    public void setListAdapter(android.widget.ListAdapter)
    public java.lang.CharSequence mEmptyText
androidx.appcompat.widget.MenuPopupWindow:
    public void setEnterTransition(java.lang.Object)
    public void setExitTransition(java.lang.Object)
    public void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
    public void setTouchModal(boolean)
com.google.android.material.bottomsheet.BottomSheetDialogFragment$1
androidx.appcompat.app.AppCompatDelegateImpl$4:
    public void onFitSystemWindows(android.graphics.Rect)
androidx.navigation.NavBackStackEntryState:
    public java.util.UUID getUUID()
    public int getDestinationId()
    public android.os.Bundle getArgs()
    public android.os.Bundle getSavedState()
androidx.appcompat.view.menu.MenuPopup:
    public static androidx.appcompat.view.menu.MenuAdapter toMenuAdapter(android.widget.ListAdapter)
    public void setEpicenterBounds(android.graphics.Rect)
    public android.graphics.Rect getEpicenterBounds()
androidx.transition.ObjectAnimatorUtils
com.google.android.material.elevation.ElevationOverlayProvider:
    public int compositeOverlayIfNeeded(int,float)
    public int compositeOverlay(int,float)
    public float calculateOverlayAlphaFraction(float)
    public boolean isThemeElevationOverlayEnabled()
    public final boolean isThemeSurfaceColor(int)
androidx.core.graphics.drawable.DrawableCompat
com.google.android.material.floatingactionbutton.FloatingActionButton:
    public static synthetic int access$000(com.google.android.material.floatingactionbutton.FloatingActionButton)
    public void show(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener)
    public void hide(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener)
    public void getMeasuredContentRect(android.graphics.Rect)
    public final com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener wrapOnVisibilityChangedListener(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener)
    public final com.google.android.material.floatingactionbutton.FloatingActionButtonImpl createImpl()
androidx.constraintlayout.solver.widgets.Guideline:
    public int getOrientation()
    public java.util.ArrayList getAnchors()
    public void setGuidePercent(float)
    public void setGuideBegin(int)
    public void setGuideEnd(int)
    public int mMinimumPosition
    public androidx.constraintlayout.solver.widgets.Rectangle mHead
    public int mHeadSize
com.google.android.material.transformation.ExpandableTransformationBehavior:
    public static synthetic android.animation.AnimatorSet access$002(com.google.android.material.transformation.ExpandableTransformationBehavior,android.animation.AnimatorSet)
androidx.appcompat.view.menu.ExpandedMenuView:
    public int mAnimations
androidx.collection.MapCollections$EntrySet:
    public boolean add()
androidx.databinding.ObservableMap
androidx.recyclerview.widget.RecyclerView$6:
    public void offsetPositionsForRemovingInvisible(int,int)
    public void offsetPositionsForRemovingLaidOutOrNewView(int,int)
    public void onDispatchFirstPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    public void onDispatchSecondPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    public void offsetPositionsForAdd(int,int)
    public void offsetPositionsForMove(int,int)
androidx.core.widget.AutoScrollHelper:
    public static int constrain(int,int,int)
    public androidx.core.widget.AutoScrollHelper setEnabled(boolean)
    public androidx.core.widget.AutoScrollHelper setMaximumVelocity(float,float)
    public androidx.core.widget.AutoScrollHelper setMinimumVelocity(float,float)
    public androidx.core.widget.AutoScrollHelper setRelativeVelocity(float,float)
    public androidx.core.widget.AutoScrollHelper setEdgeType(int)
    public androidx.core.widget.AutoScrollHelper setRelativeEdges(float,float)
    public androidx.core.widget.AutoScrollHelper setMaximumEdges(float,float)
    public androidx.core.widget.AutoScrollHelper setActivationDelay(int)
    public androidx.core.widget.AutoScrollHelper setRampUpDuration(int)
    public androidx.core.widget.AutoScrollHelper setRampDownDuration(int)
    public abstract void scrollTargetBy(int,int)
    public abstract boolean canTargetScrollHorizontally(int)
    public abstract boolean canTargetScrollVertically(int)
    public void cancelTargetTouch()
    public final void startAnimating()
    public final float getEdgeValue(float,float,float,float)
    public boolean mExclusive
androidx.transition.FragmentTransitionSupport$1:
    public final synthetic android.graphics.Rect val$epicenter
    public final synthetic androidx.transition.FragmentTransitionSupport this$0
com.google.android.material.animation.ArgbEvaluatorCompat:
    public static com.google.android.material.animation.ArgbEvaluatorCompat getInstance()
    public java.lang.Integer evaluate(float,java.lang.Integer,java.lang.Integer)
com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment:
    public float getFabDiameter()
    public void setFabDiameter(float)
    public void setHorizontalOffset(float)
    public float getHorizontalOffset()
    public float getCradleVerticalOffset()
    public void setCradleVerticalOffset(float)
    public float getFabCradleMargin()
    public void setFabCradleMargin(float)
    public float getFabCradleRoundedCornerRadius()
    public void setFabCradleRoundedCornerRadius(float)
androidx.databinding.ViewDataBinding$3
com.google.android.material.datepicker.CalendarConstraints$1:
    public com.google.android.material.datepicker.CalendarConstraints createFromParcel(android.os.Parcel)
    public com.google.android.material.datepicker.CalendarConstraints[] newArray(int)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView:
    public void <init>(android.content.Context,android.util.AttributeSet,int)
androidx.navigation.NavDeepLink:
    public boolean isExactDeepLink()
    public android.os.Bundle getMatchingArguments(android.net.Uri,java.util.Map)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat:
    public static androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrap(android.view.accessibility.AccessibilityNodeInfo)
    public static androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View)
    public static androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain()
    public static androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
    public static void <clinit>()
    public android.view.accessibility.AccessibilityNodeInfo unwrap()
    public void setSource(android.view.View,int)
    public int getChildCount()
    public void addChild(android.view.View,int)
    public int getActions()
    public void addAction(int)
    public boolean performAction(int,android.os.Bundle)
    public void setParent(android.view.View)
    public void setParent(android.view.View,int)
    public void getBoundsInParent(android.graphics.Rect)
    public void setBoundsInParent(android.graphics.Rect)
    public void getBoundsInScreen(android.graphics.Rect)
    public void setBoundsInScreen(android.graphics.Rect)
    public boolean isCheckable()
    public void setCheckable(boolean)
    public boolean isChecked()
    public void setChecked(boolean)
    public boolean isFocusable()
    public void setFocusable(boolean)
    public boolean isFocused()
    public void setFocused(boolean)
    public void setVisibleToUser(boolean)
    public void setAccessibilityFocused(boolean)
    public boolean isSelected()
    public boolean isClickable()
    public void setClickable(boolean)
    public boolean isLongClickable()
    public boolean isEnabled()
    public void setEnabled(boolean)
    public boolean isPassword()
    public boolean isScrollable()
    public void setScrollable(boolean)
    public java.lang.CharSequence getPackageName()
    public void setPackageName(java.lang.CharSequence)
    public java.lang.CharSequence getClassName()
    public void setClassName(java.lang.CharSequence)
    public void setText(java.lang.CharSequence)
    public void addSpansToExtras(java.lang.CharSequence,android.view.View)
    public void setContentDescription(java.lang.CharSequence)
    public void recycle()
    public java.lang.String getViewIdResourceName()
    public java.util.List getActionList()
    public void setContentInvalid(boolean)
    public void setError(java.lang.CharSequence)
    public void setDismissable(boolean)
    public void setPaneTitle(java.lang.CharSequence)
    public void setScreenReaderFocusable(boolean)
    public boolean isShowingHintText()
    public void setShowingHintText(boolean)
    public void setHeading(boolean)
    public final android.util.SparseArray getOrCreateSpansFromViewTags(android.view.View)
    public final android.util.SparseArray getSpansFromViewTags(android.view.View)
    public final int idForClickableSpan(android.text.style.ClickableSpan,android.util.SparseArray)
    public final boolean hasSpans()
    public final void clearExtrasSpans()
    public final void addSpanLocationToExtras(android.text.style.ClickableSpan,android.text.Spanned,int)
    public final void removeCollectedSpans(android.view.View)
    public final boolean getBooleanProperty(int)
androidx.appcompat.widget.SuggestionsAdapter:
    public void setQueryRefinement(int)
    public android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)
    public final java.lang.CharSequence formatUrl(java.lang.CharSequence)
    public final void setViewText(android.widget.TextView,java.lang.CharSequence)
    public final android.graphics.drawable.Drawable getIcon1(android.database.Cursor)
    public final android.graphics.drawable.Drawable getIcon2(android.database.Cursor)
    public final void setViewDrawable(android.widget.ImageView,android.graphics.drawable.Drawable,int)
    public final android.graphics.drawable.Drawable getDrawable(android.net.Uri)
    public final android.graphics.drawable.Drawable checkIconCache(java.lang.String)
    public final void storeInIconCache(java.lang.String,android.graphics.drawable.Drawable)
    public final android.graphics.drawable.Drawable getDefaultIcon1()
    public final android.graphics.drawable.Drawable getActivityIconWithCache(android.content.ComponentName)
    public final android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName)
    public final android.app.SearchManager mSearchManager
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$3
androidx.viewpager2.adapter.FragmentStateAdapter$5:
    public final synthetic android.os.Handler val$handler
    public final synthetic java.lang.Runnable val$runnable
androidx.core.view.WindowInsetsCompat:
    public static androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets)
    public boolean isConsumed()
    public androidx.core.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int)
    public android.view.WindowInsets toWindowInsets()
androidx.appcompat.widget.TooltipPopup:
    public static android.view.View getAppRootView(android.view.View)
    public void show(android.view.View,int,int,boolean,java.lang.CharSequence)
    public boolean isShowing()
    public final void computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams)
androidx.fragment.app.FragmentStore:
    public void resetActiveFragments()
    public void restoreAddedFragments(java.util.List)
    public void makeActive(androidx.fragment.app.FragmentStateManager)
    public void makeInactive(androidx.fragment.app.FragmentStateManager)
    public java.util.ArrayList saveActiveFragments()
    public java.util.ArrayList saveAddedFragments()
    public androidx.fragment.app.Fragment findFragmentById(int)
    public androidx.fragment.app.Fragment findFragmentByTag(java.lang.String)
    public androidx.fragment.app.FragmentStateManager getFragmentStateManager(java.lang.String)
    public androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)
    public androidx.fragment.app.Fragment findFragmentUnder(androidx.fragment.app.Fragment)
    public void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
androidx.appcompat.app.AppCompatActivity:
    public void onCreateSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder)
    public void onPrepareSupportNavigateUpTaskStack()
    public boolean supportShouldUpRecreateTask(android.content.Intent)
    public void supportNavigateUpTo(android.content.Intent)
    public void onSupportContentChanged()
    public androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate()
    public void onNightModeChanged()
    public final boolean performMenuItemShortcut(android.view.KeyEvent)
androidx.appcompat.widget.ForwardingListener:
    public static boolean pointInView(android.view.View,float,float,float)
    public void onLongPress()
    public final boolean onTouchObserved(android.view.MotionEvent)
    public final boolean onTouchForwarded(android.view.MotionEvent)
    public final boolean toLocalMotionEvent(android.view.View,android.view.MotionEvent)
    public final boolean toGlobalMotionEvent(android.view.View,android.view.MotionEvent)
androidx.recyclerview.widget.ViewInfoStore$InfoRecord:
    public static void drainCache()
kotlinx.coroutines.Job$Key
com.google.android.material.radiobutton.MaterialRadioButton:
    public void <init>(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.widget.AppCompatRatingBar:
    public void <init>(android.content.Context,android.util.AttributeSet,int)
androidx.transition.ViewUtils$1:
    public java.lang.Float get(android.view.View)
    public void set(android.view.View,java.lang.Float)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$4:
    public void set(android.view.View,java.lang.Float)
    public java.lang.Float get(android.view.View)
androidx.appcompat.widget.ScrollingTabContainerView$1
androidx.core.text.BidiFormatter:
    public static boolean isRtlLocale(java.util.Locale)
    public boolean getStereoReset()
    public java.lang.CharSequence unicodeWrap(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat,boolean)
    public java.lang.CharSequence unicodeWrap(java.lang.CharSequence)
    public final java.lang.String markAfter(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat)
    public final java.lang.String markBefore(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat)
android.support.v4.media.session.PlaybackStateCompatApi22
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1:
    public void onEnd()
androidx.constraintlayout.widget.ConstraintSet$Constraint:
    public synthetic void <init>(androidx.constraintlayout.widget.ConstraintSet$1)
    public static synthetic void access$200(androidx.constraintlayout.widget.ConstraintSet$Constraint,androidx.constraintlayout.widget.ConstraintHelper,int,androidx.constraintlayout.widget.Constraints$LayoutParams)
    public static synthetic void access$300(androidx.constraintlayout.widget.ConstraintSet$Constraint,int,androidx.constraintlayout.widget.Constraints$LayoutParams)
    public androidx.constraintlayout.widget.ConstraintSet$Constraint clone()
    public final void fillFromConstraints(androidx.constraintlayout.widget.ConstraintHelper,int,androidx.constraintlayout.widget.Constraints$LayoutParams)
    public final void fillFrom(int,androidx.constraintlayout.widget.ConstraintLayout$LayoutParams)
com.google.android.material.textfield.PasswordToggleEndIconDelegate$3:
    public final synthetic com.google.android.material.textfield.PasswordToggleEndIconDelegate this$0
androidx.fragment.app.FragmentTransition$Callback:
    public abstract void onStart(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal)
    public abstract void onComplete(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal)
com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop:
    public com.google.android.material.floatingactionbutton.BorderDrawable createBorderDrawable(int,android.content.res.ColorStateList)
androidx.transition.FragmentTransitionSupport$2:
    public final synthetic androidx.transition.FragmentTransitionSupport this$0
com.google.android.material.transformation.FabTransformationScrimBehavior:
    public final void createScrimAnimation(android.view.View,boolean,boolean,java.util.List)
androidx.navigation.NavGraph:
    public java.lang.String getDisplayName()
    public final int getStartDestination()
    public final void setStartDestination(int)
    public java.lang.String getStartDestDisplayName()
androidx.core.graphics.TypefaceCompatApi21Impl:
    public static java.lang.Object newFamily()
    public static android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object)
    public static void <clinit>()
    public final java.io.File getFile(android.os.ParcelFileDescriptor)
androidx.lifecycle.LiveData$1
androidx.appcompat.widget.AppCompatDrawableManager:
    public static synthetic android.graphics.PorterDuff$Mode access$000()
    public synchronized android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean)
    public synchronized void onConfigurationChanged(android.content.Context)
androidx.core.view.ViewCompat:
    public static void setImportantForAutofill(android.view.View,int)
    public static androidx.core.view.AccessibilityDelegateCompat getOrCreateAccessibilityDelegateCompat(android.view.View)
    public static android.view.View$AccessibilityDelegate getAccessibilityDelegateThroughReflection(android.view.View)
    public static void addAccessibilityAction(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)
    public static java.util.List getActionList(android.view.View)
    public static android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View)
    public static androidx.core.view.ViewCompat$AccessibilityViewProperty screenReaderFocusableProperty()
    public static java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)
    public static androidx.core.view.ViewCompat$AccessibilityViewProperty paneTitleProperty()
    public static boolean isAccessibilityHeading(android.view.View)
    public static androidx.core.view.ViewCompat$AccessibilityViewProperty accessibilityHeadingProperty()
    public static final java.util.concurrent.atomic.AtomicInteger sNextGeneratedId
    public static final int[] ACCESSIBILITY_ACTIONS_RESOURCE_IDS
    public static androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager sAccessibilityPaneVisibilityManager
androidx.lifecycle.ViewModelLazy:
    public androidx.lifecycle.ViewModel getValue()
androidx.appcompat.widget.ResourcesWrapper:
    public android.graphics.drawable.Drawable getDrawable(int)
androidx.core.os.CancellationSignal:
    public boolean isCanceled()
    public void cancel()
    public void setOnCancelListener(androidx.core.os.CancellationSignal$OnCancelListener)
    public final void waitForCancelFinishedLocked()
    public java.lang.Object mCancellationSignalObj
androidx.recyclerview.widget.RecyclerView$SmoothScroller:
    public void start(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$LayoutManager)
    public void setTargetPosition(int)
    public androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
    public boolean isPendingInitialRun()
    public boolean isRunning()
    public int getTargetPosition()
    public int getChildPosition(android.view.View)
    public int getChildCount()
    public android.view.View findViewByPosition(int)
    public void onChildAttachedToWindow(android.view.View)
    public void normalize(android.graphics.PointF)
    public abstract void onStart()
    public abstract void onStop()
    public abstract void onSeekTargetStep(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action)
androidx.appcompat.widget.Toolbar$LayoutParams:
    public void copyMarginsFromCompat(android.view.ViewGroup$MarginLayoutParams)
androidx.navigation.ActivityNavigator:
    public androidx.navigation.ActivityNavigator$Destination createDestination()
    public androidx.navigation.NavDestination navigate(androidx.navigation.ActivityNavigator$Destination,android.os.Bundle,androidx.navigation.NavOptions,androidx.navigation.Navigator$Extras)
androidx.transition.Fade:
    public static float getStartAlpha(androidx.transition.TransitionValues,float)
    public android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues)
androidx.navigation.NavArgument:
    public boolean isDefaultValuePresent()
    public androidx.navigation.NavType getType()
    public boolean isNullable()
    public java.lang.Object getDefaultValue()
    public void putDefaultValue(java.lang.String,android.os.Bundle)
    public boolean verify(java.lang.String,android.os.Bundle)
androidx.lifecycle.MediatorLiveData:
    public void addSource(androidx.lifecycle.LiveData,androidx.lifecycle.Observer)
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup:
    public boolean isVisibleToUser(android.view.View)
    public int getHorizontalOriginalOffset()
kotlin.jvm.internal.Lambda:
    public final int arity
androidx.appcompat.app.WindowDecorActionBar:
    public static boolean checkShowingFlags(boolean,boolean,boolean)
    public void setElevation(float)
    public void completeDeferredDestroyActionMode()
    public void onWindowVisibilityChanged(int)
    public void setHomeButtonEnabled(boolean)
    public void setDisplayOptions(int,int)
    public int getNavigationMode()
    public void enableContentAnimations(boolean)
    public void showForSystem()
    public void hideForSystem()
    public void setHideOnContentScrollEnabled(boolean)
    public void doShow(boolean)
    public void doHide(boolean)
    public void onContentScrollStarted()
    public void onContentScrollStopped()
    public final androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View)
    public final void showForActionMode()
    public final void hideForActionMode()
    public final boolean shouldAnimateContextView()
    public android.app.Activity mActivity
    public android.app.Dialog mDialog
    public androidx.appcompat.widget.ScrollingTabContainerView mTabScrollView
    public java.util.ArrayList mTabs
    public int mSavedTabPosition
    public static final synthetic boolean $assertionsDisabled
androidx.lifecycle.ClassesInfoCache$MethodReference:
    public void invokeCallback(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object)
com.google.android.material.ripple.RippleUtils:
    public static final int[] PRESSED_STATE_SET
    public static final int[] HOVERED_FOCUSED_STATE_SET
    public static final int[] FOCUSED_STATE_SET
    public static final int[] HOVERED_STATE_SET
    public static final int[] SELECTED_PRESSED_STATE_SET
    public static final int[] SELECTED_HOVERED_FOCUSED_STATE_SET
    public static final int[] SELECTED_FOCUSED_STATE_SET
    public static final int[] SELECTED_HOVERED_STATE_SET
    public static final int[] SELECTED_STATE_SET
androidx.core.view.ViewCompat$UnhandledKeyEventManager:
    public boolean dispatch(android.view.View,android.view.KeyEvent)
    public boolean preDispatch(android.view.KeyEvent)
    public final android.util.SparseArray getCapturedKeys()
    public final void recalcViewsWithUnhandled()
androidx.navigation.NavType$4:
    public void put(android.os.Bundle,java.lang.String,java.lang.Long)
    public java.lang.Long get(android.os.Bundle,java.lang.String)
    public java.lang.Long parseValue(java.lang.String)
android.support.v4.media.session.MediaControllerCompatApi21$Callback
androidx.appcompat.widget.AppCompatToggleButton:
    public void <init>(android.content.Context,android.util.AttributeSet,int)
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState:
    public void invalidateSpanInfo()
    public void invalidateAnchorPositionInfo()
androidx.core.app.BundleCompat
kotlin.text.StringsKt__StringBuilderKt
androidx.recyclerview.widget.RecyclerView$SavedState$1:
    public androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel)
    public androidx.recyclerview.widget.RecyclerView$SavedState[] newArray(int)
androidx.core.app.NavUtils
androidx.core.graphics.ColorUtils:
    public static int compositeAlpha(int,int)
    public static final java.lang.ThreadLocal TEMP_ARRAY
androidx.constraintlayout.widget.Placeholder:
    public void updatePreLayout(androidx.constraintlayout.widget.ConstraintLayout)
    public void updatePostMeasure()
androidx.coordinatorlayout.widget.DirectedAcyclicGraph:
    public boolean contains(java.lang.Object)
    public void addEdge(java.lang.Object,java.lang.Object)
    public java.util.List getIncomingEdges(java.lang.Object)
    public java.util.List getOutgoingEdges(java.lang.Object)
    public boolean hasOutgoingEdges(java.lang.Object)
    public void clear()
    public java.util.ArrayList getSortedList()
    public final java.util.ArrayList getEmptyList()
    public final void poolList(java.util.ArrayList)
androidx.core.content.res.ResourcesCompat
androidx.fragment.app.FragmentTransitionImpl:
    public static java.lang.String findKeyForValue(java.util.Map,java.lang.String)
    public java.util.ArrayList prepareSetNameOverridesReordered(java.util.ArrayList)
    public void setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map)
    public void setNameOverridesOrdered(android.view.View,java.util.ArrayList,java.util.Map)
    public void scheduleNameReset(android.view.ViewGroup,java.util.ArrayList,java.util.Map)
androidx.core.view.ViewCompat$3:
    public java.lang.Boolean frameworkGet(android.view.View)
    public void frameworkSet(android.view.View,java.lang.Boolean)
    public boolean shouldUpdate(java.lang.Boolean,java.lang.Boolean)
androidx.arch.core.executor.TaskExecutor:
    public abstract void executeOnDiskIO(java.lang.Runnable)
    public abstract void postToMainThread(java.lang.Runnable)
android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy
androidx.constraintlayout.solver.widgets.Helper:
    public void add(androidx.constraintlayout.solver.widgets.ConstraintWidget)
    public void removeAllIds()
com.google.android.material.transformation.FabTransformationBehavior$1:
    public final synthetic com.google.android.material.transformation.FabTransformationBehavior this$0
androidx.databinding.Observable$OnPropertyChangedCallback
androidx.recyclerview.widget.RecyclerView$ItemDecoration:
    public void onDraw()
    public void onDrawOver()
    public void getItemOffsets(android.graphics.Rect)
    public void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView)
androidx.constraintlayout.widget.Constraints:
    public androidx.constraintlayout.widget.Constraints$LayoutParams generateLayoutParams(android.util.AttributeSet)
    public androidx.constraintlayout.widget.Constraints$LayoutParams generateDefaultLayoutParams()
android.support.v4.media.MediaBrowserCompat$CustomActionCallback
androidx.appcompat.widget.ViewStubCompat$OnInflateListener:
    public abstract void onInflate(androidx.appcompat.widget.ViewStubCompat,android.view.View)
androidx.core.view.ViewCompat$AccessibilityViewProperty:
    public void set(android.view.View,java.lang.Object)
    public final boolean frameworkAvailable()
    public final boolean extrasAvailable()
androidx.appcompat.widget.ListPopupWindow$2
kotlin.ranges.IntProgression$Companion
kotlin.text.StringsKt
androidx.activity.ImmLeaksCleaner:
    public static void initializeReflectiveFields()
    public static void <clinit>()
androidx.appcompat.widget.ScrollingTabContainerView$TabView:
    public void <init>(androidx.appcompat.widget.ScrollingTabContainerView,android.content.Context,androidx.appcompat.app.ActionBar$Tab,boolean)
    public void bindTab(androidx.appcompat.app.ActionBar$Tab)
    public void update()
    public androidx.appcompat.app.ActionBar$Tab getTab()
    public final int[] BG_ATTRS
    public android.widget.TextView mTextView
    public android.widget.ImageView mIconView
    public android.view.View mCustomView
com.google.android.material.bottomsheet.BottomSheetDialogFragment$BottomSheetDismissCallback
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$4:
    public java.lang.Float evaluate(float,java.lang.Float,java.lang.Float)
    public final synthetic com.google.android.material.floatingactionbutton.FloatingActionButtonImpl this$0
kotlin.text.StringsKt__StringsKt
androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry:
    public abstract void addPosition(int,int)
com.google.android.material.shape.ShapePath$PathArcOperation:
    public static synthetic void access$600(com.google.android.material.shape.ShapePath$PathArcOperation,float)
    public static synthetic void access$700(com.google.android.material.shape.ShapePath$PathArcOperation,float)
    public static synthetic float access$800(com.google.android.material.shape.ShapePath$PathArcOperation)
    public static synthetic float access$900(com.google.android.material.shape.ShapePath$PathArcOperation)
    public static synthetic float access$1000(com.google.android.material.shape.ShapePath$PathArcOperation)
    public static synthetic float access$1100(com.google.android.material.shape.ShapePath$PathArcOperation)
    public static synthetic float access$1200(com.google.android.material.shape.ShapePath$PathArcOperation)
    public static synthetic float access$1300(com.google.android.material.shape.ShapePath$PathArcOperation)
    public final float getLeft()
    public final float getTop()
    public final float getRight()
    public final float getBottom()
    public final void setLeft(float)
    public final void setTop(float)
    public final void setRight(float)
    public final void setBottom(float)
    public final float getStartAngle()
    public final float getSweepAngle()
    public final void setStartAngle(float)
    public final void setSweepAngle(float)
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags:
    public void setBounds(int,int,int,int)
    public void addFlags(int)
    public void resetFlags()
androidx.transition.ChangeBounds$6:
    public void set(android.view.View,android.graphics.PointF)
    public android.graphics.PointF get()
com.google.android.material.resources.TextAppearance:
    public static synthetic android.graphics.Typeface access$002(com.google.android.material.resources.TextAppearance,android.graphics.Typeface)
    public static synthetic boolean access$102(com.google.android.material.resources.TextAppearance,boolean)
    public static synthetic android.graphics.Typeface access$000(com.google.android.material.resources.TextAppearance)
    public android.graphics.Typeface getFont(android.content.Context)
    public void getFontAsync(android.content.Context,android.text.TextPaint,com.google.android.material.resources.TextAppearanceFontCallback)
    public android.graphics.Typeface getFallbackFont()
    public void updateMeasureState(android.content.Context,android.text.TextPaint,com.google.android.material.resources.TextAppearanceFontCallback)
    public final android.content.res.ColorStateList textColorHint
    public final android.content.res.ColorStateList textColorLink
    public final boolean textAllCaps
android.support.v4.media.session.MediaControllerCompat$Callback
androidx.appcompat.view.menu.BaseMenuPresenter:
    public void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder)
    public androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
    public void addItemView(android.view.View,int)
    public boolean filterLeftoverView(android.view.ViewGroup,int)
    public androidx.appcompat.view.menu.MenuPresenter$Callback getCallback()
    public androidx.appcompat.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup)
    public abstract void bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)
    public abstract boolean shouldIncludeItem(int,androidx.appcompat.view.menu.MenuItemImpl)
    public void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
    public void setId(int)
    public android.view.LayoutInflater mInflater
    public int mId
androidx.appcompat.view.StandaloneActionMode:
    public boolean mFocusable
androidx.core.view.AccessibilityDelegateCompat:
    public static java.util.List getActionList(android.view.View)
    public android.view.View$AccessibilityDelegate getBridge()
    public final boolean performClickableSpanAction(int,android.view.View)
    public final boolean isSpanStillValid(android.text.style.ClickableSpan,android.view.View)
kotlin.text.StringsKt___StringsKt
com.google.android.material.transformation.ExpandableBehavior:
    public static synthetic int access$000(com.google.android.material.transformation.ExpandableBehavior)
    public com.google.android.material.expandable.ExpandableWidget findExpandableWidget(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View)
